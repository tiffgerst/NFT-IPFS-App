{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_chainlinkfeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_targetconcentration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimal",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chainlinkfeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "getDepositValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoolValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetconcentration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "/Users/tiffanygerstmeyr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/tiffanygerstmeyr/.brownie/packages/smartcontractkit/chainlink@1.8.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "7": "contracts/TokenPool.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenPool.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        2923
      ],
      "IERC20": [
        2264
      ],
      "TokenPool": [
        989
      ]
    },
    "id": 990,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 831,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:7"
      },
      {
        "absolutePath": "/Users/tiffanygerstmeyr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 832,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 990,
        "sourceUnit": 2265,
        "src": "107:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tiffanygerstmeyr/.brownie/packages/smartcontractkit/chainlink@1.8.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 833,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 990,
        "sourceUnit": 2924,
        "src": "164:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 989,
        "linearizedBaseContracts": [
          989
        ],
        "name": "TokenPool",
        "nameLocation": "251:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 836,
            "mutability": "immutable",
            "name": "token",
            "nameLocation": "298:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 989,
            "src": "274:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$2264",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 835,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 834,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2264,
                "src": "274:6:7"
              },
              "referencedDeclaration": 2264,
              "src": "274:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2264",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "202c0131",
            "id": 838,
            "mutability": "mutable",
            "name": "chainlinkfeed",
            "nameLocation": "320:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 989,
            "src": "305:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 837,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "305:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1bc16b87",
            "id": 840,
            "mutability": "mutable",
            "name": "targetconcentration",
            "nameLocation": "350:19:7",
            "nodeType": "VariableDeclaration",
            "scope": 989,
            "src": "335:34:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 839,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "335:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 843,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "400:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 989,
            "src": "371:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 841,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2923,
                "src": "371:21:7"
              },
              "referencedDeclaration": 2923,
              "src": "371:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "76809ce3",
            "id": 845,
            "mutability": "mutable",
            "name": "decimal",
            "nameLocation": "423:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 989,
            "src": "408:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 844,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "408:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 880,
              "nodeType": "Block",
              "src": "556:199:7",
              "statements": [
                {
                  "expression": {
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 856,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 836,
                      "src": "562:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2264",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 858,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 847,
                          "src": "577:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 857,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2264,
                        "src": "570:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$2264_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "570:21:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$2264",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "562:29:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$2264",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 861,
                  "nodeType": "ExpressionStatement",
                  "src": "562:29:7"
                },
                {
                  "expression": {
                    "id": 864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 862,
                      "name": "chainlinkfeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 838,
                      "src": "597:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 863,
                      "name": "_chainlinkfeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "613:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "597:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 865,
                  "nodeType": "ExpressionStatement",
                  "src": "597:30:7"
                },
                {
                  "expression": {
                    "id": 870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 866,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "633:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 868,
                          "name": "_chainlinkfeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "664:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 867,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2923,
                        "src": "642:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2923_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "642:37:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "633:46:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 871,
                  "nodeType": "ExpressionStatement",
                  "src": "633:46:7"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 872,
                      "name": "targetconcentration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 840,
                      "src": "685:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 873,
                      "name": "_targetconcentration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "707:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "685:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "685:42:7"
                },
                {
                  "expression": {
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 876,
                      "name": "decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "733:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 877,
                      "name": "_decimal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 853,
                      "src": "743:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "733:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "733:18:7"
                }
              ]
            },
            "id": 881,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 847,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "468:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "460:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 849,
                  "mutability": "mutable",
                  "name": "_chainlinkfeed",
                  "nameLocation": "491:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "483:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 851,
                  "mutability": "mutable",
                  "name": "_targetconcentration",
                  "nameLocation": "515:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "507:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 853,
                  "mutability": "mutable",
                  "name": "_decimal",
                  "nameLocation": "545:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 881,
                  "src": "537:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "459:95:7"
            },
            "returnParameters": {
              "id": 855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:0:7"
            },
            "scope": 989,
            "src": "447:308:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 913,
              "nodeType": "Block",
              "src": "1054:150:7",
              "statements": [
                {
                  "assignments": [
                    null,
                    888,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 888,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1069:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1062:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 887,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1062:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 892,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 889,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "1084:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2922,
                      "src": "1084:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:24:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1060:48:7"
                },
                {
                  "assignments": [
                    894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 894,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "1122:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 913,
                      "src": "1114:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 893,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1114:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 898,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 895,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "1133:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$2923",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2884,
                      "src": "1133:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1114:36:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 901,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 888,
                              "src": "1172:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1164:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 899,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1164:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1164:14:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 903,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1182:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 906,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3138",
                                      "id": 904,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1187:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 905,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 894,
                                      "src": "1190:8:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1187:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 907,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1186:13:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1182:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 909,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1181:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1164:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 911,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1163:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 886,
                  "id": 912,
                  "nodeType": "Return",
                  "src": "1156:45:7"
                }
              ]
            },
            "documentation": {
              "id": 882,
              "nodeType": "StructuredDocumentation",
              "src": "756:247:7",
              "text": "@dev function to get current price of the token from the oracle \nreturns the price of the token in USD with 18 decimals \n(token has 18 decimals, oracle has 8 decimals, so we multiply by 10^10 to make oracle price same decimals as token) )"
            },
            "functionSelector": "98d5fdca",
            "id": 914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1013:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1021:2:7"
            },
            "returnParameters": {
              "id": 886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 914,
                  "src": "1046:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1045:9:7"
            },
            "scope": 989,
            "src": "1004:200:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 941,
              "nodeType": "Block",
              "src": "1424:102:7",
              "statements": [
                {
                  "assignments": [
                    921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 921,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1438:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 941,
                      "src": "1430:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1430:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 924,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 922,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "1446:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1430:26:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 929,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "1495:4:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_TokenPool_$989",
                                          "typeString": "contract TokenPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_TokenPool_$989",
                                          "typeString": "contract TokenPool"
                                        }
                                      ],
                                      "id": 928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1487:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 927,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1487:7:7",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 930,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1487:13:7",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 925,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 836,
                                    "src": "1471:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$2264",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 926,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2221,
                                  "src": "1471:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1471:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 932,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "1504:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1471:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 934,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1470:40:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1511:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 936,
                            "name": "decimal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 845,
                            "src": "1515:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1511:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1470:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 939,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1469:54:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 919,
                  "id": 940,
                  "nodeType": "Return",
                  "src": "1462:61:7"
                }
              ]
            },
            "documentation": {
              "id": 915,
              "nodeType": "StructuredDocumentation",
              "src": "1206:165:7",
              "text": "@dev function to get the current pool value in USD\nMultiplies the price of the token by number of tokens in the pool and divides by amount of token decimals "
            },
            "functionSelector": "1ba2f531",
            "id": 942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPoolValue",
            "nameLocation": "1381:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:2:7"
            },
            "returnParameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 942,
                  "src": "1416:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1416:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1415:9:7"
            },
            "scope": 989,
            "src": "1372:154:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "1744:85:7",
              "statements": [
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1758:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 966,
                      "src": "1750:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 950,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1750:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 954,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 952,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 914,
                      "src": "1766:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1750:26:7"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 955,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 945,
                                "src": "1791:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 956,
                                "name": "price",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 951,
                                "src": "1801:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1791:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 958,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1790:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1811:2:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "id": 960,
                                "name": "decimal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 845,
                                "src": "1817:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1811:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 962,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1810:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1790:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 964,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1789:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 949,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "1782:44:7"
                }
              ]
            },
            "documentation": {
              "id": 943,
              "nodeType": "StructuredDocumentation",
              "src": "1528:141:7",
              "text": "@dev function to get the usd value of the number of tokens someone wants to deposit\n@param _amount (number of tokens to be deposited)"
            },
            "functionSelector": "6e8218aa",
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositValue",
            "nameLocation": "1681:15:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 945,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1705:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "1697:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:17:7"
            },
            "returnParameters": {
              "id": 949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "1736:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:9:7"
            },
            "scope": 989,
            "src": "1672:157:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 987,
              "nodeType": "Block",
              "src": "2034:78:7",
              "statements": [
                {
                  "assignments": [
                    976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 976,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2045:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 987,
                      "src": "2040:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 975,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2040:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 982,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 979,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 970,
                        "src": "2070:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 980,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 972,
                        "src": "2080:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 977,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 836,
                        "src": "2055:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$2264",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2231,
                      "src": "2055:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2040:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 984,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "2101:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 983,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2093:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2093:16:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 986,
                  "nodeType": "ExpressionStatement",
                  "src": "2093:16:7"
                }
              ]
            },
            "documentation": {
              "id": 968,
              "nodeType": "StructuredDocumentation",
              "src": "1831:135:7",
              "text": "@dev function to send user tokens upon withdrawal\n@param receiver - who to send the tokens to\n@param amount - how much to send "
            },
            "functionSelector": "9e281a98",
            "id": 988,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawToken",
            "nameLocation": "1976:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 970,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1998:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "1990:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 972,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2016:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 988,
                  "src": "2008:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2008:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1989:34:7"
            },
            "returnParameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2034:0:7"
            },
            "scope": 989,
            "src": "1967:145:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 990,
        "src": "242:1872:7",
        "usedErrors": []
      }
    ],
    "src": "31:2089:7"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516107c93803806107c983398101604081905261002f9161008a565b6001600160a01b0393841660805260008054939094166001600160a01b03199384168117909455600280549093169093179091556001556003556100cd565b80516001600160a01b038116811461008557600080fd5b919050565b600080600080608085870312156100a057600080fd5b6100a98561006e565b93506100b76020860161006e565b6040860151606090960151949790965092505050565b6080516106d36100f6600039600081816101380152818161018d015261039f01526106d36000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806376809ce31161006657806376809ce3146100fa5780637dc0d1d01461010357806398d5fdca146101165780639e281a981461011e578063fc0c546a1461013357600080fd5b80631ba2f531146100985780631bc16b87146100b3578063202c0131146100bc5780636e8218aa146100e7575b600080fd5b6100a061015a565b6040519081526020015b60405180910390f35b6100a060015481565b6000546100cf906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b6100a06100f536600461041f565b61021a565b6100a060035481565b6002546100cf906001600160a01b031681565b6100a0610251565b61013161012c366004610438565b610376565b005b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b600080610165610251565b9050600354600a610176919061056c565b6040516370a0823160e01b815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102009190610578565b61020a9190610591565b61021491906105b0565b91505090565b600080610225610251565b9050600354600a610236919061056c565b6102408285610591565b61024a91906105b0565b9392505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb91906105f1565b5050509150506000600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610641565b60ff16905061035a816012610664565b61036590600a61056c565b61036f9083610591565b9250505090565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e919061067b565b90508061041a57600080fd5b505050565b60006020828403121561043157600080fd5b5035919050565b6000806040838503121561044b57600080fd5b82356001600160a01b038116811461046257600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156104c15781600019048211156104a7576104a7610470565b808516156104b457918102915b93841c939080029061048b565b509250929050565b6000826104d857506001610566565b816104e557506000610566565b81600181146104fb576002811461050557610521565b6001915050610566565b60ff84111561051657610516610470565b50506001821b610566565b5060208310610133831016604e8410600b8410161715610544575081810a610566565b61054e8383610486565b806000190482111561056257610562610470565b0290505b92915050565b600061024a83836104c9565b60006020828403121561058a57600080fd5b5051919050565b60008160001904831182151516156105ab576105ab610470565b500290565b6000826105cd57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff811681146105ec57600080fd5b919050565b600080600080600060a0868803121561060957600080fd5b610612866105d2565b9450602086015193506040860151925060608601519150610635608087016105d2565b90509295509295909350565b60006020828403121561065357600080fd5b815160ff8116811461024a57600080fd5b60008282101561067657610676610470565b500390565b60006020828403121561068d57600080fd5b8151801515811461024a57600080fdfea26469706673582212206d43839cc9bc7650a5bfa042432ac1cbe0da7e567b31840070aa02a4a65bd90164736f6c634300080c0033",
  "bytecodeSha1": "db11aa11d91ae9382181b1cabf366a209b6d5cb9",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "TokenPool",
  "coverageMap": {
    "branches": {
      "1": {},
      "4": {},
      "7": {
        "TokenPool.withdrawToken": {
          "4": [
            2101,
            2108,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {},
      "4": {},
      "7": {
        "TokenPool.getDepositValue": {
          "1": [
            1782,
            1826
          ]
        },
        "TokenPool.getPoolValue": {
          "0": [
            1462,
            1523
          ]
        },
        "TokenPool.getPrice": {
          "2": [
            1156,
            1201
          ]
        },
        "TokenPool.withdrawToken": {
          "3": [
            2093,
            2109
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.8.0/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/IERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100935760003560e01c806376809ce31161006657806376809ce3146100fa5780637dc0d1d01461010357806398d5fdca146101165780639e281a981461011e578063fc0c546a1461013357600080fd5b80631ba2f531146100985780631bc16b87146100b3578063202c0131146100bc5780636e8218aa146100e7575b600080fd5b6100a061015a565b6040519081526020015b60405180910390f35b6100a060015481565b6000546100cf906001600160a01b031681565b6040516001600160a01b0390911681526020016100aa565b6100a06100f536600461041f565b61021a565b6100a060035481565b6002546100cf906001600160a01b031681565b6100a0610251565b61013161012c366004610438565b610376565b005b6100cf7f000000000000000000000000000000000000000000000000000000000000000081565b600080610165610251565b9050600354600a610176919061056c565b6040516370a0823160e01b815230600482015282907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102009190610578565b61020a9190610591565b61021491906105b0565b91505090565b600080610225610251565b9050600354600a610236919061056c565b6102408285610591565b61024a91906105b0565b9392505050565b600080600260009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb91906105f1565b5050509150506000600260009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610641565b60ff16905061035a816012610664565b61036590600a61056c565b61036f9083610591565b9250505090565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156103ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040e919061067b565b90508061041a57600080fd5b505050565b60006020828403121561043157600080fd5b5035919050565b6000806040838503121561044b57600080fd5b82356001600160a01b038116811461046257600080fd5b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156104c15781600019048211156104a7576104a7610470565b808516156104b457918102915b93841c939080029061048b565b509250929050565b6000826104d857506001610566565b816104e557506000610566565b81600181146104fb576002811461050557610521565b6001915050610566565b60ff84111561051657610516610470565b50506001821b610566565b5060208310610133831016604e8410600b8410161715610544575081810a610566565b61054e8383610486565b806000190482111561056257610562610470565b0290505b92915050565b600061024a83836104c9565b60006020828403121561058a57600080fd5b5051919050565b60008160001904831182151516156105ab576105ab610470565b500290565b6000826105cd57634e487b7160e01b600052601260045260246000fd5b500490565b805169ffffffffffffffffffff811681146105ec57600080fd5b919050565b600080600080600060a0868803121561060957600080fd5b610612866105d2565b9450602086015193506040860151925060608601519150610635608087016105d2565b90509295509295909350565b60006020828403121561065357600080fd5b815160ff8116811461024a57600080fd5b60008282101561067657610676610470565b500390565b60006020828403121561068d57600080fd5b8151801515811461024a57600080fdfea26469706673582212206d43839cc9bc7650a5bfa042432ac1cbe0da7e567b31840070aa02a4a65bd90164736f6c634300080c0033",
  "deployedSourceMap": "242:1872:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:154;;;:::i;:::-;;;160:25:12;;;148:2;133:18;1372:154:7;;;;;;;;335:34;;;;;;305:28;;;;;-1:-1:-1;;;;;305:28:7;;;;;;-1:-1:-1;;;;;360:32:12;;;342:51;;330:2;315:18;305:28:7;196:203:12;1672:157:7;;;;;;:::i;:::-;;:::i;408:22::-;;;;;;371:35;;;;;-1:-1:-1;;;;;371:35:7;;;1004:200;;;:::i;1967:145::-;;;;;;:::i;:::-;;:::i;:::-;;274:29;;;;;1372:154;1416:7;1430:13;1446:10;:8;:10::i;:::-;1430:26;;1515:7;;1511:2;:11;;;;:::i;:::-;1471:30;;-1:-1:-1;;;1471:30:7;;1495:4;1471:30;;;342:51:12;1504:5:7;;1471;-1:-1:-1;;;;;1471:15:7;;;;315:18:12;;1471:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;;;;:::i;:::-;1470:52;;;;:::i;:::-;1462:61;;;1372:154;:::o;1672:157::-;1736:7;1750:13;1766:10;:8;:10::i;:::-;1750:26;;1817:7;;1811:2;:13;;;;:::i;:::-;1791:15;1801:5;1791:7;:15;:::i;:::-;1790:35;;;;:::i;:::-;1782:44;1672:157;-1:-1:-1;;;1672:157:7:o;1004:200::-;1046:7;1062:12;1084:6;;;;;;;;;-1:-1:-1;;;;;1084:6:7;-1:-1:-1;;;;;1084:22:7;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1060:48;;;;;;1114:16;1133:6;;;;;;;;;-1:-1:-1;;;;;1133:6:7;-1:-1:-1;;;;;1133:15:7;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1114:36;;;-1:-1:-1;1187:11:7;1114:36;1187:2;:11;:::i;:::-;1182:17;;:2;:17;:::i;:::-;1164:36;;1172:5;1164:36;:::i;:::-;1156:45;;;;1004:200;:::o;1967:145::-;2055:32;;-1:-1:-1;;;2055:32:7;;-1:-1:-1;;;;;4761:32:12;;;2055::7;;;4743:51:12;4810:18;;;4803:34;;;2040:12:7;;2055:5;:14;;;;;;4716:18:12;;2055:32:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2040:47;;2101:7;2093:16;;;;;;2034:78;1967:145;;:::o;404:180:12:-;463:6;516:2;504:9;495:7;491:23;487:32;484:52;;;532:1;529;522:12;484:52;-1:-1:-1;555:23:12;;404:180;-1:-1:-1;404:180:12:o;827:354::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;998:23;;-1:-1:-1;;;;;1050:31:12;;1040:42;;1030:70;;1096:1;1093;1086:12;1030:70;1119:5;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;827:354:12:o;1409:127::-;1470:10;1465:3;1461:20;1458:1;1451:31;1501:4;1498:1;1491:15;1525:4;1522:1;1515:15;1541:422;1630:1;1673:5;1630:1;1687:270;1708:7;1698:8;1695:21;1687:270;;;1767:4;1763:1;1759:6;1755:17;1749:4;1746:27;1743:53;;;1776:18;;:::i;:::-;1826:7;1816:8;1812:22;1809:55;;;1846:16;;;;1809:55;1925:22;;;;1885:15;;;;1687:270;;;1691:3;1541:422;;;;;:::o;1968:806::-;2017:5;2047:8;2037:80;;-1:-1:-1;2088:1:12;2102:5;;2037:80;2136:4;2126:76;;-1:-1:-1;2173:1:12;2187:5;;2126:76;2218:4;2236:1;2231:59;;;;2304:1;2299:130;;;;2211:218;;2231:59;2261:1;2252:10;;2275:5;;;2299:130;2336:3;2326:8;2323:17;2320:43;;;2343:18;;:::i;:::-;-1:-1:-1;;2399:1:12;2385:16;;2414:5;;2211:218;;2513:2;2503:8;2500:16;2494:3;2488:4;2485:13;2481:36;2475:2;2465:8;2462:16;2457:2;2451:4;2448:12;2444:35;2441:77;2438:159;;;-1:-1:-1;2550:19:12;;;2582:5;;2438:159;2629:34;2654:8;2648:4;2629:34;:::i;:::-;2699:6;2695:1;2691:6;2687:19;2678:7;2675:32;2672:58;;;2710:18;;:::i;:::-;2748:20;;-1:-1:-1;1968:806:12;;;;;:::o;2779:131::-;2839:5;2868:36;2895:8;2889:4;2868:36;:::i;2915:184::-;2985:6;3038:2;3026:9;3017:7;3013:23;3009:32;3006:52;;;3054:1;3051;3044:12;3006:52;-1:-1:-1;3077:16:12;;2915:184;-1:-1:-1;2915:184:12:o;3104:168::-;3144:7;3210:1;3206;3202:6;3198:14;3195:1;3192:21;3187:1;3180:9;3173:17;3169:45;3166:71;;;3217:18;;:::i;:::-;-1:-1:-1;3257:9:12;;3104:168::o;3277:217::-;3317:1;3343;3333:132;;3387:10;3382:3;3378:20;3375:1;3368:31;3422:4;3419:1;3412:15;3450:4;3447:1;3440:15;3333:132;-1:-1:-1;3479:9:12;;3277:217::o;3499:179::-;3577:13;;3630:22;3619:34;;3609:45;;3599:73;;3668:1;3665;3658:12;3599:73;3499:179;;;:::o;3683:473::-;3786:6;3794;3802;3810;3818;3871:3;3859:9;3850:7;3846:23;3842:33;3839:53;;;3888:1;3885;3878:12;3839:53;3911:39;3940:9;3911:39;:::i;:::-;3901:49;;3990:2;3979:9;3975:18;3969:25;3959:35;;4034:2;4023:9;4019:18;4013:25;4003:35;;4078:2;4067:9;4063:18;4057:25;4047:35;;4101:49;4145:3;4134:9;4130:19;4101:49;:::i;:::-;4091:59;;3683:473;;;;;;;;:::o;4161:273::-;4229:6;4282:2;4270:9;4261:7;4257:23;4253:32;4250:52;;;4298:1;4295;4288:12;4250:52;4330:9;4324:16;4380:4;4373:5;4369:16;4362:5;4359:27;4349:55;;4400:1;4397;4390:12;4439:125;4479:4;4507:1;4504;4501:8;4498:34;;;4512:18;;:::i;:::-;-1:-1:-1;4549:9:12;;4439:125::o;4848:277::-;4915:6;4968:2;4956:9;4947:7;4943:23;4939:32;4936:52;;;4984:1;4981;4974:12;4936:52;5016:9;5010:16;5069:5;5062:13;5055:21;5048:5;5045:32;5035:60;;5091:1;5088;5081:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "getDepositValue(uint256)": {
        "details": "function to get the usd value of the number of tokens someone wants to deposit",
        "params": {
          "_amount": "(number of tokens to be deposited)"
        }
      },
      "getPoolValue()": {
        "details": "function to get the current pool value in USD Multiplies the price of the token by number of tokens in the pool and divides by amount of token decimals "
      },
      "getPrice()": {
        "details": "function to get current price of the token from the oracle  returns the price of the token in USD with 18 decimals  (token has 18 decimals, oracle has 8 decimals, so we multiply by 10^10 to make oracle price same decimals as token) )"
      },
      "withdrawToken(address,uint256)": {
        "details": "function to send user tokens upon withdrawal",
        "params": {
          "amount": "- how much to send ",
          "receiver": "- who to send the tokens to"
        }
      }
    },
    "version": 1
  },
  "offset": [
    242,
    2114
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x76809CE3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x76809CE3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BA2F531 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x1BC16B87 EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x202C0131 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x6E8218AA EQ PUSH2 0xE7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xCF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAA JUMP JUMPDEST PUSH2 0xA0 PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x41F JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH2 0xA0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0xCF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xA0 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x376 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCF PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x165 PUSH2 0x251 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x578 JUMP JUMPDEST PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x225 PUSH2 0x251 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD PUSH1 0xA PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x240 DUP3 DUP6 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x5F1 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x326 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0x35A DUP2 PUSH1 0x12 PUSH2 0x664 JUMP JUMPDEST PUSH2 0x365 SWAP1 PUSH1 0xA PUSH2 0x56C JUMP JUMPDEST PUSH2 0x36F SWAP1 DUP4 PUSH2 0x591 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x67B JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x4C1 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x470 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x4B4 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x48B JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4D8 JUMPI POP PUSH1 0x1 PUSH2 0x566 JUMP JUMPDEST DUP2 PUSH2 0x4E5 JUMPI POP PUSH1 0x0 PUSH2 0x566 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4FB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x505 JUMPI PUSH2 0x521 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x566 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x516 PUSH2 0x470 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x566 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x544 JUMPI POP DUP2 DUP2 EXP PUSH2 0x566 JUMP JUMPDEST PUSH2 0x54E DUP4 DUP4 PUSH2 0x486 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x470 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24A DUP4 DUP4 PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5AB JUMPI PUSH2 0x5AB PUSH2 0x470 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x5CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x612 DUP7 PUSH2 0x5D2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x635 PUSH1 0x80 DUP8 ADD PUSH2 0x5D2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x653 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x676 JUMPI PUSH2 0x676 PUSH2 0x470 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x68D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x43839CC9BC7650A5BFA042432AC1 0xCB 0xE0 0xDA PUSH31 0x567B31840070AA02A4A65BD90164736F6C634300080C003300000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x93"
    },
    "25": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x76809CE3"
    },
    "38": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x66"
    },
    "42": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x76809CE3"
    },
    "49": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFA"
    },
    "53": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x7DC0D1D0"
    },
    "60": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x103"
    },
    "64": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x98D5FDCA"
    },
    "71": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "75": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9E281A98"
    },
    "82": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11E"
    },
    "86": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFC0C546A"
    },
    "93": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x133"
    },
    "97": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "101": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "REVERT",
      "path": "7"
    },
    "102": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "103": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1BA2F531"
    },
    "109": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x98"
    },
    "113": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1BC16B87"
    },
    "120": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB3"
    },
    "124": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x202C0131"
    },
    "131": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBC"
    },
    "135": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E8218AA"
    },
    "142": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7"
    },
    "146": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "150": {
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "DUP1",
      "path": "7"
    },
    "151": {
      "first_revert": true,
      "fn": null,
      "offset": [
        242,
        2114
      ],
      "op": "REVERT",
      "path": "7"
    },
    "152": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "153": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0"
    },
    "156": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A"
    },
    "159": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMP",
      "path": "7"
    },
    "160": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "161": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "163": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "164": {
      "op": "SWAP1"
    },
    "165": {
      "op": "DUP2"
    },
    "166": {
      "op": "MSTORE"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "169": {
      "op": "ADD"
    },
    "170": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "171": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "173": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "174": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "176": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "SUB",
      "path": "7"
    },
    "177": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "178": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "RETURN",
      "path": "7"
    },
    "179": {
      "offset": [
        335,
        369
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "180": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        335,
        369
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0"
    },
    "183": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        335,
        369
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "185": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        335,
        369
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "186": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        335,
        369
      ],
      "op": "DUP2",
      "path": "7"
    },
    "187": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        335,
        369
      ],
      "op": "JUMP",
      "path": "7"
    },
    "188": {
      "offset": [
        305,
        333
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "189": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "191": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "192": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "195": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "offset": [
        305,
        333
      ],
      "op": "AND",
      "path": "7"
    },
    "205": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "DUP2",
      "path": "7"
    },
    "206": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "JUMP",
      "path": "7"
    },
    "207": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "208": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "210": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        305,
        333
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "217": {
      "op": "SHL"
    },
    "218": {
      "op": "SUB"
    },
    "219": {
      "op": "SWAP1"
    },
    "220": {
      "op": "SWAP2"
    },
    "221": {
      "op": "AND"
    },
    "222": {
      "op": "DUP2"
    },
    "223": {
      "op": "MSTORE"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "226": {
      "op": "ADD"
    },
    "227": {
      "offset": [
        305,
        333
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA"
    },
    "230": {
      "op": "JUMP"
    },
    "231": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "232": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0"
    },
    "235": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF5"
    },
    "238": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "239": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "241": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41F"
    },
    "244": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMP",
      "path": "7"
    },
    "245": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "246": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21A"
    },
    "249": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMP",
      "path": "7"
    },
    "250": {
      "offset": [
        408,
        430
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "251": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        408,
        430
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0"
    },
    "254": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        408,
        430
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "256": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        408,
        430
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "257": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        408,
        430
      ],
      "op": "DUP2",
      "path": "7"
    },
    "258": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        408,
        430
      ],
      "op": "JUMP",
      "path": "7"
    },
    "259": {
      "offset": [
        371,
        406
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "260": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "262": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "263": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "266": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "273": {
      "op": "SHL"
    },
    "274": {
      "op": "SUB"
    },
    "275": {
      "offset": [
        371,
        406
      ],
      "op": "AND",
      "path": "7"
    },
    "276": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "DUP2",
      "path": "7"
    },
    "277": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        371,
        406
      ],
      "op": "JUMP",
      "path": "7"
    },
    "278": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1004,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "279": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1004,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA0"
    },
    "282": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1004,
        1204
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x251"
    },
    "285": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1004,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "286": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "287": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x131"
    },
    "290": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12C"
    },
    "293": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "294": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "296": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x438"
    },
    "299": {
      "fn": "TokenPool.withdrawToken",
      "jump": "i",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "300": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "301": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x376"
    },
    "304": {
      "fn": "TokenPool.withdrawToken",
      "jump": "i",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "305": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "306": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "STOP",
      "path": "7"
    },
    "307": {
      "offset": [
        274,
        303
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "308": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        274,
        303
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCF"
    },
    "311": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        274,
        303
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "344": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        274,
        303
      ],
      "op": "DUP2",
      "path": "7"
    },
    "345": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        274,
        303
      ],
      "op": "JUMP",
      "path": "7"
    },
    "346": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "347": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1416,
        1423
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "349": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1430,
        1443
      ],
      "op": "DUP1",
      "path": "7"
    },
    "350": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1446,
        1456
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x165"
    },
    "353": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1446,
        1454
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x251"
    },
    "356": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1446,
        1456
      ],
      "op": "JUMP",
      "path": "7"
    },
    "357": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1446,
        1456
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "358": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1430,
        1456
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "359": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1430,
        1456
      ],
      "op": "POP",
      "path": "7"
    },
    "360": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1515,
        1522
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x3"
    },
    "362": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1515,
        1522
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "363": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1513
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "365": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x176"
    },
    "368": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1522
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "369": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1522
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "370": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x56C"
    },
    "373": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1511,
        1522
      ],
      "op": "JUMP",
      "path": "7"
    },
    "374": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1511,
        1522
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "375": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "377": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "378": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "383": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "385": {
      "op": "SHL"
    },
    "386": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP2",
      "path": "7"
    },
    "387": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "388": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1495,
        1499
      ],
      "op": "ADDRESS",
      "path": "7"
    },
    "389": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "391": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP3",
      "path": "7"
    },
    "392": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ADD",
      "path": "7"
    },
    "393": {
      "op": "MSTORE"
    },
    "394": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1504,
        1509
      ],
      "op": "DUP3",
      "path": "7"
    },
    "395": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1504,
        1509
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "396": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1476
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1486
      ],
      "op": "AND",
      "path": "7"
    },
    "438": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1486
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "439": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1486
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "444": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1486
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "450": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "452": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "453": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP1",
      "path": "7"
    },
    "454": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP4",
      "path": "7"
    },
    "455": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "SUB",
      "path": "7"
    },
    "456": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP2",
      "path": "7"
    },
    "457": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP7",
      "path": "7"
    },
    "458": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "GAS",
      "path": "7"
    },
    "459": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "460": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "461": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP1",
      "path": "7"
    },
    "462": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "463": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DC"
    },
    "466": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "467": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "468": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "470": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP1",
      "path": "7"
    },
    "471": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "472": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "473": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "475": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "REVERT",
      "path": "7"
    },
    "476": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "477": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "POP",
      "path": "7"
    },
    "478": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "POP",
      "path": "7"
    },
    "479": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "POP",
      "path": "7"
    },
    "480": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "POP",
      "path": "7"
    },
    "481": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "483": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "484": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "485": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "487": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "NOT",
      "path": "7"
    },
    "488": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "490": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP3",
      "path": "7"
    },
    "491": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ADD",
      "path": "7"
    },
    "492": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "AND",
      "path": "7"
    },
    "493": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP3",
      "path": "7"
    },
    "494": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ADD",
      "path": "7"
    },
    "495": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP1",
      "path": "7"
    },
    "496": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "498": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "499": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "POP",
      "path": "7"
    },
    "500": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "DUP2",
      "path": "7"
    },
    "501": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "ADD",
      "path": "7"
    },
    "502": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "503": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x200"
    },
    "506": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "507": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "508": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x578"
    },
    "511": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1471,
        1501
      ],
      "op": "JUMP",
      "path": "7"
    },
    "512": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1501
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "513": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20A"
    },
    "516": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1509
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "517": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1509
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "518": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1509
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x591"
    },
    "521": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1471,
        1509
      ],
      "op": "JUMP",
      "path": "7"
    },
    "522": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1471,
        1509
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "523": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1470,
        1522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x214"
    },
    "526": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1470,
        1522
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "527": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1470,
        1522
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "528": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1470,
        1522
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B0"
    },
    "531": {
      "fn": "TokenPool.getPoolValue",
      "jump": "i",
      "offset": [
        1470,
        1522
      ],
      "op": "JUMP",
      "path": "7"
    },
    "532": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1470,
        1522
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "533": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1462,
        1523
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "534": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1462,
        1523
      ],
      "op": "POP",
      "path": "7"
    },
    "535": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1462,
        1523
      ],
      "op": "POP",
      "path": "7"
    },
    "536": {
      "fn": "TokenPool.getPoolValue",
      "offset": [
        1372,
        1526
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "537": {
      "fn": "TokenPool.getPoolValue",
      "jump": "o",
      "offset": [
        1372,
        1526
      ],
      "op": "JUMP",
      "path": "7"
    },
    "538": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "539": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1736,
        1743
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "541": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1750,
        1763
      ],
      "op": "DUP1",
      "path": "7"
    },
    "542": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1766,
        1776
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x225"
    },
    "545": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1766,
        1774
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x251"
    },
    "548": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1766,
        1776
      ],
      "op": "JUMP",
      "path": "7"
    },
    "549": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1766,
        1776
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "550": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1750,
        1776
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "551": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1750,
        1776
      ],
      "op": "POP",
      "path": "7"
    },
    "552": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1817,
        1824
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x3"
    },
    "554": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1817,
        1824
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "555": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1813
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "557": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x236"
    },
    "560": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "561": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1824
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "562": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1824
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x56C"
    },
    "565": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMP",
      "path": "7"
    },
    "566": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1811,
        1824
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "567": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1791,
        1806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x240"
    },
    "570": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1801,
        1806
      ],
      "op": "DUP3",
      "path": "7"
    },
    "571": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1791,
        1798
      ],
      "op": "DUP6",
      "path": "7"
    },
    "572": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1791,
        1806
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x591"
    },
    "575": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1791,
        1806
      ],
      "op": "JUMP",
      "path": "7"
    },
    "576": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1791,
        1806
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "577": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1790,
        1825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24A"
    },
    "580": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1790,
        1825
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "581": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1790,
        1825
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "582": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1790,
        1825
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5B0"
    },
    "585": {
      "fn": "TokenPool.getDepositValue",
      "jump": "i",
      "offset": [
        1790,
        1825
      ],
      "op": "JUMP",
      "path": "7"
    },
    "586": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1790,
        1825
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "587": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1782,
        1826
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "588": {
      "fn": "TokenPool.getDepositValue",
      "offset": [
        1672,
        1829
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "TokenPool.getDepositValue",
      "jump": "o",
      "offset": [
        1672,
        1829
      ],
      "op": "JUMP",
      "path": "7"
    },
    "593": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1004,
        1204
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "594": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1046,
        1053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "596": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1062,
        1074
      ],
      "op": "DUP1",
      "path": "7"
    },
    "597": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "599": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "601": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "602": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "603": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "604": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "607": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "EXP",
      "path": "7"
    },
    "608": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "609": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "DIV",
      "path": "7"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "616": {
      "op": "SHL"
    },
    "617": {
      "op": "SUB"
    },
    "618": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1090
      ],
      "op": "AND",
      "path": "7"
    },
    "619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "op": "SUB"
    },
    "627": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1106
      ],
      "op": "AND",
      "path": "7"
    },
    "628": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1106
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFEAF968C"
    },
    "633": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "635": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "636": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP2",
      "path": "7"
    },
    "637": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "642": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "AND",
      "path": "7"
    },
    "643": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "645": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "SHL",
      "path": "7"
    },
    "646": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP2",
      "path": "7"
    },
    "647": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "648": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "650": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ADD",
      "path": "7"
    },
    "651": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA0"
    },
    "653": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "655": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "656": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP1",
      "path": "7"
    },
    "657": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP4",
      "path": "7"
    },
    "658": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "SUB",
      "path": "7"
    },
    "659": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP2",
      "path": "7"
    },
    "660": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP7",
      "path": "7"
    },
    "661": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "GAS",
      "path": "7"
    },
    "662": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "663": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "664": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP1",
      "path": "7"
    },
    "665": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "666": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A7"
    },
    "669": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "670": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "671": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "673": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP1",
      "path": "7"
    },
    "674": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "675": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "676": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "678": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "REVERT",
      "path": "7"
    },
    "679": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "680": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "681": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "682": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "683": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "684": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "686": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "687": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "688": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "690": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "NOT",
      "path": "7"
    },
    "691": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "693": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP3",
      "path": "7"
    },
    "694": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ADD",
      "path": "7"
    },
    "695": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "AND",
      "path": "7"
    },
    "696": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP3",
      "path": "7"
    },
    "697": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ADD",
      "path": "7"
    },
    "698": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP1",
      "path": "7"
    },
    "699": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "701": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "702": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "703": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "DUP2",
      "path": "7"
    },
    "704": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "ADD",
      "path": "7"
    },
    "705": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "706": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2CB"
    },
    "709": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "710": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "711": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F1"
    },
    "714": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1084,
        1108
      ],
      "op": "JUMP",
      "path": "7"
    },
    "715": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1084,
        1108
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "716": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "717": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "718": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "719": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "720": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "721": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1060,
        1108
      ],
      "op": "POP",
      "path": "7"
    },
    "722": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1114,
        1130
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "724": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "726": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "728": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "729": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "730": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "731": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "734": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "EXP",
      "path": "7"
    },
    "735": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "736": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "DIV",
      "path": "7"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1139
      ],
      "op": "AND",
      "path": "7"
    },
    "746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "752": {
      "op": "SHL"
    },
    "753": {
      "op": "SUB"
    },
    "754": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1148
      ],
      "op": "AND",
      "path": "7"
    },
    "755": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1148
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "760": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "762": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "763": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP2",
      "path": "7"
    },
    "764": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "769": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "AND",
      "path": "7"
    },
    "770": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "772": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "SHL",
      "path": "7"
    },
    "773": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP2",
      "path": "7"
    },
    "774": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "775": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "777": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ADD",
      "path": "7"
    },
    "778": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "780": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "782": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "783": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "784": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP4",
      "path": "7"
    },
    "785": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "SUB",
      "path": "7"
    },
    "786": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP2",
      "path": "7"
    },
    "787": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP7",
      "path": "7"
    },
    "788": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "GAS",
      "path": "7"
    },
    "789": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "STATICCALL",
      "path": "7"
    },
    "790": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "791": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "792": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "793": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x326"
    },
    "796": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "797": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "798": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "800": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "801": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "802": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "803": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "805": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "REVERT",
      "path": "7"
    },
    "806": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "807": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "POP",
      "path": "7"
    },
    "808": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "POP",
      "path": "7"
    },
    "809": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "POP",
      "path": "7"
    },
    "810": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "POP",
      "path": "7"
    },
    "811": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "813": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "814": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "815": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "817": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "NOT",
      "path": "7"
    },
    "818": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "820": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP3",
      "path": "7"
    },
    "821": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ADD",
      "path": "7"
    },
    "822": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "AND",
      "path": "7"
    },
    "823": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP3",
      "path": "7"
    },
    "824": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ADD",
      "path": "7"
    },
    "825": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP1",
      "path": "7"
    },
    "826": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "828": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "829": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "POP",
      "path": "7"
    },
    "830": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "DUP2",
      "path": "7"
    },
    "831": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "ADD",
      "path": "7"
    },
    "832": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "833": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34A"
    },
    "836": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "837": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "838": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x641"
    },
    "841": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1133,
        1150
      ],
      "op": "JUMP",
      "path": "7"
    },
    "842": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1133,
        1150
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "843": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1114,
        1150
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "845": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1114,
        1150
      ],
      "op": "AND",
      "path": "7"
    },
    "846": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1114,
        1150
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1187,
        1198
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 2,
      "value": "0x35A"
    },
    "851": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1114,
        1150
      ],
      "op": "DUP2",
      "path": "7"
    },
    "852": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1187,
        1189
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x12"
    },
    "854": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1187,
        1198
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x664"
    },
    "857": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1187,
        1198
      ],
      "op": "JUMP",
      "path": "7"
    },
    "858": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1187,
        1198
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "859": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1182,
        1199
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x365"
    },
    "862": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1182,
        1199
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "863": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1182,
        1184
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "865": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1182,
        1199
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x56C"
    },
    "868": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1182,
        1199
      ],
      "op": "JUMP",
      "path": "7"
    },
    "869": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1182,
        1199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "870": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1164,
        1200
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x36F"
    },
    "873": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1164,
        1200
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "874": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1172,
        1177
      ],
      "op": "DUP4",
      "path": "7"
    },
    "875": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1164,
        1200
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x591"
    },
    "878": {
      "fn": "TokenPool.getPrice",
      "jump": "i",
      "offset": [
        1164,
        1200
      ],
      "op": "JUMP",
      "path": "7"
    },
    "879": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1164,
        1200
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "880": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1156,
        1201
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "881": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1156,
        1201
      ],
      "op": "POP",
      "path": "7"
    },
    "882": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1156,
        1201
      ],
      "op": "POP",
      "path": "7"
    },
    "883": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1156,
        1201
      ],
      "op": "POP",
      "path": "7"
    },
    "884": {
      "fn": "TokenPool.getPrice",
      "offset": [
        1004,
        1204
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "885": {
      "fn": "TokenPool.getPrice",
      "jump": "o",
      "offset": [
        1004,
        1204
      ],
      "op": "JUMP",
      "path": "7"
    },
    "886": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "887": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "889": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "890": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "897": {
      "op": "SHL"
    },
    "898": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "899": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "906": {
      "op": "SHL"
    },
    "907": {
      "op": "SUB"
    },
    "908": {
      "op": "DUP4"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "AND"
    },
    "911": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "913": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP4",
      "path": "7"
    },
    "914": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ADD",
      "path": "7"
    },
    "915": {
      "op": "MSTORE"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "918": {
      "op": "DUP3"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "op": "DUP4"
    },
    "921": {
      "op": "SWAP1"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2040,
        2052
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "925": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2040,
        2052
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "926": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2060
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x0"
    },
    "959": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "960": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "961": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "AND",
      "path": "7"
    },
    "962": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "963": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "968": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2069
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "974": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "976": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "977": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "978": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP4",
      "path": "7"
    },
    "979": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "SUB",
      "path": "7"
    },
    "980": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "981": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "983": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP8",
      "path": "7"
    },
    "984": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "GAS",
      "path": "7"
    },
    "985": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "CALL",
      "path": "7"
    },
    "986": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "987": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "988": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "989": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3EA"
    },
    "992": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "993": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "994": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "996": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "997": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "RETURNDATACOPY",
      "path": "7"
    },
    "998": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "999": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1001": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1002": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1003": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1004": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1005": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1006": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1007": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1009": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1010": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "RETURNDATASIZE",
      "path": "7"
    },
    "1011": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1013": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "NOT",
      "path": "7"
    },
    "1014": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1016": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1017": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ADD",
      "path": "7"
    },
    "1018": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "AND",
      "path": "7"
    },
    "1019": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1020": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ADD",
      "path": "7"
    },
    "1021": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1022": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1024": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1025": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1026": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1027": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "ADD",
      "path": "7"
    },
    "1028": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1029": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x40E"
    },
    "1032": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1033": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1034": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67B"
    },
    "1037": {
      "fn": "TokenPool.withdrawToken",
      "jump": "i",
      "offset": [
        2055,
        2087
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1038": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2055,
        2087
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1039": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2040,
        2087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1040": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2040,
        2087
      ],
      "op": "POP",
      "path": "7"
    },
    "1041": {
      "branch": 4,
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2101,
        2108
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 3
    },
    "1042": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x41A"
    },
    "1045": {
      "branch": 4,
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1046": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1048": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1049": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1050": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2093,
        2109
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1051": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        2034,
        2112
      ],
      "op": "POP",
      "path": "7"
    },
    "1052": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "POP",
      "path": "7"
    },
    "1053": {
      "fn": "TokenPool.withdrawToken",
      "offset": [
        1967,
        2112
      ],
      "op": "POP",
      "path": "7"
    },
    "1054": {
      "fn": "TokenPool.withdrawToken",
      "jump": "o",
      "offset": [
        1967,
        2112
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1055": {
      "op": "JUMPDEST"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1060": {
      "op": "DUP3"
    },
    "1061": {
      "op": "DUP5"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "op": "SLT"
    },
    "1064": {
      "op": "ISZERO"
    },
    "1065": {
      "op": "PUSH2",
      "value": "0x431"
    },
    "1068": {
      "op": "JUMPI"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1071": {
      "op": "DUP1"
    },
    "1072": {
      "op": "REVERT"
    },
    "1073": {
      "op": "JUMPDEST"
    },
    "1074": {
      "op": "POP"
    },
    "1075": {
      "op": "CALLDATALOAD"
    },
    "1076": {
      "op": "SWAP2"
    },
    "1077": {
      "op": "SWAP1"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "jump": "o",
      "op": "JUMP"
    },
    "1080": {
      "op": "JUMPDEST"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1083": {
      "op": "DUP1"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1086": {
      "op": "DUP4"
    },
    "1087": {
      "op": "DUP6"
    },
    "1088": {
      "op": "SUB"
    },
    "1089": {
      "op": "SLT"
    },
    "1090": {
      "op": "ISZERO"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x44B"
    },
    "1094": {
      "op": "JUMPI"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "op": "REVERT"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "CALLDATALOAD"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1108": {
      "op": "SHL"
    },
    "1109": {
      "op": "SUB"
    },
    "1110": {
      "op": "DUP2"
    },
    "1111": {
      "op": "AND"
    },
    "1112": {
      "op": "DUP2"
    },
    "1113": {
      "op": "EQ"
    },
    "1114": {
      "op": "PUSH2",
      "value": "0x462"
    },
    "1117": {
      "op": "JUMPI"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1120": {
      "op": "DUP1"
    },
    "1121": {
      "op": "REVERT"
    },
    "1122": {
      "op": "JUMPDEST"
    },
    "1123": {
      "op": "SWAP5"
    },
    "1124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1126": {
      "op": "SWAP4"
    },
    "1127": {
      "op": "SWAP1"
    },
    "1128": {
      "op": "SWAP4"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "CALLDATALOAD"
    },
    "1131": {
      "op": "SWAP4"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "op": "POP"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "jump": "o",
      "op": "JUMP"
    },
    "1136": {
      "op": "JUMPDEST"
    },
    "1137": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1152": {
      "op": "MSTORE"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1157": {
      "op": "REVERT"
    },
    "1158": {
      "op": "JUMPDEST"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1161": {
      "op": "DUP2"
    },
    "1162": {
      "op": "DUP2"
    },
    "1163": {
      "op": "JUMPDEST"
    },
    "1164": {
      "op": "DUP1"
    },
    "1165": {
      "op": "DUP6"
    },
    "1166": {
      "op": "GT"
    },
    "1167": {
      "op": "ISZERO"
    },
    "1168": {
      "op": "PUSH2",
      "value": "0x4C1"
    },
    "1171": {
      "op": "JUMPI"
    },
    "1172": {
      "op": "DUP2"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1175": {
      "op": "NOT"
    },
    "1176": {
      "op": "DIV"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "GT"
    },
    "1179": {
      "op": "ISZERO"
    },
    "1180": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1183": {
      "op": "JUMPI"
    },
    "1184": {
      "op": "PUSH2",
      "value": "0x4A7"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1190": {
      "jump": "i",
      "op": "JUMP"
    },
    "1191": {
      "op": "JUMPDEST"
    },
    "1192": {
      "op": "DUP1"
    },
    "1193": {
      "op": "DUP6"
    },
    "1194": {
      "op": "AND"
    },
    "1195": {
      "op": "ISZERO"
    },
    "1196": {
      "op": "PUSH2",
      "value": "0x4B4"
    },
    "1199": {
      "op": "JUMPI"
    },
    "1200": {
      "op": "SWAP2"
    },
    "1201": {
      "op": "DUP2"
    },
    "1202": {
      "op": "MUL"
    },
    "1203": {
      "op": "SWAP2"
    },
    "1204": {
      "op": "JUMPDEST"
    },
    "1205": {
      "op": "SWAP4"
    },
    "1206": {
      "op": "DUP5"
    },
    "1207": {
      "op": "SHR"
    },
    "1208": {
      "op": "SWAP4"
    },
    "1209": {
      "op": "SWAP1"
    },
    "1210": {
      "op": "DUP1"
    },
    "1211": {
      "op": "MUL"
    },
    "1212": {
      "op": "SWAP1"
    },
    "1213": {
      "op": "PUSH2",
      "value": "0x48B"
    },
    "1216": {
      "op": "JUMP"
    },
    "1217": {
      "op": "JUMPDEST"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "op": "SWAP3"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "op": "SWAP3"
    },
    "1222": {
      "op": "SWAP1"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "jump": "o",
      "op": "JUMP"
    },
    "1225": {
      "op": "JUMPDEST"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1228": {
      "op": "DUP3"
    },
    "1229": {
      "op": "PUSH2",
      "value": "0x4D8"
    },
    "1232": {
      "op": "JUMPI"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1236": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1239": {
      "op": "JUMP"
    },
    "1240": {
      "op": "JUMPDEST"
    },
    "1241": {
      "op": "DUP2"
    },
    "1242": {
      "op": "PUSH2",
      "value": "0x4E5"
    },
    "1245": {
      "op": "JUMPI"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1252": {
      "op": "JUMP"
    },
    "1253": {
      "op": "JUMPDEST"
    },
    "1254": {
      "op": "DUP2"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "EQ"
    },
    "1259": {
      "op": "PUSH2",
      "value": "0x4FB"
    },
    "1262": {
      "op": "JUMPI"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "EQ"
    },
    "1267": {
      "op": "PUSH2",
      "value": "0x505"
    },
    "1270": {
      "op": "JUMPI"
    },
    "1271": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1274": {
      "op": "JUMP"
    },
    "1275": {
      "op": "JUMPDEST"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "SWAP2"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "op": "POP"
    },
    "1281": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1284": {
      "op": "JUMP"
    },
    "1285": {
      "op": "JUMPDEST"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1288": {
      "op": "DUP5"
    },
    "1289": {
      "op": "GT"
    },
    "1290": {
      "op": "ISZERO"
    },
    "1291": {
      "op": "PUSH2",
      "value": "0x516"
    },
    "1294": {
      "op": "JUMPI"
    },
    "1295": {
      "op": "PUSH2",
      "value": "0x516"
    },
    "1298": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1301": {
      "jump": "i",
      "op": "JUMP"
    },
    "1302": {
      "op": "JUMPDEST"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "DUP3"
    },
    "1308": {
      "op": "SHL"
    },
    "1309": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1312": {
      "op": "JUMP"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "POP"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1317": {
      "op": "DUP4"
    },
    "1318": {
      "op": "LT"
    },
    "1319": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "1322": {
      "op": "DUP4"
    },
    "1323": {
      "op": "LT"
    },
    "1324": {
      "op": "AND"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "1327": {
      "op": "DUP5"
    },
    "1328": {
      "op": "LT"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1331": {
      "op": "DUP5"
    },
    "1332": {
      "op": "LT"
    },
    "1333": {
      "op": "AND"
    },
    "1334": {
      "op": "OR"
    },
    "1335": {
      "op": "ISZERO"
    },
    "1336": {
      "op": "PUSH2",
      "value": "0x544"
    },
    "1339": {
      "op": "JUMPI"
    },
    "1340": {
      "op": "POP"
    },
    "1341": {
      "op": "DUP2"
    },
    "1342": {
      "op": "DUP2"
    },
    "1343": {
      "op": "EXP"
    },
    "1344": {
      "op": "PUSH2",
      "value": "0x566"
    },
    "1347": {
      "op": "JUMP"
    },
    "1348": {
      "op": "JUMPDEST"
    },
    "1349": {
      "op": "PUSH2",
      "value": "0x54E"
    },
    "1352": {
      "op": "DUP4"
    },
    "1353": {
      "op": "DUP4"
    },
    "1354": {
      "op": "PUSH2",
      "value": "0x486"
    },
    "1357": {
      "jump": "i",
      "op": "JUMP"
    },
    "1358": {
      "op": "JUMPDEST"
    },
    "1359": {
      "op": "DUP1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1362": {
      "op": "NOT"
    },
    "1363": {
      "op": "DIV"
    },
    "1364": {
      "op": "DUP3"
    },
    "1365": {
      "op": "GT"
    },
    "1366": {
      "op": "ISZERO"
    },
    "1367": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1370": {
      "op": "JUMPI"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x562"
    },
    "1374": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1377": {
      "jump": "i",
      "op": "JUMP"
    },
    "1378": {
      "op": "JUMPDEST"
    },
    "1379": {
      "op": "MUL"
    },
    "1380": {
      "op": "SWAP1"
    },
    "1381": {
      "op": "POP"
    },
    "1382": {
      "op": "JUMPDEST"
    },
    "1383": {
      "op": "SWAP3"
    },
    "1384": {
      "op": "SWAP2"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "op": "POP"
    },
    "1387": {
      "jump": "o",
      "op": "JUMP"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "op": "PUSH2",
      "value": "0x24A"
    },
    "1394": {
      "op": "DUP4"
    },
    "1395": {
      "op": "DUP4"
    },
    "1396": {
      "op": "PUSH2",
      "value": "0x4C9"
    },
    "1399": {
      "jump": "i",
      "op": "JUMP"
    },
    "1400": {
      "op": "JUMPDEST"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "DUP5"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "op": "SLT"
    },
    "1409": {
      "op": "ISZERO"
    },
    "1410": {
      "op": "PUSH2",
      "value": "0x58A"
    },
    "1413": {
      "op": "JUMPI"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1416": {
      "op": "DUP1"
    },
    "1417": {
      "op": "REVERT"
    },
    "1418": {
      "op": "JUMPDEST"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "op": "MLOAD"
    },
    "1421": {
      "op": "SWAP2"
    },
    "1422": {
      "op": "SWAP1"
    },
    "1423": {
      "op": "POP"
    },
    "1424": {
      "jump": "o",
      "op": "JUMP"
    },
    "1425": {
      "op": "JUMPDEST"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1428": {
      "op": "DUP2"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1431": {
      "op": "NOT"
    },
    "1432": {
      "op": "DIV"
    },
    "1433": {
      "op": "DUP4"
    },
    "1434": {
      "op": "GT"
    },
    "1435": {
      "op": "DUP3"
    },
    "1436": {
      "op": "ISZERO"
    },
    "1437": {
      "op": "ISZERO"
    },
    "1438": {
      "op": "AND"
    },
    "1439": {
      "op": "ISZERO"
    },
    "1440": {
      "op": "PUSH2",
      "value": "0x5AB"
    },
    "1443": {
      "op": "JUMPI"
    },
    "1444": {
      "op": "PUSH2",
      "value": "0x5AB"
    },
    "1447": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1450": {
      "jump": "i",
      "op": "JUMP"
    },
    "1451": {
      "op": "JUMPDEST"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "MUL"
    },
    "1454": {
      "op": "SWAP1"
    },
    "1455": {
      "jump": "o",
      "op": "JUMP"
    },
    "1456": {
      "op": "JUMPDEST"
    },
    "1457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1459": {
      "op": "DUP3"
    },
    "1460": {
      "op": "PUSH2",
      "value": "0x5CD"
    },
    "1463": {
      "op": "JUMPI"
    },
    "1464": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1479": {
      "op": "MSTORE"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1484": {
      "op": "REVERT"
    },
    "1485": {
      "op": "JUMPDEST"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "op": "DIV"
    },
    "1488": {
      "op": "SWAP1"
    },
    "1489": {
      "jump": "o",
      "op": "JUMP"
    },
    "1490": {
      "op": "JUMPDEST"
    },
    "1491": {
      "op": "DUP1"
    },
    "1492": {
      "op": "MLOAD"
    },
    "1493": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "1504": {
      "op": "DUP2"
    },
    "1505": {
      "op": "AND"
    },
    "1506": {
      "op": "DUP2"
    },
    "1507": {
      "op": "EQ"
    },
    "1508": {
      "op": "PUSH2",
      "value": "0x5EC"
    },
    "1511": {
      "op": "JUMPI"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1514": {
      "op": "DUP1"
    },
    "1515": {
      "op": "REVERT"
    },
    "1516": {
      "op": "JUMPDEST"
    },
    "1517": {
      "op": "SWAP2"
    },
    "1518": {
      "op": "SWAP1"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "jump": "o",
      "op": "JUMP"
    },
    "1521": {
      "op": "JUMPDEST"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1524": {
      "op": "DUP1"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1527": {
      "op": "DUP1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "DUP7"
    },
    "1533": {
      "op": "DUP9"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "op": "SLT"
    },
    "1536": {
      "op": "ISZERO"
    },
    "1537": {
      "op": "PUSH2",
      "value": "0x609"
    },
    "1540": {
      "op": "JUMPI"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1543": {
      "op": "DUP1"
    },
    "1544": {
      "op": "REVERT"
    },
    "1545": {
      "op": "JUMPDEST"
    },
    "1546": {
      "op": "PUSH2",
      "value": "0x612"
    },
    "1549": {
      "op": "DUP7"
    },
    "1550": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "1553": {
      "jump": "i",
      "op": "JUMP"
    },
    "1554": {
      "op": "JUMPDEST"
    },
    "1555": {
      "op": "SWAP5"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1559": {
      "op": "DUP7"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "op": "MLOAD"
    },
    "1562": {
      "op": "SWAP4"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1566": {
      "op": "DUP7"
    },
    "1567": {
      "op": "ADD"
    },
    "1568": {
      "op": "MLOAD"
    },
    "1569": {
      "op": "SWAP3"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1573": {
      "op": "DUP7"
    },
    "1574": {
      "op": "ADD"
    },
    "1575": {
      "op": "MLOAD"
    },
    "1576": {
      "op": "SWAP2"
    },
    "1577": {
      "op": "POP"
    },
    "1578": {
      "op": "PUSH2",
      "value": "0x635"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1583": {
      "op": "DUP8"
    },
    "1584": {
      "op": "ADD"
    },
    "1585": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "1588": {
      "jump": "i",
      "op": "JUMP"
    },
    "1589": {
      "op": "JUMPDEST"
    },
    "1590": {
      "op": "SWAP1"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "op": "SWAP3"
    },
    "1593": {
      "op": "SWAP6"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "SWAP3"
    },
    "1596": {
      "op": "SWAP6"
    },
    "1597": {
      "op": "SWAP1"
    },
    "1598": {
      "op": "SWAP4"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "jump": "o",
      "op": "JUMP"
    },
    "1601": {
      "op": "JUMPDEST"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1606": {
      "op": "DUP3"
    },
    "1607": {
      "op": "DUP5"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "op": "SLT"
    },
    "1610": {
      "op": "ISZERO"
    },
    "1611": {
      "op": "PUSH2",
      "value": "0x653"
    },
    "1614": {
      "op": "JUMPI"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1617": {
      "op": "DUP1"
    },
    "1618": {
      "op": "REVERT"
    },
    "1619": {
      "op": "JUMPDEST"
    },
    "1620": {
      "op": "DUP2"
    },
    "1621": {
      "op": "MLOAD"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1624": {
      "op": "DUP2"
    },
    "1625": {
      "op": "AND"
    },
    "1626": {
      "op": "DUP2"
    },
    "1627": {
      "op": "EQ"
    },
    "1628": {
      "op": "PUSH2",
      "value": "0x24A"
    },
    "1631": {
      "op": "JUMPI"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1634": {
      "op": "DUP1"
    },
    "1635": {
      "op": "REVERT"
    },
    "1636": {
      "op": "JUMPDEST"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1639": {
      "op": "DUP3"
    },
    "1640": {
      "op": "DUP3"
    },
    "1641": {
      "op": "LT"
    },
    "1642": {
      "op": "ISZERO"
    },
    "1643": {
      "op": "PUSH2",
      "value": "0x676"
    },
    "1646": {
      "op": "JUMPI"
    },
    "1647": {
      "op": "PUSH2",
      "value": "0x676"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x470"
    },
    "1653": {
      "jump": "i",
      "op": "JUMP"
    },
    "1654": {
      "op": "JUMPDEST"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "SUB"
    },
    "1657": {
      "op": "SWAP1"
    },
    "1658": {
      "jump": "o",
      "op": "JUMP"
    },
    "1659": {
      "op": "JUMPDEST"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "DUP5"
    },
    "1666": {
      "op": "SUB"
    },
    "1667": {
      "op": "SLT"
    },
    "1668": {
      "op": "ISZERO"
    },
    "1669": {
      "op": "PUSH2",
      "value": "0x68D"
    },
    "1672": {
      "op": "JUMPI"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1675": {
      "op": "DUP1"
    },
    "1676": {
      "op": "REVERT"
    },
    "1677": {
      "op": "JUMPDEST"
    },
    "1678": {
      "op": "DUP2"
    },
    "1679": {
      "op": "MLOAD"
    },
    "1680": {
      "op": "DUP1"
    },
    "1681": {
      "op": "ISZERO"
    },
    "1682": {
      "op": "ISZERO"
    },
    "1683": {
      "op": "DUP2"
    },
    "1684": {
      "op": "EQ"
    },
    "1685": {
      "op": "PUSH2",
      "value": "0x24A"
    },
    "1688": {
      "op": "JUMPI"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1691": {
      "op": "DUP1"
    },
    "1692": {
      "op": "REVERT"
    }
  },
  "sha1": "a46777e1563c7e83b1444b7b0c5016a9fdca275a",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\n//import \"./interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract TokenPool{\n//variables\nIERC20 public immutable token;\naddress public chainlinkfeed;\nuint256 public targetconcentration;\nAggregatorV3Interface public oracle;\nuint256 public decimal;\n\n//constructor\nconstructor (address _tokenAddress, address _chainlinkfeed, uint256 _targetconcentration, uint256 _decimal)  {\n    token = IERC20(_tokenAddress);\n    chainlinkfeed = _chainlinkfeed;\n    oracle = AggregatorV3Interface(_chainlinkfeed);\n    targetconcentration = _targetconcentration;\n    decimal = _decimal;\n\n}\n/** \n@dev function to get current price of the token from the oracle \nreturns the price of the token in USD with 18 decimals \n(token has 18 decimals, oracle has 8 decimals, so we multiply by 10^10 to make oracle price same decimals as token) )\n */\nfunction getPrice() public  view returns (uint256){\n    (,int256 price, , , ) = oracle.latestRoundData();\n    uint256 decimals = oracle.decimals();\n    return (uint256(price) * (10**(18-decimals)));\n}\n\n/**\n@dev function to get the current pool value in USD\nMultiplies the price of the token by number of tokens in the pool and divides by amount of token decimals \n */\nfunction getPoolValue() public view returns(uint256){\n    uint256 price = getPrice();\n    return ((token.balanceOf(address(this)) * price)/10**decimal);\n}\n\n/**\n@dev function to get the usd value of the number of tokens someone wants to deposit\n@param _amount (number of tokens to be deposited)\n */\n \nfunction getDepositValue(uint256 _amount) external view returns(uint256){\n    uint256 price = getPrice();\n    return ((_amount * price) / (10 ** decimal));\n}\n\n/**\n@dev function to send user tokens upon withdrawal\n@param receiver - who to send the tokens to\n@param amount - how much to send \n */\nfunction withdrawToken(address receiver, uint256 amount) external  {\n    bool success = token.transfer(receiver, amount);\n    require(success);\n}\n}\n\n\n\n\n\n",
  "sourceMap": "242:1872:7:-:0;;;447:308;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;562:29:7;;;;;597:13;:30;;;;;;-1:-1:-1;;;;;;597:30:7;;;;;;;;633:6;:46;;;;;;;;;;;597:30;685:42;733:7;:18;242:1872;;14:177:12;93:13;;-1:-1:-1;;;;;135:31:12;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;558:2;543:18;;537:25;602:2;587:18;;;581:25;196:416;;459:59;;-1:-1:-1;196:416:12;-1:-1:-1;;;196:416:12:o;:::-;242:1872:7;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/TokenPool.sol",
  "type": "contract"
}
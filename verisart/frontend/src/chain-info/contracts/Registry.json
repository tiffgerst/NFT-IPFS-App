{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Error_Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "ReservePoolDeployed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "PoolToConcentration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "PoolToToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "x",
          "type": "int256"
        }
      ],
      "name": "abs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "concentration",
          "type": "uint256"
        }
      ],
      "name": "addTokenPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calcDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "percent",
          "type": "uint256"
        }
      ],
      "name": "checkDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "checkWithdraw",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Registry.Rebalancing[]",
          "name": "_rebalance",
          "type": "tuple[]"
        }
      ],
      "name": "findMax",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Registry.Rebalancing",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "getConcentration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getNewConcentration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalAUMinUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "liquidityCheck",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pool",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Registry.Rebalancing[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_target",
          "type": "uint256"
        }
      ],
      "name": "setTargetConcentration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "tokensToWithdraw",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "interfaces/ITokenPool.sol",
    "5": "contracts/Registry.sol"
  },
  "ast": {
    "absolutePath": "contracts/Registry.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        2923
      ],
      "IERC20": [
        2264
      ],
      "ITokenPool": [
        2291
      ],
      "Registry": [
        787
      ],
      "TokenPool": [
        989
      ]
    },
    "id": 788,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:5"
      },
      {
        "absolutePath": "/Users/tiffanygerstmeyr/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 2265,
        "src": "56:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/ITokenPool.sol",
        "file": "../interfaces/ITokenPool.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 2292,
        "src": "113:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TokenPool.sol",
        "file": "./TokenPool.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 788,
        "sourceUnit": 990,
        "src": "152:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Registry",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 787,
        "linearizedBaseContracts": [
          787
        ],
        "name": "Registry",
        "nameLocation": "188:8:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 6,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "226:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "211:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "211:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "00c0f916",
            "id": 9,
            "mutability": "mutable",
            "name": "tokenPools",
            "nameLocation": "250:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "233:27:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "233:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 8,
              "nodeType": "ArrayTypeName",
              "src": "233:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 11,
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "277:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "262:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "262:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "989796b5",
            "id": 15,
            "mutability": "mutable",
            "name": "tokenToPool",
            "nameLocation": "323:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "287:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "296:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "287:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "307:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ac73b1bb",
            "id": 19,
            "mutability": "mutable",
            "name": "PoolToToken",
            "nameLocation": "372:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "336:47:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 18,
              "keyType": {
                "id": 16,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "345:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "336:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "356:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "675c7c71",
            "id": 23,
            "mutability": "mutable",
            "name": "PoolToConcentration",
            "nameLocation": "421:19:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "385:55:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "394:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "385:28:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 21,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "405:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 26,
            "mutability": "constant",
            "name": "PRECISION",
            "nameLocation": "459:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 787,
            "src": "442:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316536",
              "id": 25,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "471:3:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1e6"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "Registry.Rebalancing",
            "id": 31,
            "members": [
              {
                "constant": false,
                "id": 28,
                "mutability": "mutable",
                "name": "pool",
                "nameLocation": "521:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "513:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 27,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "513:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 30,
                "mutability": "mutable",
                "name": "amt",
                "nameLocation": "539:3:5",
                "nodeType": "VariableDeclaration",
                "scope": 31,
                "src": "531:11:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 29,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "531:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Rebalancing",
            "nameLocation": "495:11:5",
            "nodeType": "StructDefinition",
            "scope": 787,
            "src": "488:57:5",
            "visibility": "public"
          },
          {
            "id": 33,
            "name": "Error_Unauthorized",
            "nameLocation": "562:18:5",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:2:5"
            },
            "src": "556:27:5"
          },
          {
            "anonymous": false,
            "id": 39,
            "name": "ReservePoolDeployed",
            "nameLocation": "600:19:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "645:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "629:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "674:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "666:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "666:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "619:73:5"
            },
            "src": "594:99:5"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "727:104:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "741:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 43,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "755:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49,
                  "nodeType": "IfStatement",
                  "src": "737:77:5",
                  "trueBody": {
                    "id": 48,
                    "nodeType": "Block",
                    "src": "762:52:5",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 45,
                            "name": "Error_Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "783:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "783:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47,
                        "nodeType": "RevertStatement",
                        "src": "776:27:5"
                      }
                    ]
                  }
                },
                {
                  "id": 50,
                  "nodeType": "PlaceholderStatement",
                  "src": "823:1:5"
                }
              ]
            },
            "id": 52,
            "name": "onlyOwner",
            "nameLocation": "715:9:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:2:5"
            },
            "src": "706:125:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "863:34:5",
              "statements": [
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "872:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "880:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "880:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "872:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "872:18:5"
                }
              ]
            },
            "id": 61,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:2:5"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "863:0:5"
            },
            "scope": 787,
            "src": "850:47:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "1050:35:5",
              "statements": [
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1060:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "1070:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1060:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:18:5"
                }
              ]
            },
            "documentation": {
              "id": 62,
              "nodeType": "StructuredDocumentation",
              "src": "899:89:5",
              "text": "@dev function to set the factory address\n@param _factory (address of the factory)"
            },
            "functionSelector": "5bb47808",
            "id": 74,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 67,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52,
                  "src": "1040:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1040:9:5"
              }
            ],
            "name": "setFactory",
            "nameLocation": "1002:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1021:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1013:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:18:5"
            },
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1050:0:5"
            },
            "scope": 787,
            "src": "993:92:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 116,
              "nodeType": "Block",
              "src": "1386:265:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 88,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 85,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1404:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1404:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 87,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1418:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1404:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706f6f6c73",
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1427:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fd783395e005ed1d5668aea435d26f168fbe684afaf10e86099e0b23f82f1ba",
                          "typeString": "literal_string \"Only the factory can add token pools\""
                        },
                        "value": "Only the factory can add token pools"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fd783395e005ed1d5668aea435d26f168fbe684afaf10e86099e0b23f82f1ba",
                          "typeString": "literal_string \"Only the factory can add token pools\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1396:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:70:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 95,
                        "name": "_tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1492:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 92,
                        "name": "tokenPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1476:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1476:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:27:5"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 98,
                        "name": "tokenToPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1513:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 100,
                      "indexExpression": {
                        "id": 99,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1525:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1513:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_tokenPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1535:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1513:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:32:5"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 104,
                        "name": "PoolToToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "1555:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "id": 105,
                        "name": "_tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1567:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1555:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 107,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1581:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1555:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:32:5"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 110,
                        "name": "PoolToConcentration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1597:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "id": 111,
                        "name": "_tokenPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1617:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1597:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "concentration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1631:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1597:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:47:5"
                }
              ]
            },
            "documentation": {
              "id": 75,
              "nodeType": "StructuredDocumentation",
              "src": "1087:206:5",
              "text": "@dev function to add TokenPool to tokenPool array and various mappings\n@param _tokenPool - address of tokenPool\n@param _token - address of token\n@param concentration - value of target concentration "
            },
            "functionSelector": "9b765339",
            "id": 117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTokenPool",
            "nameLocation": "1307:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_tokenPool",
                  "nameLocation": "1328:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1320:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1348:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1340:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "concentration",
                  "nameLocation": "1364:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 117,
                  "src": "1356:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:59:5"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:5"
            },
            "scope": 787,
            "src": "1298:353:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 133,
              "nodeType": "Block",
              "src": "1921:53:5",
              "statements": [
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 127,
                        "name": "PoolToConcentration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1931:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 129,
                      "indexExpression": {
                        "id": 128,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1951:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1931:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 130,
                      "name": "_target",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "1960:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1931:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1931:36:5"
                }
              ]
            },
            "documentation": {
              "id": 118,
              "nodeType": "StructuredDocumentation",
              "src": "1653:160:5",
              "text": "@dev function to update the target concentration of a specific pool \n@param _pool - address of tokenPool\n@param _target - value of target concentration"
            },
            "functionSelector": "d04238ee",
            "id": 134,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 124,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 52,
                  "src": "1907:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1907:9:5"
              }
            ],
            "name": "setTargetConcentration",
            "nameLocation": "1827:22:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1858:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1850:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "1873:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 134,
                  "src": "1865:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 121,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:32:5"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1921:0:5"
            },
            "scope": 787,
            "src": "1818:156:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "2205:317:5",
              "statements": [
                {
                  "assignments": [
                    141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "2223:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2215:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2215:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2231:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2215:17:5"
                },
                {
                  "assignments": [
                    145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "2250:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 182,
                      "src": "2242:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 144,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2242:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 148,
                  "initialValue": {
                    "expression": {
                      "id": 146,
                      "name": "tokenPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2256:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2256:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2242:31:5"
                },
                {
                  "body": {
                    "id": 178,
                    "nodeType": "Block",
                    "src": "2310:184:5",
                    "statements": [
                      {
                        "assignments": [
                          157
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 157,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "2332:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 178,
                            "src": "2324:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 156,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2324:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 161,
                        "initialValue": {
                          "baseExpression": {
                            "id": 158,
                            "name": "tokenPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "2339:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 160,
                          "indexExpression": {
                            "id": 159,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "2350:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2339:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2324:28:5"
                      },
                      {
                        "assignments": [
                          163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "2376:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 178,
                            "src": "2368:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2368:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 169,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 165,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 157,
                                  "src": "2401:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 164,
                                "name": "ITokenPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2291,
                                "src": "2390:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ITokenPool_$2291_$",
                                  "typeString": "type(contract ITokenPool)"
                                }
                              },
                              "id": 166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2390:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenPool_$2291",
                                "typeString": "contract ITokenPool"
                              }
                            },
                            "id": 167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPoolValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2271,
                            "src": "2390:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2390:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2368:53:5"
                      },
                      {
                        "expression": {
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 170,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "2435:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 171,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2444:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2435:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 173,
                        "nodeType": "ExpressionStatement",
                        "src": "2435:20:5"
                      },
                      {
                        "id": 177,
                        "nodeType": "UncheckedBlock",
                        "src": "2469:15:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2479:3:5",
                              "subExpression": {
                                "id": 174,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 150,
                                "src": "2481:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 176,
                            "nodeType": "ExpressionStatement",
                            "src": "2479:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 153,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2300:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 154,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2304:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2300:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 179,
                  "initializationExpression": {
                    "assignments": [
                      150
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2293:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 179,
                        "src": "2288:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2288:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 152,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2297:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2288:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2283:211:5"
                },
                {
                  "expression": {
                    "id": 180,
                    "name": "total",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 141,
                    "src": "2510:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 181,
                  "nodeType": "Return",
                  "src": "2503:12:5"
                }
              ]
            },
            "documentation": {
              "id": 135,
              "nodeType": "StructuredDocumentation",
              "src": "1976:165:5",
              "text": "@dev function to get the total USD value of all assets in the protocol\niterates through all the pools to get their usd value and adds all the values together"
            },
            "functionSelector": "bccc01ba",
            "id": 183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAUMinUSD",
            "nameLocation": "2156:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2172:2:5"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "2196:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2195:9:5"
            },
            "scope": 787,
            "src": "2147:375:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2773:127:5",
              "statements": [
                {
                  "assignments": [
                    199,
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 199,
                      "mutability": "mutable",
                      "name": "pools",
                      "nameLocation": "2801:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2784:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2784:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 198,
                        "nodeType": "ArrayTypeName",
                        "src": "2784:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "tokenAmt",
                      "nameLocation": "2825:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 211,
                      "src": "2808:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 201,
                        "nodeType": "ArrayTypeName",
                        "src": "2808:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 186,
                        "src": "2851:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 203,
                      "name": "checkWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 483,
                      "src": "2837:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2837:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2783:76:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 207,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2877:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 208,
                        "name": "tokenAmt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2884:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 209,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2876:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 194,
                  "id": 210,
                  "nodeType": "Return",
                  "src": "2869:24:5"
                }
              ]
            },
            "documentation": {
              "id": 184,
              "nodeType": "StructuredDocumentation",
              "src": "2524:145:5",
              "text": "@dev function to get the pools to withdraw from and the amount to withdraw from each pool\n@param _amount - amount in usd to be withdrawn"
            },
            "functionSelector": "3f41addd",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToWithdraw",
            "nameLocation": "2683:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2708:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2700:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2699:17:5"
            },
            "returnParameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2738:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 188,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2738:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 189,
                    "nodeType": "ArrayTypeName",
                    "src": "2738:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2756:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 191,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2756:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 192,
                    "nodeType": "ArrayTypeName",
                    "src": "2756:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2737:36:5"
            },
            "scope": 787,
            "src": "2674:226:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "3320:788:5",
              "statements": [
                {
                  "assignments": [
                    223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 223,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "3335:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 325,
                      "src": "3330:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 222,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3330:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 226,
                  "initialValue": {
                    "expression": {
                      "id": 224,
                      "name": "tokenPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3341:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3341:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3330:28:5"
                },
                {
                  "assignments": [
                    231
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 231,
                      "mutability": "mutable",
                      "name": "withdraw",
                      "nameLocation": "3389:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 325,
                      "src": "3368:29:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Registry.Rebalancing[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 229,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 228,
                            "name": "Rebalancing",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31,
                            "src": "3368:11:5"
                          },
                          "referencedDeclaration": 31,
                          "src": "3368:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                            "typeString": "struct Registry.Rebalancing"
                          }
                        },
                        "id": 230,
                        "nodeType": "ArrayTypeName",
                        "src": "3368:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr",
                          "typeString": "struct Registry.Rebalancing[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 238,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 236,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "3418:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3400:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct Registry.Rebalancing memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 233,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 232,
                            "name": "Rebalancing",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31,
                            "src": "3404:11:5"
                          },
                          "referencedDeclaration": 31,
                          "src": "3404:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                            "typeString": "struct Registry.Rebalancing"
                          }
                        },
                        "id": 234,
                        "nodeType": "ArrayTypeName",
                        "src": "3404:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr",
                          "typeString": "struct Registry.Rebalancing[]"
                        }
                      }
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3400:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Registry.Rebalancing memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3368:54:5"
                },
                {
                  "assignments": [
                    240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 240,
                      "mutability": "mutable",
                      "name": "aum",
                      "nameLocation": "3437:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 325,
                      "src": "3432:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 239,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 241,
                      "name": "getTotalAUMinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "3443:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3443:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3432:29:5"
                },
                {
                  "assignments": [
                    245
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 245,
                      "mutability": "mutable",
                      "name": "newAUM",
                      "nameLocation": "3476:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 325,
                      "src": "3471:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 244,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3471:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 249,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 246,
                      "name": "aum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 240,
                      "src": "3485:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 247,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3491:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3485:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3471:27:5"
                },
                {
                  "body": {
                    "id": 321,
                    "nodeType": "Block",
                    "src": "3535:538:5",
                    "statements": [
                      {
                        "assignments": [
                          258
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 258,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "3557:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 321,
                            "src": "3549:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3549:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 262,
                        "initialValue": {
                          "baseExpression": {
                            "id": 259,
                            "name": "tokenPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "3564:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 261,
                          "indexExpression": {
                            "id": 260,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "3575:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3564:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3549:28:5"
                      },
                      {
                        "assignments": [
                          264
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 264,
                            "mutability": "mutable",
                            "name": "poolBalance",
                            "nameLocation": "3599:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 321,
                            "src": "3591:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 263,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3591:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 270,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 266,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "3624:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 265,
                                "name": "ITokenPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2291,
                                "src": "3613:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ITokenPool_$2291_$",
                                  "typeString": "type(contract ITokenPool)"
                                }
                              },
                              "id": 267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3613:16:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenPool_$2291",
                                "typeString": "contract ITokenPool"
                              }
                            },
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getPoolValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2271,
                            "src": "3613:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3613:31:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3591:53:5"
                      },
                      {
                        "assignments": [
                          272
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 272,
                            "mutability": "mutable",
                            "name": "target",
                            "nameLocation": "3666:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 321,
                            "src": "3658:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 271,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3658:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 276,
                        "initialValue": {
                          "baseExpression": {
                            "id": 273,
                            "name": "PoolToConcentration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "3675:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "3695:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3675:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3658:42:5"
                      },
                      {
                        "assignments": [
                          278
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 278,
                            "mutability": "mutable",
                            "name": "poolTarget",
                            "nameLocation": "3722:10:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 321,
                            "src": "3714:18:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 277,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3714:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 284,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 279,
                              "name": "newAUM",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 245,
                              "src": "3735:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 280,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "3742:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3735:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 282,
                            "name": "PRECISION",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26,
                            "src": "3749:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3735:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3714:44:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 285,
                            "name": "poolBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3775:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 286,
                            "name": "poolTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "3789:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3775:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 315,
                          "nodeType": "Block",
                          "src": "3955:80:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 305,
                                    "name": "withdraw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 231,
                                    "src": "3973:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Registry.Rebalancing memory[] memory"
                                    }
                                  },
                                  "id": 307,
                                  "indexExpression": {
                                    "id": 306,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 251,
                                    "src": "3982:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3973:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                    "typeString": "struct Registry.Rebalancing memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 309,
                                          "name": "pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 258,
                                          "src": "4005:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "hexValue": "30",
                                          "id": 310,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4016:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 308,
                                        "name": "Rebalancing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31,
                                        "src": "3986:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_Rebalancing_$31_storage_ptr_$",
                                          "typeString": "type(struct Registry.Rebalancing storage pointer)"
                                        }
                                      },
                                      "id": 311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "names": [
                                        "pool",
                                        "amt"
                                      ],
                                      "nodeType": "FunctionCall",
                                      "src": "3986:33:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory"
                                      }
                                    }
                                  ],
                                  "id": 312,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3985:35:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                    "typeString": "struct Registry.Rebalancing memory"
                                  }
                                },
                                "src": "3973:47:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                  "typeString": "struct Registry.Rebalancing memory"
                                }
                              },
                              "id": 314,
                              "nodeType": "ExpressionStatement",
                              "src": "3973:47:5"
                            }
                          ]
                        },
                        "id": 316,
                        "nodeType": "IfStatement",
                        "src": "3772:263:5",
                        "trueBody": {
                          "id": 304,
                          "nodeType": "Block",
                          "src": "3800:138:5",
                          "statements": [
                            {
                              "assignments": [
                                289
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 289,
                                  "mutability": "mutable",
                                  "name": "amt",
                                  "nameLocation": "3826:3:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 304,
                                  "src": "3818:11:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 288,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3818:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 293,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 290,
                                  "name": "poolBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 264,
                                  "src": "3832:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 291,
                                  "name": "poolTarget",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 278,
                                  "src": "3846:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3832:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3818:38:5"
                            },
                            {
                              "expression": {
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 294,
                                    "name": "withdraw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 231,
                                    "src": "3874:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Registry.Rebalancing memory[] memory"
                                    }
                                  },
                                  "id": 296,
                                  "indexExpression": {
                                    "id": 295,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 251,
                                    "src": "3883:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3874:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                    "typeString": "struct Registry.Rebalancing memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 298,
                                          "name": "pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 258,
                                          "src": "3906:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 299,
                                          "name": "amt",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 289,
                                          "src": "3917:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 297,
                                        "name": "Rebalancing",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31,
                                        "src": "3887:11:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_struct$_Rebalancing_$31_storage_ptr_$",
                                          "typeString": "type(struct Registry.Rebalancing storage pointer)"
                                        }
                                      },
                                      "id": 300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "structConstructorCall",
                                      "lValueRequested": false,
                                      "names": [
                                        "pool",
                                        "amt"
                                      ],
                                      "nodeType": "FunctionCall",
                                      "src": "3887:35:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory"
                                      }
                                    }
                                  ],
                                  "id": 301,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3886:37:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                    "typeString": "struct Registry.Rebalancing memory"
                                  }
                                },
                                "src": "3874:49:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                  "typeString": "struct Registry.Rebalancing memory"
                                }
                              },
                              "id": 303,
                              "nodeType": "ExpressionStatement",
                              "src": "3874:49:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 320,
                        "nodeType": "UncheckedBlock",
                        "src": "4048:15:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "4058:3:5",
                              "subExpression": {
                                "id": 317,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 251,
                                "src": "4060:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 319,
                            "nodeType": "ExpressionStatement",
                            "src": "4058:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 254,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "3525:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 255,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "3529:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3525:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 322,
                  "initializationExpression": {
                    "assignments": [
                      251
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 251,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3518:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 322,
                        "src": "3513:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3513:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 253,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3522:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3513:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3508:565:5"
                },
                {
                  "expression": {
                    "id": 323,
                    "name": "withdraw",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 231,
                    "src": "4089:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Registry.Rebalancing memory[] memory"
                    }
                  },
                  "functionReturnParameters": 221,
                  "id": 324,
                  "nodeType": "Return",
                  "src": "4082:15:5"
                }
              ]
            },
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "2903:328:5",
              "text": "@dev function that finds which pools need to be rebalanced through a withdraw\n@param _amount - how much usd is to be withdrawn\nCalculates new aum and how much money has to be added/removed from pool to reach the target concentration\nChecks which pool have to have money removed (and how much) and adds them to the array "
            },
            "functionSelector": "29857fd1",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidityCheck",
            "nameLocation": "3245:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3268:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3260:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3260:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3259:17:5"
            },
            "returnParameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "3297:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Registry.Rebalancing[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 218,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 217,
                        "name": "Rebalancing",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "3297:11:5"
                      },
                      "referencedDeclaration": 31,
                      "src": "3297:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                        "typeString": "struct Registry.Rebalancing"
                      }
                    },
                    "id": 219,
                    "nodeType": "ArrayTypeName",
                    "src": "3297:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr",
                      "typeString": "struct Registry.Rebalancing[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:22:5"
            },
            "scope": 787,
            "src": "3236:872:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 482,
              "nodeType": "Block",
              "src": "4517:850:5",
              "statements": [
                {
                  "assignments": [
                    342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 342,
                      "mutability": "mutable",
                      "name": "withdraw",
                      "nameLocation": "4548:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4527:29:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Registry.Rebalancing[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 340,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 339,
                            "name": "Rebalancing",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31,
                            "src": "4527:11:5"
                          },
                          "referencedDeclaration": 31,
                          "src": "4527:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                            "typeString": "struct Registry.Rebalancing"
                          }
                        },
                        "id": 341,
                        "nodeType": "ArrayTypeName",
                        "src": "4527:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr",
                          "typeString": "struct Registry.Rebalancing[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 346,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "4574:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 343,
                      "name": "liquidityCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "4559:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct Registry.Rebalancing memory[] memory)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4559:23:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct Registry.Rebalancing memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4527:55:5"
                },
                {
                  "assignments": [
                    348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 348,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "4600:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4592:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 347,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4592:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "expression": {
                      "id": 349,
                      "name": "withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "4606:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Registry.Rebalancing memory[] memory"
                      }
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4606:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4592:29:5"
                },
                {
                  "assignments": [
                    356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 356,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4648:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4631:21:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4631:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 355,
                        "nodeType": "ArrayTypeName",
                        "src": "4631:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 362,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 360,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4669:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4655:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4659:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 358,
                        "nodeType": "ArrayTypeName",
                        "src": "4659:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4655:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4631:42:5"
                },
                {
                  "assignments": [
                    367
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 367,
                      "mutability": "mutable",
                      "name": "tokenamt",
                      "nameLocation": "4697:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4683:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 365,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4683:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 366,
                        "nodeType": "ArrayTypeName",
                        "src": "4683:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 373,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 371,
                        "name": "len",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 348,
                        "src": "4719:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4708:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 368,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4712:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 369,
                        "nodeType": "ArrayTypeName",
                        "src": "4712:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4708:15:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4683:40:5"
                },
                {
                  "assignments": [
                    375
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 375,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "4738:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 482,
                      "src": "4733:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 374,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4733:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4746:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4733:14:5"
                },
                {
                  "body": {
                    "id": 476,
                    "nodeType": "Block",
                    "src": "4777:551:5",
                    "statements": [
                      {
                        "assignments": [
                          386,
                          388
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 386,
                            "mutability": "mutable",
                            "name": "max",
                            "nameLocation": "4811:3:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 476,
                            "src": "4792:22:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                              "typeString": "struct Registry.Rebalancing"
                            },
                            "typeName": {
                              "id": 385,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 384,
                                "name": "Rebalancing",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 31,
                                "src": "4792:11:5"
                              },
                              "referencedDeclaration": 31,
                              "src": "4792:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                                "typeString": "struct Registry.Rebalancing"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 388,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "4821:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 476,
                            "src": "4816:10:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 387,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4816:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 392,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 390,
                              "name": "withdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 342,
                              "src": "4838:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Registry.Rebalancing memory[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Registry.Rebalancing memory[] memory"
                              }
                            ],
                            "id": 389,
                            "name": "findMax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "4830:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr_$returns$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$",
                              "typeString": "function (struct Registry.Rebalancing memory[] memory) pure returns (struct Registry.Rebalancing memory,uint256)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4830:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$",
                            "typeString": "tuple(struct Registry.Rebalancing memory,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4791:56:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 393,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "4866:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 394,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 329,
                                  "src": "4872:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4866:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 396,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4865:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 397,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 375,
                                    "src": "4883:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 398,
                                      "name": "max",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 386,
                                      "src": "4891:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory"
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "4891:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4883:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "id": 401,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 329,
                                  "src": "4901:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4883:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 403,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4882:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4865:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 429,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 375,
                                    "src": "5072:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "id": 430,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 329,
                                    "src": "5078:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5072:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5071:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 433,
                                      "name": "total",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 375,
                                      "src": "5089:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 434,
                                        "name": "max",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "5097:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                          "typeString": "struct Registry.Rebalancing memory"
                                        }
                                      },
                                      "id": 435,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amt",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 30,
                                      "src": "5097:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5089:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 437,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 329,
                                    "src": "5108:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5089:26:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 439,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5088:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5071:45:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 470,
                          "nodeType": "IfStatement",
                          "src": "5067:220:5",
                          "trueBody": {
                            "id": 469,
                            "nodeType": "Block",
                            "src": "5117:170:5",
                            "statements": [
                              {
                                "expression": {
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 441,
                                      "name": "tokenamt",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 367,
                                      "src": "5135:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 443,
                                    "indexExpression": {
                                      "id": 442,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 379,
                                      "src": "5144:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "5135:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "expression": {
                                          "id": 444,
                                          "name": "max",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 386,
                                          "src": "5150:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                            "typeString": "struct Registry.Rebalancing memory"
                                          }
                                        },
                                        "id": 445,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amt",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 30,
                                        "src": "5150:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 446,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5149:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5135:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 448,
                                "nodeType": "ExpressionStatement",
                                "src": "5135:23:5"
                              },
                              {
                                "expression": {
                                  "id": 455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 449,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 356,
                                      "src": "5176:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 451,
                                    "indexExpression": {
                                      "id": 450,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 379,
                                      "src": "5181:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "5176:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "components": [
                                      {
                                        "expression": {
                                          "id": 452,
                                          "name": "max",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 386,
                                          "src": "5187:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                            "typeString": "struct Registry.Rebalancing memory"
                                          }
                                        },
                                        "id": 453,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pool",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 28,
                                        "src": "5187:8:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "id": 454,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5186:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "5176:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 456,
                                "nodeType": "ExpressionStatement",
                                "src": "5176:20:5"
                              },
                              {
                                "expression": {
                                  "id": 460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 457,
                                    "name": "total",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 375,
                                    "src": "5214:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 458,
                                      "name": "max",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 386,
                                      "src": "5223:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory"
                                      }
                                    },
                                    "id": 459,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "5223:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5214:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 461,
                                "nodeType": "ExpressionStatement",
                                "src": "5214:16:5"
                              },
                              {
                                "expression": {
                                  "id": 467,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 462,
                                        "name": "withdraw",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 342,
                                        "src": "5249:8:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Registry.Rebalancing memory[] memory"
                                        }
                                      },
                                      "id": 464,
                                      "indexExpression": {
                                        "id": 463,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "5258:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5249:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory"
                                      }
                                    },
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "amt",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 30,
                                    "src": "5249:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 466,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5271:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5249:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 468,
                                "nodeType": "ExpressionStatement",
                                "src": "5249:23:5"
                              }
                            ]
                          }
                        },
                        "id": 471,
                        "nodeType": "IfStatement",
                        "src": "4861:426:5",
                        "trueBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "4910:139:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 405,
                                    "name": "tokenamt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "4928:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 407,
                                  "indexExpression": {
                                    "id": 406,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 379,
                                    "src": "4937:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4928:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 410,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 408,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 329,
                                        "src": "4942:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 409,
                                        "name": "total",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 375,
                                        "src": "4952:5:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4942:15:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 411,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4941:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4928:30:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 413,
                              "nodeType": "ExpressionStatement",
                              "src": "4928:30:5"
                            },
                            {
                              "expression": {
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 414,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 356,
                                    "src": "4976:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 416,
                                  "indexExpression": {
                                    "id": 415,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 379,
                                    "src": "4981:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4976:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "expression": {
                                        "id": 417,
                                        "name": "max",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "4987:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                          "typeString": "struct Registry.Rebalancing memory"
                                        }
                                      },
                                      "id": 418,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "pool",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 28,
                                      "src": "4987:8:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "id": 419,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4986:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "4976:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 421,
                              "nodeType": "ExpressionStatement",
                              "src": "4976:20:5"
                            },
                            {
                              "expression": {
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 422,
                                  "name": "total",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "5014:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 423,
                                    "name": "tokenamt",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 367,
                                    "src": "5023:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 425,
                                  "indexExpression": {
                                    "id": 424,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 379,
                                    "src": "5032:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5023:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5014:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 427,
                              "nodeType": "ExpressionStatement",
                              "src": "5014:20:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 475,
                        "nodeType": "UncheckedBlock",
                        "src": "5300:15:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5310:3:5",
                              "subExpression": {
                                "id": 472,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "5312:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 474,
                            "nodeType": "ExpressionStatement",
                            "src": "5310:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 381,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "4770:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 382,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 348,
                      "src": "4772:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4770:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 477,
                  "initializationExpression": {
                    "assignments": [
                      379
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 379,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4767:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 477,
                        "src": "4762:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4762:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 380,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4762:6:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "4757:571:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 478,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 356,
                        "src": "5345:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 479,
                        "name": "tokenamt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "5351:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 480,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5344:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 337,
                  "id": 481,
                  "nodeType": "Return",
                  "src": "5337:23:5"
                }
              ]
            },
            "documentation": {
              "id": 327,
              "nodeType": "StructuredDocumentation",
              "src": "4114:306:5",
              "text": "@dev function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from\nand how much to withdraw from each pool\nChecks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first\n@param _amount - amount to be withdrawn"
            },
            "functionSelector": "9a9f3e35",
            "id": 483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkWithdraw",
            "nameLocation": "4434:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4453:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "4448:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4448:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:14:5"
            },
            "returnParameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "4482:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 331,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4482:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 332,
                    "nodeType": "ArrayTypeName",
                    "src": "4482:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 483,
                  "src": "4500:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 334,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4500:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 335,
                    "nodeType": "ArrayTypeName",
                    "src": "4500:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4481:36:5"
            },
            "scope": 787,
            "src": "4425:942:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 547,
              "nodeType": "Block",
              "src": "5603:333:5",
              "statements": [
                {
                  "assignments": [
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 497,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "5622:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 547,
                      "src": "5614:11:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5614:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 500,
                  "initialValue": {
                    "expression": {
                      "id": 498,
                      "name": "_rebalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "5628:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Registry.Rebalancing memory[] memory"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5628:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5614:31:5"
                },
                {
                  "assignments": [
                    502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 502,
                      "mutability": "mutable",
                      "name": "max",
                      "nameLocation": "5660:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 547,
                      "src": "5655:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 501,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5655:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 504,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5666:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5655:12:5"
                },
                {
                  "assignments": [
                    506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 506,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "5682:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 547,
                      "src": "5677:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 505,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5677:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 508,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5690:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5677:14:5"
                },
                {
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "5725:163:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 516,
                            "name": "max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 502,
                            "src": "5743:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 517,
                                "name": "_rebalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 488,
                                "src": "5749:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Registry.Rebalancing memory[] memory"
                                }
                              },
                              "id": 519,
                              "indexExpression": {
                                "id": 518,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5760:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5749:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                "typeString": "struct Registry.Rebalancing memory"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amt",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30,
                            "src": "5749:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5743:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 534,
                        "nodeType": "IfStatement",
                        "src": "5739:111:5",
                        "trueBody": {
                          "id": 533,
                          "nodeType": "Block",
                          "src": "5767:83:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 522,
                                  "name": "max",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 502,
                                  "src": "5785:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 523,
                                      "name": "_rebalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 488,
                                      "src": "5791:10:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Registry.Rebalancing memory[] memory"
                                      }
                                    },
                                    "id": 525,
                                    "indexExpression": {
                                      "id": 524,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "5802:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5791:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                                      "typeString": "struct Registry.Rebalancing memory"
                                    }
                                  },
                                  "id": 526,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amt",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30,
                                  "src": "5791:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5785:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 528,
                              "nodeType": "ExpressionStatement",
                              "src": "5785:23:5"
                            },
                            {
                              "expression": {
                                "id": 531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 529,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 506,
                                  "src": "5826:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 530,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 510,
                                  "src": "5834:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5826:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 532,
                              "nodeType": "ExpressionStatement",
                              "src": "5826:9:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 538,
                        "nodeType": "UncheckedBlock",
                        "src": "5863:15:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "5873:3:5",
                              "subExpression": {
                                "id": 535,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5875:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 537,
                            "nodeType": "ExpressionStatement",
                            "src": "5873:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 513,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "5718:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 514,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "5720:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5718:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 540,
                  "initializationExpression": {
                    "assignments": [
                      510
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5711:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "5706:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5706:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 512,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5715:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5706:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "5701:187:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 541,
                          "name": "_rebalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 488,
                          "src": "5905:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Registry.Rebalancing memory[] memory"
                          }
                        },
                        "id": 543,
                        "indexExpression": {
                          "id": 542,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "5916:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5905:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                          "typeString": "struct Registry.Rebalancing memory"
                        }
                      },
                      {
                        "id": 544,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "5923:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 545,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5904:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Rebalancing_$31_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(struct Registry.Rebalancing memory,uint256)"
                    }
                  },
                  "functionReturnParameters": 495,
                  "id": 546,
                  "nodeType": "Return",
                  "src": "5897:32:5"
                }
              ]
            },
            "documentation": {
              "id": 484,
              "nodeType": "StructuredDocumentation",
              "src": "5368:126:5",
              "text": "@dev helper function that finds which pool has to have the most money withdrawn\n@param _rebalance - rebalancing array "
            },
            "functionSelector": "2db20886",
            "id": 548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "findMax",
            "nameLocation": "5512:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_rebalance",
                  "nameLocation": "5542:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "5521:31:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Registry.Rebalancing[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 486,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 485,
                        "name": "Rebalancing",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31,
                        "src": "5521:11:5"
                      },
                      "referencedDeclaration": 31,
                      "src": "5521:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                        "typeString": "struct Registry.Rebalancing"
                      }
                    },
                    "id": 487,
                    "nodeType": "ArrayTypeName",
                    "src": "5521:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Rebalancing_$31_storage_$dyn_storage_ptr",
                      "typeString": "struct Registry.Rebalancing[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5520:33:5"
            },
            "returnParameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "5575:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Rebalancing_$31_memory_ptr",
                    "typeString": "struct Registry.Rebalancing"
                  },
                  "typeName": {
                    "id": 491,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 490,
                      "name": "Rebalancing",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31,
                      "src": "5575:11:5"
                    },
                    "referencedDeclaration": 31,
                    "src": "5575:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Rebalancing_$31_storage_ptr",
                      "typeString": "struct Registry.Rebalancing"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 548,
                  "src": "5595:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5574:29:5"
            },
            "scope": 787,
            "src": "5503:433:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 580,
              "nodeType": "Block",
              "src": "6125:197:5",
              "statements": [
                {
                  "assignments": [
                    557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 557,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "6147:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "6139:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6139:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 560,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 558,
                      "name": "getTotalAUMinUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "6155:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6155:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6139:34:5"
                },
                {
                  "assignments": [
                    562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 562,
                      "mutability": "mutable",
                      "name": "poolBalance",
                      "nameLocation": "6195:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 580,
                      "src": "6187:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6187:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 568,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 564,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 551,
                            "src": "6220:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 563,
                          "name": "ITokenPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2291,
                          "src": "6209:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ITokenPool_$2291_$",
                            "typeString": "type(contract ITokenPool)"
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6209:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenPool_$2291",
                          "typeString": "contract ITokenPool"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPoolValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2271,
                      "src": "6209:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6209:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6187:53:5"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 569,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "6268:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6277:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6268:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 573,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "6284:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 574,
                          "name": "PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "6296:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6284:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 576,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 557,
                        "src": "6306:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6284:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6268:43:5",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6281:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 555,
                  "id": 579,
                  "nodeType": "Return",
                  "src": "6261:50:5"
                }
              ]
            },
            "documentation": {
              "id": 549,
              "nodeType": "StructuredDocumentation",
              "src": "5937:117:5",
              "text": "@dev function to get the current concentration of a specific pool\n@param pool - pool to fnd concentration of "
            },
            "functionSelector": "3e85d5f0",
            "id": 581,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConcentration",
            "nameLocation": "6069:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "6094:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6086:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6086:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6085:14:5"
            },
            "returnParameters": {
              "id": 555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 581,
                  "src": "6120:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 553,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6120:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6119:6:5"
            },
            "scope": 787,
            "src": "6060:262:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "6603:233:5",
              "statements": [
                {
                  "assignments": [
                    592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 592,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "6629:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "6621:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 591,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6621:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 593,
                        "name": "getTotalAUMinUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 183,
                        "src": "6637:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6637:18:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 595,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "6658:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6637:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6621:43:5"
                },
                {
                  "assignments": [
                    599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "poolBalance",
                      "nameLocation": "6686:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "6678:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6678:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 607,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 601,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "6711:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 600,
                            "name": "ITokenPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2291,
                            "src": "6700:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ITokenPool_$2291_$",
                              "typeString": "type(contract ITokenPool)"
                            }
                          },
                          "id": 602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6700:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITokenPool_$2291",
                            "typeString": "contract ITokenPool"
                          }
                        },
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getPoolValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2271,
                        "src": "6700:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6700:31:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 605,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 586,
                      "src": "6734:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6700:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6678:62:5"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 608,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "6768:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6777:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6768:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 612,
                          "name": "poolBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "6785:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 613,
                          "name": "PRECISION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "6797:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6785:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 615,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 592,
                        "src": "6807:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6785:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6768:44:5",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6781:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 590,
                  "id": 618,
                  "nodeType": "Return",
                  "src": "6761:51:5"
                }
              ]
            },
            "documentation": {
              "id": 582,
              "nodeType": "StructuredDocumentation",
              "src": "6323:192:5",
              "text": "@dev function to get the concentration of certain pool when a certain amount is added to the pool\n@param pool - pool to find concentration of\n@param amount - amount to be added to pool"
            },
            "functionSelector": "c0f1cce5",
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getNewConcentration",
            "nameLocation": "6529:19:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 584,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "6558:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6550:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6550:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 586,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6569:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6564:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 585,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6564:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6549:27:5"
            },
            "returnParameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 589,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6598:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6597:6:5"
            },
            "scope": 787,
            "src": "6520:316:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "7069:451:5",
              "statements": [
                {
                  "assignments": [
                    629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 629,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7084:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 689,
                      "src": "7079:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 628,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7079:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 632,
                  "initialValue": {
                    "expression": {
                      "id": 630,
                      "name": "tokenPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "7090:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7090:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7079:28:5"
                },
                {
                  "body": {
                    "id": 684,
                    "nodeType": "Block",
                    "src": "7144:346:5",
                    "statements": [
                      {
                        "assignments": [
                          641
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 641,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "7166:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 684,
                            "src": "7158:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 640,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7158:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 645,
                        "initialValue": {
                          "baseExpression": {
                            "id": 642,
                            "name": "tokenPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "7173:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 644,
                          "indexExpression": {
                            "id": 643,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "7184:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7173:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7158:28:5"
                      },
                      {
                        "assignments": [
                          647
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 647,
                            "mutability": "mutable",
                            "name": "currentConcentration",
                            "nameLocation": "7205:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 684,
                            "src": "7200:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 646,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7200:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 651,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 649,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 641,
                              "src": "7245:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 648,
                            "name": "getConcentration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "7228:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7228:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7200:50:5"
                      },
                      {
                        "assignments": [
                          653
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 653,
                            "mutability": "mutable",
                            "name": "diff",
                            "nameLocation": "7268:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 684,
                            "src": "7264:8:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 652,
                              "name": "int",
                              "nodeType": "ElementaryTypeName",
                              "src": "7264:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 665,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 656,
                                "name": "currentConcentration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 647,
                                "src": "7279:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7275:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 654,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "7275:3:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7275:25:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 660,
                                  "name": "PoolToConcentration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "7307:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 662,
                                "indexExpression": {
                                  "id": 661,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "7327:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7307:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7303:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 658,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "7303:3:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7303:30:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7275:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7264:69:5"
                      },
                      {
                        "assignments": [
                          667
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 667,
                            "mutability": "mutable",
                            "name": "absdiff",
                            "nameLocation": "7352:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 684,
                            "src": "7347:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 666,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7347:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 669,
                              "name": "diff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 653,
                              "src": "7366:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 668,
                            "name": "abs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "7362:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                              "typeString": "function (int256) pure returns (uint256)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7362:9:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7347:24:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 672,
                            "name": "absdiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 667,
                            "src": "7389:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 673,
                            "name": "percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "7397:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7389:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 679,
                        "nodeType": "IfStatement",
                        "src": "7385:67:5",
                        "trueBody": {
                          "id": 678,
                          "nodeType": "Block",
                          "src": "7406:46:5",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 675,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7432:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "id": 676,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "7431:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 627,
                              "id": 677,
                              "nodeType": "Return",
                              "src": "7424:13:5"
                            }
                          ]
                        }
                      },
                      {
                        "id": 683,
                        "nodeType": "UncheckedBlock",
                        "src": "7465:15:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "7475:3:5",
                              "subExpression": {
                                "id": 680,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 634,
                                "src": "7477:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 682,
                            "nodeType": "ExpressionStatement",
                            "src": "7475:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 637,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 634,
                      "src": "7134:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 638,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 629,
                      "src": "7138:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7134:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 685,
                  "initializationExpression": {
                    "assignments": [
                      634
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7127:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 685,
                        "src": "7122:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7122:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 636,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7131:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7122:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7117:373:5"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "66616c7365",
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7507:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 687,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7506:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 627,
                  "id": 688,
                  "nodeType": "Return",
                  "src": "7499:14:5"
                }
              ]
            },
            "documentation": {
              "id": 621,
              "nodeType": "StructuredDocumentation",
              "src": "6837:165:5",
              "text": "@dev checks if any pool has a concentration more than \"percent\" % above/below target concentration\n@param percent - percent above/below target concentration "
            },
            "functionSelector": "fd192d7d",
            "id": 690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkDeposit",
            "nameLocation": "7016:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "percent",
                  "nameLocation": "7034:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "7029:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7028:14:5"
            },
            "returnParameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 690,
                  "src": "7064:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7064:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7063:6:5"
            },
            "scope": 787,
            "src": "7007:513:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "7575:138:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 697,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "7589:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7591:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7589:3:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "7668:39:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 714,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "7694:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7689:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 712,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7689:4:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7689:7:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 696,
                        "id": 716,
                        "nodeType": "Return",
                        "src": "7682:14:5"
                      }
                    ]
                  },
                  "id": 718,
                  "nodeType": "IfStatement",
                  "src": "7585:122:5",
                  "trueBody": {
                    "id": 711,
                    "nodeType": "Block",
                    "src": "7593:62:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 700,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 692,
                            "src": "7607:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "30",
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7611:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 702,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "7615:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "src": "7611:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "7607:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "7607:9:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 708,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 692,
                              "src": "7642:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7637:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 706,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7637:4:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7637:7:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 696,
                        "id": 710,
                        "nodeType": "Return",
                        "src": "7630:14:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "1b5ac4b5",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "7534:3:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7546:1:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7539:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7539:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7538:10:5"
            },
            "returnParameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 695,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "7570:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 694,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7569:6:5"
            },
            "scope": 787,
            "src": "7525:188:5",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 785,
              "nodeType": "Block",
              "src": "7772:407:5",
              "statements": [
                {
                  "assignments": [
                    726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 726,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "7787:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 785,
                      "src": "7782:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 725,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7782:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 728,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7795:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7782:14:5"
                },
                {
                  "assignments": [
                    730
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 730,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "7811:3:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 785,
                      "src": "7806:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 729,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7806:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 733,
                  "initialValue": {
                    "expression": {
                      "id": 731,
                      "name": "tokenPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "7817:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "7817:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7806:28:5"
                },
                {
                  "body": {
                    "id": 781,
                    "nodeType": "Block",
                    "src": "7871:293:5",
                    "statements": [
                      {
                        "assignments": [
                          742
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 742,
                            "mutability": "mutable",
                            "name": "pool",
                            "nameLocation": "7893:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "7885:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 741,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7885:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 746,
                        "initialValue": {
                          "baseExpression": {
                            "id": 743,
                            "name": "tokenPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "7900:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 745,
                          "indexExpression": {
                            "id": 744,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "7911:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7900:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7885:28:5"
                      },
                      {
                        "assignments": [
                          748
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 748,
                            "mutability": "mutable",
                            "name": "currentConcentration",
                            "nameLocation": "7932:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "7927:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 747,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7927:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 752,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 750,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "7972:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 749,
                            "name": "getConcentration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 581,
                            "src": "7955:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7955:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7927:50:5"
                      },
                      {
                        "assignments": [
                          754
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 754,
                            "mutability": "mutable",
                            "name": "diff",
                            "nameLocation": "7995:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "7991:8:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 753,
                              "name": "int",
                              "nodeType": "ElementaryTypeName",
                              "src": "7991:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 757,
                                "name": "currentConcentration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 748,
                                "src": "8006:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8002:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 755,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "8002:3:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8002:25:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 761,
                                  "name": "PoolToConcentration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "8034:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 763,
                                "indexExpression": {
                                  "id": 762,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 742,
                                  "src": "8054:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8034:25:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8030:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_int256_$",
                                "typeString": "type(int256)"
                              },
                              "typeName": {
                                "id": 759,
                                "name": "int",
                                "nodeType": "ElementaryTypeName",
                                "src": "8030:3:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8030:30:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "8002:58:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7991:69:5"
                      },
                      {
                        "assignments": [
                          768
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 768,
                            "mutability": "mutable",
                            "name": "absdiff",
                            "nameLocation": "8079:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 781,
                            "src": "8074:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 767,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8074:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 772,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 770,
                              "name": "diff",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 754,
                              "src": "8093:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 769,
                            "name": "abs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "8089:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                              "typeString": "function (int256) pure returns (uint256)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8089:9:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8074:24:5"
                      },
                      {
                        "expression": {
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 773,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 726,
                            "src": "8112:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 774,
                            "name": "absdiff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 768,
                            "src": "8121:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8112:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 776,
                        "nodeType": "ExpressionStatement",
                        "src": "8112:16:5"
                      },
                      {
                        "id": 780,
                        "nodeType": "UncheckedBlock",
                        "src": "8142:16:5",
                        "statements": [
                          {
                            "expression": {
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "8153:3:5",
                              "subExpression": {
                                "id": 777,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 735,
                                "src": "8155:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 779,
                            "nodeType": "ExpressionStatement",
                            "src": "8153:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 738,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "7861:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 739,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "7865:3:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7861:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "initializationExpression": {
                    "assignments": [
                      735
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7854:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 782,
                        "src": "7849:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7849:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 737,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7858:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7849:10:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "7844:320:5"
                },
                {
                  "expression": {
                    "id": 783,
                    "name": "total",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 726,
                    "src": "8172:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 724,
                  "id": 784,
                  "nodeType": "Return",
                  "src": "8165:12:5"
                }
              ]
            },
            "functionSelector": "6730b68a",
            "id": 786,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcDeposit",
            "nameLocation": "7732:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7743:2:5"
            },
            "returnParameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 786,
                  "src": "7767:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7767:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7766:6:5"
            },
            "scope": 787,
            "src": "7723:456:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 788,
        "src": "179:8007:5",
        "usedErrors": [
          33
        ]
      }
    ],
    "src": "31:8162:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055611147806100326000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80638da5cb5b116100ad578063bccc01ba11610071578063bccc01ba146102ce578063c0f1cce5146102d6578063c45a0155146102e9578063d04238ee146102fc578063fd192d7d1461030f57600080fd5b80638da5cb5b14610243578063989796b5146102565780639a9f3e351461027f5780639b76533914610292578063ac73b1bb146102a557600080fd5b80633e85d5f0116100f45780633e85d5f0146101d25780633f41addd146101e55780635bb47808146102065780636730b68a1461021b578063675c7c711461022357600080fd5b8062c0f916146101255780631b5ac4b51461015557806329857fd1146101765780632db2088614610196575b600080fd5b610138610133366004610d3d565b610332565b6040516001600160a01b0390911681526020015b60405180910390f35b610168610163366004610d3d565b61035c565b60405190815260200161014c565b610189610184366004610d3d565b610380565b60405161014c9190610d56565b6101a96101a4366004610e3d565b61057d565b6040805183516001600160a01b031681526020938401519381019390935282015260600161014c565b6101686101e0366004610f11565b61061b565b6101f86101f3366004610d3d565b6106bc565b60405161014c929190610f33565b610219610214366004610f11565b6106d7565b005b610168610724565b610168610231366004610f11565b60056020526000908152604090205481565b600054610138906001600160a01b031681565b610138610264366004610f11565b6003602052600090815260409020546001600160a01b031681565b6101f861028d366004610d3d565b6107c3565b6102196102a0366004610fb7565b6109ed565b6101386102b3366004610f11565b6004602052600090815260409020546001600160a01b031681565b610168610add565b6101686102e4366004610ff3565b610b95565b600254610138906001600160a01b031681565b61021961030a366004610ff3565b610c4d565b61032261031d366004610d3d565b610c94565b604051901515815260200161014c565b6001818154811061034257600080fd5b6000918252602090912001546001600160a01b0316905081565b60008082121561037757610371826000611033565b92915050565b5090565b919050565b60015460609060008167ffffffffffffffff8111156103a1576103a1610db6565b6040519080825280602002602001820160405280156103e657816020015b60408051808201909152600080825260208201528152602001906001900390816103bf5790505b50905060006103f3610add565b905060006104018683611072565b905060005b848110156105725760006001828154811061042357610423611089565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610499919061109f565b6001600160a01b038316600090815260056020526040812054919250620f42406104c383886110b8565b6104cd91906110d7565b9050808311156105265760006104e38285611072565b90506040518060400160405280866001600160a01b031681526020018281525089878151811061051557610515611089565b602002602001018190525050610563565b6040518060400160405280856001600160a01b03168152602001600081525088868151811061055757610557611089565b60200260200101819052505b84600101945050505050610406565b509195945050505050565b604080518082019091526000808252602082015281516000908180805b838110156105f3578681815181106105b4576105b4611089565b6020026020010151602001518310156105eb578681815181106105d9576105d9611089565b60200260200101516020015192508091505b60010161059a565b5085818151811061060657610606611089565b60200260200101518194509450505050915091565b600080610626610add565b90506000836001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c919061109f565b905081156106b157816106a2620f4240836110b8565b6106ac91906110d7565b6106b4565b60005b949350505050565b6060806000806106cb856107c3565b90969095509350505050565b6000546001600160a01b031633146107025760405163da476dd760e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546000908190815b818110156107bb5760006001828154811061074b5761074b611089565b60009182526020822001546001600160a01b0316915061076a8261061b565b6001600160a01b038316600090815260056020526040812054919250906107919083611033565b9050600061079e8261035c565b90506107aa81886110f9565b96508460010194505050505061072e565b509092915050565b60608060006107d184610380565b805190915060008167ffffffffffffffff8111156107f1576107f1610db6565b60405190808252806020026020018201604052801561081a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561083857610838610db6565b604051908082528060200260200182016040528015610861578160200160208202803683370190505b5090506000805b848110156109df5760008061087c8861057d565b915091508a8410801561089d57508a82602001518561089b91906110f9565b115b1561092d576108ac848c611072565b8584815181106108be576108be611089565b60200260200101818152505081600001518684815181106108e1576108e1611089565b60200260200101906001600160a01b031690816001600160a01b03168152505084838151811061091357610913611089565b60200260200101518461092691906110f9565b93506109d5565b8a8410801561094b57508a82602001518561094891906110f9565b11155b156109d557816020015185848151811061096757610967611089565b602002602001018181525050816000015186848151811061098a5761098a611089565b6001600160a01b039092166020928302919091018201528201516109ae90856110f9565b935060008882815181106109c4576109c4611089565b602002602001015160200181815250505b5050600101610868565b509197909650945050505050565b6002546001600160a01b03163314610a575760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706044820152636f6f6c7360e01b606482015260840160405180910390fd5b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039485166001600160a01b0319918216811790925592909316600081815260036020908152604080832080548716881790559582526004815285822080549095169092179093556005905291902055565b6001546000908190815b818110156107bb57600060018281548110610b0457610b04611089565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7a919061109f565b9050610b8681866110f9565b94508260010192505050610ae7565b60008082610ba1610add565b610bab91906110f9565b9050600083856001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c12919061109f565b610c1c91906110f9565b90508115610c415781610c32620f4240836110b8565b610c3c91906110d7565b610c44565b60005b95945050505050565b6000546001600160a01b03163314610c785760405163da476dd760e01b815260040160405180910390fd5b6001600160a01b03909116600090815260056020526040902055565b600154600090815b81811015610d3357600060018281548110610cb957610cb9611089565b60009182526020822001546001600160a01b03169150610cd88261061b565b6001600160a01b03831660009081526005602052604081205491925090610cff9083611033565b90506000610d0c8261035c565b905087811115610d2457506001979650505050505050565b84600101945050505050610c9c565b5060009392505050565b600060208284031215610d4f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610da957610d9984835180516001600160a01b03168252602090810151910152565b9284019290850190600101610d73565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610def57610def610db6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e1e57610e1e610db6565b604052919050565b80356001600160a01b038116811461037b57600080fd5b60006020808385031215610e5057600080fd5b823567ffffffffffffffff80821115610e6857600080fd5b818501915085601f830112610e7c57600080fd5b813581811115610e8e57610e8e610db6565b610e9c848260051b01610df5565b818152848101925060069190911b830184019087821115610ebc57600080fd5b928401925b81841015610f065760408489031215610eda5760008081fd5b610ee2610dcc565b610eeb85610e26565b81528486013586820152835260409093019291840191610ec1565b979650505050505050565b600060208284031215610f2357600080fd5b610f2c82610e26565b9392505050565b604080825283519082018190526000906020906060840190828701845b82811015610f755781516001600160a01b031684529284019290840190600101610f50565b5050508381038285015284518082528583019183019060005b81811015610faa57835183529284019291840191600101610f8e565b5090979650505050505050565b600080600060608486031215610fcc57600080fd5b610fd584610e26565b9250610fe360208501610e26565b9150604084013590509250925092565b6000806040838503121561100657600080fd5b61100f83610e26565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b8501841216156110515761105161101d565b6001600160ff1b038401831381161561106c5761106c61101d565b50500390565b6000828210156110845761108461101d565b500390565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156110b157600080fd5b5051919050565b60008160001904831182151516156110d2576110d261101d565b500290565b6000826110f457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561110c5761110c61101d565b50019056fea2646970667358221220d7b422cfe7251daece88fb7afc2bfb5fd0ace7e8d0e5b84ac3076a1afa2141d464736f6c634300080c0033",
  "bytecodeSha1": "bccfa5de9f8a0c5ab683206547589beb40b72183",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "Registry",
  "coverageMap": {
    "branches": {
      "11": {},
      "5": {
        "Registry.abs": {
          "36": [
            7589,
            7592,
            false
          ]
        },
        "Registry.addTokenPool": {
          "40": [
            1404,
            1425,
            true
          ]
        },
        "Registry.checkDeposit": {
          "42": [
            7389,
            7404,
            false
          ]
        },
        "Registry.findMax": {
          "38": [
            5743,
            5766,
            false
          ]
        },
        "Registry.getConcentration": {
          "39": [
            6268,
            6278,
            true
          ]
        },
        "Registry.getNewConcentration": {
          "41": [
            6768,
            6778,
            true
          ]
        },
        "Registry.liquidityCheck": {
          "37": [
            3775,
            3799,
            false
          ]
        }
      }
    },
    "statements": {
      "11": {},
      "5": {
        "Registry.abs": {
          "0": [
            7607,
            7616
          ],
          "1": [
            7682,
            7696
          ]
        },
        "Registry.addTokenPool": {
          "24": [
            1396,
            1466
          ],
          "25": [
            1476,
            1503
          ],
          "26": [
            1513,
            1545
          ],
          "27": [
            1555,
            1587
          ],
          "28": [
            1597,
            1644
          ]
        },
        "Registry.calcDeposit": {
          "12": [
            8112,
            8128
          ],
          "13": [
            8153,
            8156
          ],
          "14": [
            8165,
            8177
          ]
        },
        "Registry.checkDeposit": {
          "33": [
            7424,
            7437
          ],
          "34": [
            7475,
            7478
          ],
          "35": [
            7499,
            7513
          ]
        },
        "Registry.checkWithdraw": {
          "15": [
            4928,
            4958
          ],
          "16": [
            4976,
            4996
          ],
          "17": [
            5014,
            5034
          ],
          "18": [
            5135,
            5158
          ],
          "19": [
            5176,
            5196
          ],
          "20": [
            5214,
            5230
          ],
          "21": [
            5249,
            5272
          ],
          "22": [
            5310,
            5313
          ],
          "23": [
            5337,
            5360
          ]
        },
        "Registry.findMax": {
          "6": [
            5785,
            5808
          ],
          "7": [
            5826,
            5835
          ],
          "8": [
            5873,
            5876
          ],
          "9": [
            5897,
            5929
          ]
        },
        "Registry.getConcentration": {
          "10": [
            6261,
            6311
          ]
        },
        "Registry.getNewConcentration": {
          "31": [
            6761,
            6812
          ]
        },
        "Registry.getTotalAUMinUSD": {
          "29": [
            2435,
            2455
          ],
          "30": [
            2479,
            2482
          ]
        },
        "Registry.liquidityCheck": {
          "2": [
            3874,
            3923
          ],
          "3": [
            3973,
            4020
          ],
          "4": [
            4058,
            4061
          ],
          "5": [
            4082,
            4097
          ]
        },
        "Registry.setFactory": {
          "11": [
            1060,
            1078
          ]
        },
        "Registry.setTargetConcentration": {
          "32": [
            1931,
            1967
          ]
        }
      }
    }
  },
  "dependencies": [
    "ITokenPool"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101205760003560e01c80638da5cb5b116100ad578063bccc01ba11610071578063bccc01ba146102ce578063c0f1cce5146102d6578063c45a0155146102e9578063d04238ee146102fc578063fd192d7d1461030f57600080fd5b80638da5cb5b14610243578063989796b5146102565780639a9f3e351461027f5780639b76533914610292578063ac73b1bb146102a557600080fd5b80633e85d5f0116100f45780633e85d5f0146101d25780633f41addd146101e55780635bb47808146102065780636730b68a1461021b578063675c7c711461022357600080fd5b8062c0f916146101255780631b5ac4b51461015557806329857fd1146101765780632db2088614610196575b600080fd5b610138610133366004610d3d565b610332565b6040516001600160a01b0390911681526020015b60405180910390f35b610168610163366004610d3d565b61035c565b60405190815260200161014c565b610189610184366004610d3d565b610380565b60405161014c9190610d56565b6101a96101a4366004610e3d565b61057d565b6040805183516001600160a01b031681526020938401519381019390935282015260600161014c565b6101686101e0366004610f11565b61061b565b6101f86101f3366004610d3d565b6106bc565b60405161014c929190610f33565b610219610214366004610f11565b6106d7565b005b610168610724565b610168610231366004610f11565b60056020526000908152604090205481565b600054610138906001600160a01b031681565b610138610264366004610f11565b6003602052600090815260409020546001600160a01b031681565b6101f861028d366004610d3d565b6107c3565b6102196102a0366004610fb7565b6109ed565b6101386102b3366004610f11565b6004602052600090815260409020546001600160a01b031681565b610168610add565b6101686102e4366004610ff3565b610b95565b600254610138906001600160a01b031681565b61021961030a366004610ff3565b610c4d565b61032261031d366004610d3d565b610c94565b604051901515815260200161014c565b6001818154811061034257600080fd5b6000918252602090912001546001600160a01b0316905081565b60008082121561037757610371826000611033565b92915050565b5090565b919050565b60015460609060008167ffffffffffffffff8111156103a1576103a1610db6565b6040519080825280602002602001820160405280156103e657816020015b60408051808201909152600080825260208201528152602001906001900390816103bf5790505b50905060006103f3610add565b905060006104018683611072565b905060005b848110156105725760006001828154811061042357610423611089565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610475573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610499919061109f565b6001600160a01b038316600090815260056020526040812054919250620f42406104c383886110b8565b6104cd91906110d7565b9050808311156105265760006104e38285611072565b90506040518060400160405280866001600160a01b031681526020018281525089878151811061051557610515611089565b602002602001018190525050610563565b6040518060400160405280856001600160a01b03168152602001600081525088868151811061055757610557611089565b60200260200101819052505b84600101945050505050610406565b509195945050505050565b604080518082019091526000808252602082015281516000908180805b838110156105f3578681815181106105b4576105b4611089565b6020026020010151602001518310156105eb578681815181106105d9576105d9611089565b60200260200101516020015192508091505b60010161059a565b5085818151811061060657610606611089565b60200260200101518194509450505050915091565b600080610626610add565b90506000836001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c919061109f565b905081156106b157816106a2620f4240836110b8565b6106ac91906110d7565b6106b4565b60005b949350505050565b6060806000806106cb856107c3565b90969095509350505050565b6000546001600160a01b031633146107025760405163da476dd760e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001546000908190815b818110156107bb5760006001828154811061074b5761074b611089565b60009182526020822001546001600160a01b0316915061076a8261061b565b6001600160a01b038316600090815260056020526040812054919250906107919083611033565b9050600061079e8261035c565b90506107aa81886110f9565b96508460010194505050505061072e565b509092915050565b60608060006107d184610380565b805190915060008167ffffffffffffffff8111156107f1576107f1610db6565b60405190808252806020026020018201604052801561081a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561083857610838610db6565b604051908082528060200260200182016040528015610861578160200160208202803683370190505b5090506000805b848110156109df5760008061087c8861057d565b915091508a8410801561089d57508a82602001518561089b91906110f9565b115b1561092d576108ac848c611072565b8584815181106108be576108be611089565b60200260200101818152505081600001518684815181106108e1576108e1611089565b60200260200101906001600160a01b031690816001600160a01b03168152505084838151811061091357610913611089565b60200260200101518461092691906110f9565b93506109d5565b8a8410801561094b57508a82602001518561094891906110f9565b11155b156109d557816020015185848151811061096757610967611089565b602002602001018181525050816000015186848151811061098a5761098a611089565b6001600160a01b039092166020928302919091018201528201516109ae90856110f9565b935060008882815181106109c4576109c4611089565b602002602001015160200181815250505b5050600101610868565b509197909650945050505050565b6002546001600160a01b03163314610a575760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520666163746f72792063616e2061646420746f6b656e20706044820152636f6f6c7360e01b606482015260840160405180910390fd5b600180548082019091557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b039485166001600160a01b0319918216811790925592909316600081815260036020908152604080832080548716881790559582526004815285822080549095169092179093556005905291902055565b6001546000908190815b818110156107bb57600060018281548110610b0457610b04611089565b600091825260208083209091015460408051631ba2f53160e01b815290516001600160a01b0390921694508492631ba2f531926004808401938290030181865afa158015610b56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7a919061109f565b9050610b8681866110f9565b94508260010192505050610ae7565b60008082610ba1610add565b610bab91906110f9565b9050600083856001600160a01b0316631ba2f5316040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c12919061109f565b610c1c91906110f9565b90508115610c415781610c32620f4240836110b8565b610c3c91906110d7565b610c44565b60005b95945050505050565b6000546001600160a01b03163314610c785760405163da476dd760e01b815260040160405180910390fd5b6001600160a01b03909116600090815260056020526040902055565b600154600090815b81811015610d3357600060018281548110610cb957610cb9611089565b60009182526020822001546001600160a01b03169150610cd88261061b565b6001600160a01b03831660009081526005602052604081205491925090610cff9083611033565b90506000610d0c8261035c565b905087811115610d2457506001979650505050505050565b84600101945050505050610c9c565b5060009392505050565b600060208284031215610d4f57600080fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610da957610d9984835180516001600160a01b03168252602090810151910152565b9284019290850190600101610d73565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610def57610def610db6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610e1e57610e1e610db6565b604052919050565b80356001600160a01b038116811461037b57600080fd5b60006020808385031215610e5057600080fd5b823567ffffffffffffffff80821115610e6857600080fd5b818501915085601f830112610e7c57600080fd5b813581811115610e8e57610e8e610db6565b610e9c848260051b01610df5565b818152848101925060069190911b830184019087821115610ebc57600080fd5b928401925b81841015610f065760408489031215610eda5760008081fd5b610ee2610dcc565b610eeb85610e26565b81528486013586820152835260409093019291840191610ec1565b979650505050505050565b600060208284031215610f2357600080fd5b610f2c82610e26565b9392505050565b604080825283519082018190526000906020906060840190828701845b82811015610f755781516001600160a01b031684529284019290840190600101610f50565b5050508381038285015284518082528583019183019060005b81811015610faa57835183529284019291840191600101610f8e565b5090979650505050505050565b600080600060608486031215610fcc57600080fd5b610fd584610e26565b9250610fe360208501610e26565b9150604084013590509250925092565b6000806040838503121561100657600080fd5b61100f83610e26565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b8501841216156110515761105161101d565b6001600160ff1b038401831381161561106c5761106c61101d565b50500390565b6000828210156110845761108461101d565b500390565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156110b157600080fd5b5051919050565b60008160001904831182151516156110d2576110d261101d565b500290565b6000826110f457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561110c5761110c61101d565b50019056fea2646970667358221220d7b422cfe7251daece88fb7afc2bfb5fd0ace7e8d0e5b84ac3076a1afa2141d464736f6c634300080c0033",
  "deployedSourceMap": "179:8007:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:27;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:12;;;345:51;;333:2;318:18;233:27:5;;;;;;;;7525:188;;;;;;:::i;:::-;;:::i;:::-;;;737:25:12;;;725:2;710:18;7525:188:5;591:177:12;3236:872:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5503:433::-;;;;;;:::i;:::-;;:::i;:::-;;;;854:12:12;;-1:-1:-1;;;;;850:38:12;838:51;;938:4;927:16;;;921:23;905:14;;;898:47;;;;4083:18;;4076:34;4007:2;3992:18;5503:433:5;3791:325:12;6060:262:5;;;;;;:::i;:::-;;:::i;2674:226::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;993:92::-;;;;;;:::i;:::-;;:::i;:::-;;7723:456;;;:::i;385:55::-;;;;;;:::i;:::-;;;;;;;;;;;;;;211:20;;;;;-1:-1:-1;;;;;211:20:5;;;287:47;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;287:47:5;;;4425:942;;;;;;:::i;:::-;;:::i;1298:353::-;;;;;;:::i;:::-;;:::i;336:47::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;336:47:5;;;2147:375;;;:::i;6520:316::-;;;;;;:::i;:::-;;:::i;262:22::-;;;;;-1:-1:-1;;;;;262:22:5;;;1818:156;;;;;;:::i;:::-;;:::i;7007:513::-;;;;;;:::i;:::-;;:::i;:::-;;;6252:14:12;;6245:22;6227:41;;6215:2;6200:18;7007:513:5;6087:187:12;233:27:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;233:27:5;;-1:-1:-1;233:27:5;:::o;7525:188::-;7570:4;7591:1;7589;:3;7585:122;;;7611:5;7615:1;7611;:5;:::i;:::-;7607:9;7525:188;-1:-1:-1;;7525:188:5:o;7585:122::-;-1:-1:-1;7694:1:5;7525:188::o;7585:122::-;7525:188;;;:::o;3236:872::-;3341:10;:17;3297:20;;3330:8;3341:17;3400:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;3400:22:5;;;;;;;;;;;;;;;;3368:54;;3432:8;3443:18;:16;:18::i;:::-;3432:29;-1:-1:-1;3471:11:5;3485:13;3491:7;3432:29;3485:13;:::i;:::-;3471:27;;3513:6;3508:565;3529:3;3525:1;:7;3508:565;;;3549:12;3564:10;3575:1;3564:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;3613:31;;;-1:-1:-1;;;3613:31:5;;;;-1:-1:-1;;;;;3564:13:5;;;;-1:-1:-1;3564:13:5;;3613:29;;:31;;;;;;;;;;3564:13;3613:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3675:25:5;;3658:14;3675:25;;;:19;:25;;;;;;3591:53;;-1:-1:-1;471:3:5;3735:13;3675:25;3735:6;:13;:::i;:::-;:23;;;;:::i;:::-;3714:44;;3789:10;3775:11;:24;3772:263;;;3818:11;3832:24;3846:10;3832:11;:24;:::i;:::-;3818:38;;3887:35;;;;;;;;3906:4;-1:-1:-1;;;;;3887:35:5;;;;;3917:3;3887:35;;;3874:8;3883:1;3874:11;;;;;;;;:::i;:::-;;;;;;:49;;;;3800:138;3772:263;;;3986:33;;;;;;;;4005:4;-1:-1:-1;;;;;3986:33:5;;;;;4016:1;3986:33;;;3973:8;3982:1;3973:11;;;;;;;;:::i;:::-;;;;;;:47;;;;3772:263;4058:3;;;;;3535:538;;;;3508:565;;;-1:-1:-1;4089:8:5;;3236:872;-1:-1:-1;;;;;3236:872:5:o;5503:433::-;-1:-1:-1;;;;;;;;;;;;;;;;;5628:17:5;;5595:7;;;;;5701:187;5720:3;5718:1;:5;5701:187;;;5749:10;5760:1;5749:13;;;;;;;;:::i;:::-;;;;;;;:17;;;5743:3;:23;5739:111;;;5791:10;5802:1;5791:13;;;;;;;;:::i;:::-;;;;;;;:17;;;5785:23;;5834:1;5826:9;;5739:111;5873:3;;5701:187;;;;5905:10;5916:5;5905:17;;;;;;;;:::i;:::-;;;;;;;5923:5;5897:32;;;;;;;5503:433;;;:::o;6060:262::-;6120:4;6139:13;6155:18;:16;:18::i;:::-;6139:34;;6187:19;6220:4;-1:-1:-1;;;;;6209:29:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6187:53;-1:-1:-1;6268:10:5;;:43;;6306:5;6284:21;471:3;6284:11;:21;:::i;:::-;:27;;;;:::i;:::-;6268:43;;;6281:1;6268:43;6261:50;6060:262;-1:-1:-1;;;;6060:262:5:o;2674:226::-;2738:16;2756;2784:22;2808:25;2837:22;2851:7;2837:13;:22::i;:::-;2783:76;;;;-1:-1:-1;2674:226:5;-1:-1:-1;;;;2674:226:5:o;993:92::-;755:5;;-1:-1:-1;;;;;755:5:5;741:10;:19;737:77;;783:20;;-1:-1:-1;;;783:20:5;;;;;;;;;;;737:77;1060:7:::1;:18:::0;;-1:-1:-1;;;;;;1060:18:5::1;-1:-1:-1::0;;;;;1060:18:5;;;::::1;::::0;;;::::1;::::0;;993:92::o;7723:456::-;7817:10;:17;7767:4;;;;;7844:320;7865:3;7861:1;:7;7844:320;;;7885:12;7900:10;7911:1;7900:13;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;7900:13:5;;-1:-1:-1;7955:22:5;7900:13;7955:16;:22::i;:::-;-1:-1:-1;;;;;8034:25:5;;7991:8;8034:25;;;:19;:25;;;;;;7927:50;;-1:-1:-1;7991:8:5;8002:58;;7927:50;8002:58;:::i;:::-;7991:69;;8074:12;8089:9;8093:4;8089:3;:9::i;:::-;8074:24;-1:-1:-1;8112:16:5;8074:24;8112:16;;:::i;:::-;;;8153:3;;;;;7871:293;;;;7844:320;;;-1:-1:-1;8172:5:5;;7723:456;-1:-1:-1;;7723:456:5:o;4425:942::-;4482:16;4500;4527:29;4559:23;4574:7;4559:14;:23::i;:::-;4606:15;;4527:55;;-1:-1:-1;4592:11:5;4606:15;4655:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4655:18:5;;4631:42;;4683:22;4719:3;4708:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4708:15:5;;4683:40;;4733:10;4762:6;4757:571;4772:3;4770:1;:5;4757:571;;;4792:22;4816:10;4830:17;4838:8;4830:7;:17::i;:::-;4791:56;;;;4872:7;4866:5;:13;4865:44;;;;;4901:7;4891:3;:7;;;4883:5;:15;;;;:::i;:::-;:25;4865:44;4861:426;;;4942:15;4952:5;4942:7;:15;:::i;:::-;4928:8;4937:1;4928:11;;;;;;;;:::i;:::-;;;;;;:30;;;;;4987:3;:8;;;4976:4;4981:1;4976:7;;;;;;;;:::i;:::-;;;;;;:20;-1:-1:-1;;;;;4976:20:5;;;-1:-1:-1;;;;;4976:20:5;;;;;5023:8;5032:1;5023:11;;;;;;;;:::i;:::-;;;;;;;5014:20;;;;;:::i;:::-;;;4861:426;;;5078:7;5072:5;:13;5071:45;;;;;5108:7;5097:3;:7;;;5089:5;:15;;;;:::i;:::-;:26;;5071:45;5067:220;;;5150:3;:7;;;5135:8;5144:1;5135:11;;;;;;;;:::i;:::-;;;;;;:23;;;;;5187:3;:8;;;5176:4;5181:1;5176:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5176:20:5;;;:7;;;;;;;;;;:20;5223:7;;;5214:16;;;;:::i;:::-;;;5271:1;5249:8;5258:5;5249:15;;;;;;;;:::i;:::-;;;;;;;:19;;:23;;;;;5067:220;-1:-1:-1;;5310:3:5;;4757:571;;;-1:-1:-1;5345:4:5;;5351:8;;-1:-1:-1;4425:942:5;-1:-1:-1;;;;;4425:942:5:o;1298:353::-;1418:7;;-1:-1:-1;;;;;1418:7:5;1404:10;:21;1396:70;;;;-1:-1:-1;;;1396:70:5;;7864:2:12;1396:70:5;;;7846:21:12;7903:2;7883:18;;;7876:30;7942:34;7922:18;;;7915:62;-1:-1:-1;;;7993:18:12;;;7986:34;8037:19;;1396:70:5;;;;;;;;1476:10;:27;;;;;;;;;;;;-1:-1:-1;;;;;1476:27:5;;;-1:-1:-1;;;;;;1476:27:5;;;;;;;;1513:19;;;;-1:-1:-1;1513:19:5;;;:11;1476:27;1513:19;;;;;;;:32;;;;;;;;1555:23;;;:11;:23;;;;;:32;;;;;;;;;;;1597:19;:31;;;;;:47;1298:353::o;2147:375::-;2256:10;:17;2196:7;;;;;2283:211;2304:3;2300:1;:7;2283:211;;;2324:12;2339:10;2350:1;2339:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;2390:31;;;-1:-1:-1;;;2390:31:5;;;;-1:-1:-1;;;;;2339:13:5;;;;-1:-1:-1;2339:13:5;;2390:29;;:31;;;;;;;;;;2339:13;2390:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2368:53;-1:-1:-1;2435:20:5;2368:53;2435:20;;:::i;:::-;;;2479:3;;;;;2310:184;;2283:211;;6520:316;6598:4;6621:13;6658:6;6637:18;:16;:18::i;:::-;:27;;;;:::i;:::-;6621:43;;6678:19;6734:6;6711:4;-1:-1:-1;;;;;6700:29:5;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;:::i;:::-;6678:62;-1:-1:-1;6768:10:5;;:44;;6807:5;6785:21;471:3;6785:11;:21;:::i;:::-;:27;;;;:::i;:::-;6768:44;;;6781:1;6768:44;6761:51;6520:316;-1:-1:-1;;;;;6520:316:5:o;1818:156::-;755:5;;-1:-1:-1;;;;;755:5:5;741:10;:19;737:77;;783:20;;-1:-1:-1;;;783:20:5;;;;;;;;;;;737:77;-1:-1:-1;;;;;1931:26:5;;::::1;;::::0;;;:19:::1;:26;::::0;;;;:36;1818:156::o;7007:513::-;7090:10;:17;7064:4;;;7117:373;7138:3;7134:1;:7;7117:373;;;7158:12;7173:10;7184:1;7173:13;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;7173:13:5;;-1:-1:-1;7228:22:5;7173:13;7228:16;:22::i;:::-;-1:-1:-1;;;;;7307:25:5;;7264:8;7307:25;;;:19;:25;;;;;;7200:50;;-1:-1:-1;7264:8:5;7275:58;;7200:50;7275:58;:::i;:::-;7264:69;;7347:12;7362:9;7366:4;7362:3;:9::i;:::-;7347:24;;7397:7;7389;:15;7385:67;;;-1:-1:-1;7432:4:5;;7007:513;-1:-1:-1;;;;;;;7007:513:5:o;7385:67::-;7475:3;;;;;7144:346;;;;7117:373;;;-1:-1:-1;7507:5:5;;7007:513;-1:-1:-1;;;7007:513:5:o;14:180:12:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:12;;14:180;-1:-1:-1;14:180:12:o;956:730::-;1181:2;1233:21;;;1303:13;;1206:18;;;1325:22;;;1152:4;;1181:2;1366;;1384:18;;;;1425:15;;;1152:4;1468:192;1482:6;1479:1;1476:13;1468:192;;;1531:49;1576:3;1567:6;1561:13;854:12;;-1:-1:-1;;;;;850:38:12;838:51;;938:4;927:16;;;921:23;905:14;;898:47;773:178;1531:49;1600:12;;;;1635:15;;;;1504:1;1497:9;1468:192;;;-1:-1:-1;1677:3:12;;956:730;-1:-1:-1;;;;;;;956:730:12:o;1691:127::-;1752:10;1747:3;1743:20;1740:1;1733:31;1783:4;1780:1;1773:15;1807:4;1804:1;1797:15;1823:257;1895:4;1889:11;;;1927:17;;1974:18;1959:34;;1995:22;;;1956:62;1953:88;;;2021:18;;:::i;:::-;2057:4;2050:24;1823:257;:::o;2085:275::-;2156:2;2150:9;2221:2;2202:13;;-1:-1:-1;;2198:27:12;2186:40;;2256:18;2241:34;;2277:22;;;2238:62;2235:88;;;2303:18;;:::i;:::-;2339:2;2332:22;2085:275;;-1:-1:-1;2085:275:12:o;2365:173::-;2433:20;;-1:-1:-1;;;;;2482:31:12;;2472:42;;2462:70;;2528:1;2525;2518:12;2543:1243;2654:6;2685:2;2728;2716:9;2707:7;2703:23;2699:32;2696:52;;;2744:1;2741;2734:12;2696:52;2784:9;2771:23;2813:18;2854:2;2846:6;2843:14;2840:34;;;2870:1;2867;2860:12;2840:34;2908:6;2897:9;2893:22;2883:32;;2953:7;2946:4;2942:2;2938:13;2934:27;2924:55;;2975:1;2972;2965:12;2924:55;3011:2;2998:16;3033:2;3029;3026:10;3023:36;;;3039:18;;:::i;:::-;3079:36;3111:2;3106;3103:1;3099:10;3095:19;3079:36;:::i;:::-;3149:15;;;3180:12;;;;-1:-1:-1;3231:1:12;3227:10;;;;3219:19;;3215:28;;;3255:19;;;3252:39;;;3287:1;3284;3277:12;3252:39;3311:11;;;;3331:425;3347:6;3342:3;3339:15;3331:425;;;3429:4;3423:3;3414:7;3410:17;3406:28;3403:118;;;3475:1;3504:2;3500;3493:14;3403:118;3547:22;;:::i;:::-;3596:23;3615:3;3596:23;:::i;:::-;3582:38;;3669:12;;;3656:26;3640:14;;;3633:50;3696:18;;3373:4;3364:14;;;;3734:12;;;;3331:425;;;3775:5;2543:1243;-1:-1:-1;;;;;;;2543:1243:12:o;4121:186::-;4180:6;4233:2;4221:9;4212:7;4208:23;4204:32;4201:52;;;4249:1;4246;4239:12;4201:52;4272:29;4291:9;4272:29;:::i;:::-;4262:39;4121:186;-1:-1:-1;;;4121:186:12:o;4312:1178::-;4580:2;4592:21;;;4662:13;;4565:18;;;4684:22;;;4532:4;;4759;;4737:2;4722:18;;;4786:15;;;4532:4;4829:195;4843:6;4840:1;4837:13;4829:195;;;4908:13;;-1:-1:-1;;;;;4904:39:12;4892:52;;4964:12;;;;4999:15;;;;4940:1;4858:9;4829:195;;;-1:-1:-1;;;5060:19:12;;;5040:18;;;5033:47;5130:13;;5152:21;;;5228:15;;;;5191:12;;;5263:1;5273:189;5289:8;5284:3;5281:17;5273:189;;;5358:15;;5344:30;;5435:17;;;;5396:14;;;;5317:1;5308:11;5273:189;;;-1:-1:-1;5479:5:12;;4312:1178;-1:-1:-1;;;;;;;4312:1178:12:o;5495:328::-;5572:6;5580;5588;5641:2;5629:9;5620:7;5616:23;5612:32;5609:52;;;5657:1;5654;5647:12;5609:52;5680:29;5699:9;5680:29;:::i;:::-;5670:39;;5728:38;5762:2;5751:9;5747:18;5728:38;:::i;:::-;5718:48;;5813:2;5802:9;5798:18;5785:32;5775:42;;5495:328;;;;;:::o;5828:254::-;5896:6;5904;5957:2;5945:9;5936:7;5932:23;5928:32;5925:52;;;5973:1;5970;5963:12;5925:52;5996:29;6015:9;5996:29;:::i;:::-;5986:39;6072:2;6057:18;;;;6044:32;;-1:-1:-1;;;5828:254:12:o;6279:127::-;6340:10;6335:3;6331:20;6328:1;6321:31;6371:4;6368:1;6361:15;6395:4;6392:1;6385:15;6411:267;6450:4;6479:9;;;6504:10;;-1:-1:-1;;;6523:19:12;;6516:27;;6500:44;6497:70;;;6547:18;;:::i;:::-;-1:-1:-1;;;;;6594:27:12;;6587:35;;6579:44;;6576:70;;;6626:18;;:::i;:::-;-1:-1:-1;;6663:9:12;;6411:267::o;6683:125::-;6723:4;6751:1;6748;6745:8;6742:34;;;6756:18;;:::i;:::-;-1:-1:-1;6793:9:12;;6683:125::o;6813:127::-;6874:10;6869:3;6865:20;6862:1;6855:31;6905:4;6902:1;6895:15;6929:4;6926:1;6919:15;6945:184;7015:6;7068:2;7056:9;7047:7;7043:23;7039:32;7036:52;;;7084:1;7081;7074:12;7036:52;-1:-1:-1;7107:16:12;;6945:184;-1:-1:-1;6945:184:12:o;7134:168::-;7174:7;7240:1;7236;7232:6;7228:14;7225:1;7222:21;7217:1;7210:9;7203:17;7199:45;7196:71;;;7247:18;;:::i;:::-;-1:-1:-1;7287:9:12;;7134:168::o;7307:217::-;7347:1;7373;7363:132;;7417:10;7412:3;7408:20;7405:1;7398:31;7452:4;7449:1;7442:15;7480:4;7477:1;7470:15;7363:132;-1:-1:-1;7509:9:12;;7307:217::o;7529:128::-;7569:3;7600:1;7596:6;7593:1;7590:13;7587:39;;;7606:18;;:::i;:::-;-1:-1:-1;7642:9:12;;7529:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "addTokenPool(address,address,uint256)": {
        "details": "function to add TokenPool to tokenPool array and various mappings",
        "params": {
          "_token": "- address of token",
          "_tokenPool": "- address of tokenPool",
          "concentration": "- value of target concentration "
        }
      },
      "checkDeposit(uint256)": {
        "details": "checks if any pool has a concentration more than \"percent\" % above/below target concentration",
        "params": {
          "percent": "- percent above/below target concentration "
        }
      },
      "checkWithdraw(uint256)": {
        "details": "function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from and how much to withdraw from each pool Checks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first",
        "params": {
          "_amount": "- amount to be withdrawn"
        }
      },
      "findMax((address,uint256)[])": {
        "details": "helper function that finds which pool has to have the most money withdrawn",
        "params": {
          "_rebalance": "- rebalancing array "
        }
      },
      "getConcentration(address)": {
        "details": "function to get the current concentration of a specific pool",
        "params": {
          "pool": "- pool to fnd concentration of "
        }
      },
      "getNewConcentration(address,uint256)": {
        "details": "function to get the concentration of certain pool when a certain amount is added to the pool",
        "params": {
          "amount": "- amount to be added to pool",
          "pool": "- pool to find concentration of"
        }
      },
      "getTotalAUMinUSD()": {
        "details": "function to get the total USD value of all assets in the protocol iterates through all the pools to get their usd value and adds all the values together"
      },
      "liquidityCheck(uint256)": {
        "details": "function that finds which pools need to be rebalanced through a withdraw",
        "params": {
          "_amount": "- how much usd is to be withdrawn Calculates new aum and how much money has to be added/removed from pool to reach the target concentration Checks which pool have to have money removed (and how much) and adds them to the array "
        }
      },
      "setFactory(address)": {
        "details": "function to set the factory address",
        "params": {
          "_factory": "(address of the factory)"
        }
      },
      "setTargetConcentration(address,uint256)": {
        "details": "function to update the target concentration of a specific pool ",
        "params": {
          "_pool": "- address of tokenPool",
          "_target": "- value of target concentration"
        }
      },
      "tokensToWithdraw(uint256)": {
        "details": "function to get the pools to withdraw from and the amount to withdraw from each pool",
        "params": {
          "_amount": "- amount in usd to be withdrawn"
        }
      }
    },
    "version": 1
  },
  "offset": [
    179,
    8186
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBCCC01BA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBCCC01BA EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xC0F1CCE5 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xD04238EE EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xFD192D7D EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x989796B5 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x9A9F3E35 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x9B765339 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xAC73B1BB EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E85D5F0 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x3E85D5F0 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x3F41ADDD EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x5BB47808 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6730B68A EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0x675C7C71 EQ PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xC0F916 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1B5AC4B5 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x29857FD1 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2DB20886 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH2 0x163 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x35C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x1A9 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x14C JUMP JUMPDEST PUSH2 0x168 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x61B JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP3 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH2 0x6D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x168 PUSH2 0x724 JUMP JUMPDEST PUSH2 0x168 PUSH2 0x231 CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x138 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x138 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x168 PUSH2 0xADD JUMP JUMPDEST PUSH2 0x168 PUSH2 0x2E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x138 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x219 PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0xC4D JUMP JUMPDEST PUSH2 0x322 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0x377 JUMPI PUSH2 0x371 DUP3 PUSH1 0x0 PUSH2 0x1033 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH2 0x3A1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3E6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3BF JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 PUSH2 0x3F3 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x401 DUP7 DUP4 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH2 0x423 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BA2F531 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x1BA2F531 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x475 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x499 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH3 0xF4240 PUSH2 0x4C3 DUP4 DUP9 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 PUSH2 0x4E3 DUP3 DUP6 PUSH2 0x1072 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x557 JUMPI PUSH2 0x557 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP JUMPDEST DUP5 PUSH1 0x1 ADD SWAP5 POP POP POP POP POP PUSH2 0x406 JUMP JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x0 SWAP1 DUP2 DUP1 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5F3 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5B4 JUMPI PUSH2 0x5B4 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP4 LT ISZERO PUSH2 0x5EB JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x5D9 JUMPI PUSH2 0x5D9 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x59A JUMP JUMPDEST POP DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x606 JUMPI PUSH2 0x606 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 SWAP5 POP SWAP5 POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x626 PUSH2 0xADD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BA2F531 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x6B1 JUMPI DUP2 PUSH2 0x6A2 PUSH3 0xF4240 DUP4 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH2 0x6CB DUP6 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x702 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDA476DD7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x74B JUMPI PUSH2 0x74B PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x76A DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x791 SWAP1 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x79E DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP PUSH2 0x7AA DUP2 DUP9 PUSH2 0x10F9 JUMP JUMPDEST SWAP7 POP DUP5 PUSH1 0x1 ADD SWAP5 POP POP POP POP POP PUSH2 0x72E JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x7D1 DUP5 PUSH2 0x380 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F1 JUMPI PUSH2 0x7F1 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x81A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x838 JUMPI PUSH2 0x838 PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x861 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x9DF JUMPI PUSH1 0x0 DUP1 PUSH2 0x87C DUP9 PUSH2 0x57D JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP11 DUP5 LT DUP1 ISZERO PUSH2 0x89D JUMPI POP DUP11 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x89B SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x92D JUMPI PUSH2 0x8AC DUP5 DUP13 PUSH2 0x1072 JUMP JUMPDEST DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8BE JUMPI PUSH2 0x8BE PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8E1 JUMPI PUSH2 0x8E1 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x913 JUMPI PUSH2 0x913 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP4 POP PUSH2 0x9D5 JUMP JUMPDEST DUP11 DUP5 LT DUP1 ISZERO PUSH2 0x94B JUMPI POP DUP11 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x948 SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x9D5 JUMPI DUP2 PUSH1 0x20 ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x967 JUMPI PUSH2 0x967 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x0 ADD MLOAD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x98A JUMPI PUSH2 0x98A PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x9AE SWAP1 DUP6 PUSH2 0x10F9 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9C4 JUMPI PUSH2 0x9C4 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD DUP2 DUP2 MSTORE POP POP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x868 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792074686520666163746F72792063616E2061646420746F6B656E2070 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x6F6F6C73 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD SWAP1 SWAP2 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 AND DUP9 OR SWAP1 SSTORE SWAP6 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP6 DUP3 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP3 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7BB JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB04 JUMPI PUSH2 0xB04 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BA2F531 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP DUP5 SWAP3 PUSH4 0x1BA2F531 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB56 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7A SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP1 POP PUSH2 0xB86 DUP2 DUP7 PUSH2 0x10F9 JUMP JUMPDEST SWAP5 POP DUP3 PUSH1 0x1 ADD SWAP3 POP POP POP PUSH2 0xAE7 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH2 0xBA1 PUSH2 0xADD JUMP JUMPDEST PUSH2 0xBAB SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BA2F531 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0xC41 JUMPI DUP2 PUSH2 0xC32 PUSH3 0xF4240 DUP4 PUSH2 0x10B8 JUMP JUMPDEST PUSH2 0xC3C SWAP2 SWAP1 PUSH2 0x10D7 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC78 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDA476DD7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD33 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCB9 JUMPI PUSH2 0xCB9 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0xCD8 DUP3 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0xCFF SWAP1 DUP4 PUSH2 0x1033 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD0C DUP3 PUSH2 0x35C JUMP JUMPDEST SWAP1 POP DUP8 DUP2 GT ISZERO PUSH2 0xD24 JUMPI POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SWAP5 POP POP POP POP POP PUSH2 0xC9C JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDA9 JUMPI PUSH2 0xD99 DUP5 DUP4 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD73 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xDEF JUMPI PUSH2 0xDEF PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE1E JUMPI PUSH2 0xE1E PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8E PUSH2 0xDB6 JUMP JUMPDEST PUSH2 0xE9C DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xDF5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x6 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0xEBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x40 DUP5 DUP10 SUB SLT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0xEE2 PUSH2 0xDCC JUMP JUMPDEST PUSH2 0xEEB DUP6 PUSH2 0xE26 JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD CALLDATALOAD DUP7 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0xEC1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF2C DUP3 PUSH2 0xE26 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF75 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF50 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP6 DUP4 ADD SWAP2 DUP4 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFAA JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF8E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFD5 DUP5 PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP PUSH2 0xFE3 PUSH1 0x20 DUP6 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1006 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100F DUP4 PUSH2 0xE26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x106C JUMPI PUSH2 0x106C PUSH2 0x101D JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1084 JUMPI PUSH2 0x1084 PUSH2 0x101D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10D2 JUMPI PUSH2 0x10D2 PUSH2 0x101D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x10F4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x110C JUMPI PUSH2 0x110C PUSH2 0x101D JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 0xB4 0x22 0xCF 0xE7 0x25 SAR 0xAE 0xCE DUP9 0xFB PUSH27 0xFC2BFB5FD0ACE7E8D0E5B84AC3076A1AFA2141D464736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x120"
    },
    "25": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "38": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBCCC01BA"
    },
    "49": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBCCC01BA"
    },
    "60": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CE"
    },
    "64": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC0F1CCE5"
    },
    "71": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D6"
    },
    "75": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC45A0155"
    },
    "82": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E9"
    },
    "86": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xD04238EE"
    },
    "93": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FC"
    },
    "97": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFD192D7D"
    },
    "104": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "105": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30F"
    },
    "108": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "109": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "REVERT",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "120": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x243"
    },
    "124": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x989796B5"
    },
    "131": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x256"
    },
    "135": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9A9F3E35"
    },
    "142": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x27F"
    },
    "146": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "148": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9B765339"
    },
    "153": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "154": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x292"
    },
    "157": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "158": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xAC73B1BB"
    },
    "164": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "165": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A5"
    },
    "168": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "169": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "REVERT",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3E85D5F0"
    },
    "180": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "GT",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3E85D5F0"
    },
    "191": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D2"
    },
    "195": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3F41ADDD"
    },
    "202": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "206": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "208": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5BB47808"
    },
    "213": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "214": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x206"
    },
    "217": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "218": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6730B68A"
    },
    "224": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "225": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21B"
    },
    "228": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "229": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x675C7C71"
    },
    "235": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "236": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x223"
    },
    "239": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "240": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "REVERT",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xC0F916"
    },
    "250": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "251": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x125"
    },
    "254": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "256": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1B5AC4B5"
    },
    "261": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "262": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x155"
    },
    "265": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "267": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x29857FD1"
    },
    "272": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "273": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x176"
    },
    "276": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "277": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "278": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2DB20886"
    },
    "283": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "EQ",
      "path": "5"
    },
    "284": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x196"
    },
    "287": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "288": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "289": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "291": {
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "DUP1",
      "path": "5"
    },
    "292": {
      "first_revert": true,
      "fn": null,
      "offset": [
        179,
        8186
      ],
      "op": "REVERT",
      "path": "5"
    },
    "293": {
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "294": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "297": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x133"
    },
    "300": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "301": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "303": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "306": {
      "fn": null,
      "jump": "i",
      "offset": [
        233,
        260
      ],
      "op": "JUMP",
      "path": "5"
    },
    "307": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "308": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x332"
    },
    "311": {
      "fn": null,
      "jump": "i",
      "offset": [
        233,
        260
      ],
      "op": "JUMP",
      "path": "5"
    },
    "312": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "313": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "315": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "op": "SUB"
    },
    "324": {
      "op": "SWAP1"
    },
    "325": {
      "op": "SWAP2"
    },
    "326": {
      "op": "AND"
    },
    "327": {
      "op": "DUP2"
    },
    "328": {
      "op": "MSTORE"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "333": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "335": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "336": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "DUP1",
      "path": "5"
    },
    "337": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "338": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "SUB",
      "path": "5"
    },
    "339": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "340": {
      "fn": null,
      "offset": [
        233,
        260
      ],
      "op": "RETURN",
      "path": "5"
    },
    "341": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "342": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "345": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x163"
    },
    "348": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "349": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "351": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "354": {
      "fn": "Registry.abs",
      "jump": "i",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMP",
      "path": "5"
    },
    "355": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "356": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C"
    },
    "359": {
      "fn": "Registry.abs",
      "jump": "i",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMP",
      "path": "5"
    },
    "360": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "361": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "363": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "364": {
      "op": "SWAP1"
    },
    "365": {
      "op": "DUP2"
    },
    "366": {
      "op": "MSTORE"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "369": {
      "op": "ADD"
    },
    "370": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "373": {
      "op": "JUMP"
    },
    "374": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "375": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x189"
    },
    "378": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "381": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "382": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "384": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "387": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "388": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "389": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x380"
    },
    "392": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "393": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "394": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "396": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "397": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "400": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "401": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "402": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD56"
    },
    "405": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "406": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "407": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A9"
    },
    "410": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A4"
    },
    "413": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "414": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "416": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE3D"
    },
    "419": {
      "fn": "Registry.findMax",
      "jump": "i",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMP",
      "path": "5"
    },
    "420": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "421": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57D"
    },
    "424": {
      "fn": "Registry.findMax",
      "jump": "i",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMP",
      "path": "5"
    },
    "425": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "426": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "428": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "DUP1",
      "path": "5"
    },
    "429": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "430": {
      "op": "DUP4"
    },
    "431": {
      "op": "MLOAD"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "438": {
      "op": "SHL"
    },
    "439": {
      "op": "SUB"
    },
    "440": {
      "op": "AND"
    },
    "441": {
      "op": "DUP2"
    },
    "442": {
      "op": "MSTORE"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "op": "SWAP4"
    },
    "446": {
      "op": "DUP5"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "op": "MLOAD"
    },
    "449": {
      "op": "SWAP4"
    },
    "450": {
      "op": "DUP2"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "op": "SWAP4"
    },
    "453": {
      "op": "SWAP1"
    },
    "454": {
      "op": "SWAP4"
    },
    "455": {
      "op": "MSTORE"
    },
    "456": {
      "op": "DUP3"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "461": {
      "op": "ADD"
    },
    "462": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "465": {
      "op": "JUMP"
    },
    "466": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "467": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "470": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E0"
    },
    "473": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "474": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "476": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF11"
    },
    "479": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMP",
      "path": "5"
    },
    "480": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "481": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61B"
    },
    "484": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMP",
      "path": "5"
    },
    "485": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "486": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F8"
    },
    "489": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F3"
    },
    "492": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "493": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "495": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "498": {
      "fn": "Registry.tokensToWithdraw",
      "jump": "i",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMP",
      "path": "5"
    },
    "499": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "500": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BC"
    },
    "503": {
      "fn": "Registry.tokensToWithdraw",
      "jump": "i",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMP",
      "path": "5"
    },
    "504": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "505": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "507": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "508": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "511": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "512": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "513": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "514": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF33"
    },
    "517": {
      "fn": "Registry.tokensToWithdraw",
      "jump": "i",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMP",
      "path": "5"
    },
    "518": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "519": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x219"
    },
    "522": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x214"
    },
    "525": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "526": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "528": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF11"
    },
    "531": {
      "fn": "Registry.setFactory",
      "jump": "i",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "532": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "533": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6D7"
    },
    "536": {
      "fn": "Registry.setFactory",
      "jump": "i",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "537": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "538": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "STOP",
      "path": "5"
    },
    "539": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7723,
        8179
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "540": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7723,
        8179
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "543": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7723,
        8179
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x724"
    },
    "546": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        7723,
        8179
      ],
      "op": "JUMP",
      "path": "5"
    },
    "547": {
      "offset": [
        385,
        440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "548": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "551": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x231"
    },
    "554": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "555": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "557": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF11"
    },
    "560": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        385,
        440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "561": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "562": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "564": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "566": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "567": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "569": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "570": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "DUP2",
      "path": "5"
    },
    "571": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "572": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "574": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "575": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "576": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "577": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "DUP2",
      "path": "5"
    },
    "578": {
      "fn": "Registry.calcDeposit",
      "offset": [
        385,
        440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "579": {
      "offset": [
        211,
        231
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "580": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "582": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "583": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "586": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "SUB"
    },
    "595": {
      "offset": [
        211,
        231
      ],
      "op": "AND",
      "path": "5"
    },
    "596": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "DUP2",
      "path": "5"
    },
    "597": {
      "fn": "Registry.calcDeposit",
      "offset": [
        211,
        231
      ],
      "op": "JUMP",
      "path": "5"
    },
    "598": {
      "offset": [
        287,
        334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "599": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "602": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x264"
    },
    "605": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "606": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "608": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF11"
    },
    "611": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        287,
        334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "612": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "613": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "615": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "617": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "618": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "620": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "621": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "DUP2",
      "path": "5"
    },
    "622": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "623": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "625": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "626": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "627": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "op": "SUB"
    },
    "636": {
      "offset": [
        287,
        334
      ],
      "op": "AND",
      "path": "5"
    },
    "637": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "DUP2",
      "path": "5"
    },
    "638": {
      "fn": "Registry.calcDeposit",
      "offset": [
        287,
        334
      ],
      "op": "JUMP",
      "path": "5"
    },
    "639": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "640": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F8"
    },
    "643": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28D"
    },
    "646": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "647": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "649": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "652": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "653": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "654": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C3"
    },
    "657": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "658": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "659": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x219"
    },
    "662": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A0"
    },
    "665": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "666": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "668": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFB7"
    },
    "671": {
      "fn": "Registry.addTokenPool",
      "jump": "i",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMP",
      "path": "5"
    },
    "672": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "673": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9ED"
    },
    "676": {
      "fn": "Registry.addTokenPool",
      "jump": "i",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMP",
      "path": "5"
    },
    "677": {
      "offset": [
        336,
        383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "678": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "681": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B3"
    },
    "684": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "685": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "687": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF11"
    },
    "690": {
      "fn": "Registry.addTokenPool",
      "jump": "i",
      "offset": [
        336,
        383
      ],
      "op": "JUMP",
      "path": "5"
    },
    "691": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "692": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "694": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "696": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "697": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "699": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "700": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "701": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "702": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "704": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "705": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "706": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "offset": [
        336,
        383
      ],
      "op": "AND",
      "path": "5"
    },
    "716": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "DUP2",
      "path": "5"
    },
    "717": {
      "fn": "Registry.addTokenPool",
      "offset": [
        336,
        383
      ],
      "op": "JUMP",
      "path": "5"
    },
    "718": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2147,
        2522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "719": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2147,
        2522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "722": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2147,
        2522
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADD"
    },
    "725": {
      "fn": "Registry.getTotalAUMinUSD",
      "jump": "i",
      "offset": [
        2147,
        2522
      ],
      "op": "JUMP",
      "path": "5"
    },
    "726": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "727": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168"
    },
    "730": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E4"
    },
    "733": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "734": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "736": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF3"
    },
    "739": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMP",
      "path": "5"
    },
    "740": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "741": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB95"
    },
    "744": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMP",
      "path": "5"
    },
    "745": {
      "offset": [
        262,
        284
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "746": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "748": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "749": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138"
    },
    "752": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "759": {
      "op": "SHL"
    },
    "760": {
      "op": "SUB"
    },
    "761": {
      "offset": [
        262,
        284
      ],
      "op": "AND",
      "path": "5"
    },
    "762": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "DUP2",
      "path": "5"
    },
    "763": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        262,
        284
      ],
      "op": "JUMP",
      "path": "5"
    },
    "764": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "765": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x219"
    },
    "768": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30A"
    },
    "771": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "772": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "774": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF3"
    },
    "777": {
      "fn": "Registry.setTargetConcentration",
      "jump": "i",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "778": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "779": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC4D"
    },
    "782": {
      "fn": "Registry.setTargetConcentration",
      "jump": "i",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "783": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "784": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x322"
    },
    "787": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x31D"
    },
    "790": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "791": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "793": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3D"
    },
    "796": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMP",
      "path": "5"
    },
    "797": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "798": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC94"
    },
    "801": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMP",
      "path": "5"
    },
    "802": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "803": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "805": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "806": {
      "op": "SWAP1"
    },
    "807": {
      "op": "ISZERO"
    },
    "808": {
      "op": "ISZERO"
    },
    "809": {
      "op": "DUP2"
    },
    "810": {
      "op": "MSTORE"
    },
    "811": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "813": {
      "op": "ADD"
    },
    "814": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C"
    },
    "817": {
      "op": "JUMP"
    },
    "818": {
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "819": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "821": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "DUP2",
      "path": "5"
    },
    "822": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "DUP2",
      "path": "5"
    },
    "823": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "824": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "DUP2",
      "path": "5"
    },
    "825": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "LT",
      "path": "5"
    },
    "826": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x342"
    },
    "829": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "830": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "832": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "DUP1",
      "path": "5"
    },
    "833": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "REVERT",
      "path": "5"
    },
    "834": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "835": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "837": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "838": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "DUP3",
      "path": "5"
    },
    "839": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "840": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "842": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "843": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "844": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "845": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "ADD",
      "path": "5"
    },
    "846": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "853": {
      "op": "SHL"
    },
    "854": {
      "op": "SUB"
    },
    "855": {
      "offset": [
        233,
        260
      ],
      "op": "AND",
      "path": "5"
    },
    "856": {
      "fn": "Registry.checkDeposit",
      "offset": [
        233,
        260
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "857": {
      "op": "POP"
    },
    "858": {
      "offset": [
        233,
        260
      ],
      "op": "DUP2",
      "path": "5"
    },
    "859": {
      "fn": "Registry.checkDeposit",
      "jump": "o",
      "offset": [
        233,
        260
      ],
      "op": "JUMP",
      "path": "5"
    },
    "860": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "861": {
      "fn": "Registry.abs",
      "offset": [
        7570,
        7574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "863": {
      "fn": "Registry.abs",
      "offset": [
        7591,
        7592
      ],
      "op": "DUP1",
      "path": "5"
    },
    "864": {
      "fn": "Registry.abs",
      "offset": [
        7589,
        7590
      ],
      "op": "DUP3",
      "path": "5"
    },
    "865": {
      "branch": 36,
      "fn": "Registry.abs",
      "offset": [
        7589,
        7592
      ],
      "op": "SLT",
      "path": "5"
    },
    "866": {
      "fn": "Registry.abs",
      "offset": [
        7585,
        7707
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "867": {
      "fn": "Registry.abs",
      "offset": [
        7585,
        7707
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x377"
    },
    "870": {
      "branch": 36,
      "fn": "Registry.abs",
      "offset": [
        7585,
        7707
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "871": {
      "fn": "Registry.abs",
      "offset": [
        7611,
        7616
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 0,
      "value": "0x371"
    },
    "874": {
      "fn": "Registry.abs",
      "offset": [
        7615,
        7616
      ],
      "op": "DUP3",
      "path": "5"
    },
    "875": {
      "fn": "Registry.abs",
      "offset": [
        7611,
        7612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "877": {
      "fn": "Registry.abs",
      "offset": [
        7611,
        7616
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1033"
    },
    "880": {
      "fn": "Registry.abs",
      "jump": "i",
      "offset": [
        7611,
        7616
      ],
      "op": "JUMP",
      "path": "5"
    },
    "881": {
      "fn": "Registry.abs",
      "offset": [
        7611,
        7616
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "882": {
      "fn": "Registry.abs",
      "offset": [
        7607,
        7616
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "883": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "884": {
      "op": "POP"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "fn": "Registry.abs",
      "jump": "o",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMP",
      "path": "5"
    },
    "887": {
      "fn": "Registry.abs",
      "offset": [
        7585,
        7707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "fn": "Registry.abs",
      "offset": [
        7694,
        7695
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 1
    },
    "890": {
      "fn": "Registry.abs",
      "jump": "o",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMP",
      "path": "5"
    },
    "891": {
      "fn": "Registry.abs",
      "offset": [
        7585,
        7707
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "892": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "893": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "894": {
      "fn": "Registry.abs",
      "offset": [
        7525,
        7713
      ],
      "op": "POP",
      "path": "5"
    },
    "895": {
      "fn": "Registry.abs",
      "jump": "o",
      "offset": [
        7525,
        7713
      ],
      "op": "JUMP",
      "path": "5"
    },
    "896": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "897": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3341,
        3351
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "899": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3341,
        3358
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "900": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3297,
        3317
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "902": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3297,
        3317
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "903": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3330,
        3338
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "905": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3341,
        3358
      ],
      "op": "DUP2",
      "path": "5"
    },
    "906": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "915": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP2",
      "path": "5"
    },
    "916": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "GT",
      "path": "5"
    },
    "917": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "918": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "921": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "922": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3A1"
    },
    "925": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB6"
    },
    "928": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMP",
      "path": "5"
    },
    "929": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "930": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "932": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "933": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "934": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP1",
      "path": "5"
    },
    "935": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP3",
      "path": "5"
    },
    "936": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "937": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP1",
      "path": "5"
    },
    "938": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "940": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "MUL",
      "path": "5"
    },
    "941": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "943": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ADD",
      "path": "5"
    },
    "944": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP3",
      "path": "5"
    },
    "945": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ADD",
      "path": "5"
    },
    "946": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "948": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "949": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP1",
      "path": "5"
    },
    "950": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "951": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E6"
    },
    "954": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "955": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP2",
      "path": "5"
    },
    "956": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "958": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ADD",
      "path": "5"
    },
    "959": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "962": {
      "op": "DUP1"
    },
    "963": {
      "op": "MLOAD"
    },
    "964": {
      "op": "DUP1"
    },
    "965": {
      "op": "DUP3"
    },
    "966": {
      "op": "ADD"
    },
    "967": {
      "op": "SWAP1"
    },
    "968": {
      "op": "SWAP2"
    },
    "969": {
      "op": "MSTORE"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "972": {
      "op": "DUP1"
    },
    "973": {
      "op": "DUP3"
    },
    "974": {
      "op": "MSTORE"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP2",
      "path": "5"
    },
    "981": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "982": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "984": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "ADD",
      "path": "5"
    },
    "985": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "986": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "988": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "989": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SUB",
      "path": "5"
    },
    "990": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "991": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "DUP2",
      "path": "5"
    },
    "992": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "995": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "996": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "997": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "POP",
      "path": "5"
    },
    "998": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "999": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3400,
        3422
      ],
      "op": "POP",
      "path": "5"
    },
    "1000": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3368,
        3422
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1001": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3368,
        3422
      ],
      "op": "POP",
      "path": "5"
    },
    "1002": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3432,
        3440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1004": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3443,
        3461
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F3"
    },
    "1007": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3443,
        3459
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADD"
    },
    "1010": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3443,
        3461
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1011": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3443,
        3461
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1012": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3432,
        3461
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3471,
        3482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1016": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3485,
        3498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x401"
    },
    "1019": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3491,
        3498
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1020": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3432,
        3461
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1021": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3485,
        3498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1072"
    },
    "1024": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3485,
        3498
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1025": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3485,
        3498
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1026": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3471,
        3498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1027": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3471,
        3498
      ],
      "op": "POP",
      "path": "5"
    },
    "1028": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3513,
        3519
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1030": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1031": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3529,
        3532
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1032": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3525,
        3526
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1033": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3525,
        3532
      ],
      "op": "LT",
      "path": "5"
    },
    "1034": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1035": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x572"
    },
    "1038": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1039": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3549,
        3561
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1041": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3574
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1043": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3575,
        3576
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1044": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1045": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1046": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1047": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "LT",
      "path": "5"
    },
    "1048": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x423"
    },
    "1051": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1052": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x423"
    },
    "1055": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1058": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3564,
        3577
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1059": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1060": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1062": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1063": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1064": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1065": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1067": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1068": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1069": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1070": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1071": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1072": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "ADD",
      "path": "5"
    },
    "1073": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1074": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1076": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1077": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1078": {
      "op": "PUSH4",
      "value": "0x1BA2F531"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1087": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1088": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1089": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "op": "SUB"
    },
    "1098": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1099": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1100": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "AND",
      "path": "5"
    },
    "1101": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1104": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1105": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3642
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1BA2F531"
    },
    "1110": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3642
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1111": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1113": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1114": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1115": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ADD",
      "path": "5"
    },
    "1116": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1117": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1118": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1119": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SUB",
      "path": "5"
    },
    "1120": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ADD",
      "path": "5"
    },
    "1121": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1122": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3564,
        3577
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1123": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "GAS",
      "path": "5"
    },
    "1124": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "1125": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1126": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1127": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1128": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x475"
    },
    "1131": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1132": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1133": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1135": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1136": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1137": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1138": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1140": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1141": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1142": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "POP",
      "path": "5"
    },
    "1143": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "POP",
      "path": "5"
    },
    "1144": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "POP",
      "path": "5"
    },
    "1145": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "POP",
      "path": "5"
    },
    "1146": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1148": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1149": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1150": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1152": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "NOT",
      "path": "5"
    },
    "1153": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1155": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1156": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ADD",
      "path": "5"
    },
    "1157": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "AND",
      "path": "5"
    },
    "1158": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1159": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ADD",
      "path": "5"
    },
    "1160": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1161": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1163": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1164": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "POP",
      "path": "5"
    },
    "1165": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1166": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "ADD",
      "path": "5"
    },
    "1167": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1168": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x499"
    },
    "1171": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1172": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1173": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109F"
    },
    "1176": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3613,
        3644
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1177": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3613,
        3644
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1184": {
      "op": "SHL"
    },
    "1185": {
      "op": "SUB"
    },
    "1186": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1187": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "AND",
      "path": "5"
    },
    "1188": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3658,
        3672
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1190": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1191": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1192": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1193": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3694
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1195": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1197": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1198": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1200": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1201": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1202": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1203": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3591,
        3644
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1204": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3591,
        3644
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "offset": [
        471,
        474
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xF4240"
    },
    "1210": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C3"
    },
    "1213": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3675,
        3700
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1214": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3741
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1215": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B8"
    },
    "1218": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3735,
        3748
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1219": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3748
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1220": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4CD"
    },
    "1223": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3758
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1224": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1225": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3758
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D7"
    },
    "1228": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3735,
        3758
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1229": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3735,
        3758
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1230": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3714,
        3758
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1231": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3714,
        3758
      ],
      "op": "POP",
      "path": "5"
    },
    "1232": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3789,
        3799
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1233": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3775,
        3786
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1234": {
      "branch": 37,
      "fn": "Registry.liquidityCheck",
      "offset": [
        3775,
        3799
      ],
      "op": "GT",
      "path": "5"
    },
    "1235": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1236": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x526"
    },
    "1239": {
      "branch": 37,
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1240": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3818,
        3829
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1242": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3832,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E3"
    },
    "1245": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3846,
        3856
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1246": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3832,
        3843
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1247": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3832,
        3856
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1072"
    },
    "1250": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3832,
        3856
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1251": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3832,
        3856
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1252": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3818,
        3856
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1253": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3818,
        3856
      ],
      "op": "POP",
      "path": "5"
    },
    "1254": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x40"
    },
    "1256": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1257": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1258": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1260": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "ADD",
      "path": "5"
    },
    "1261": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1263": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1264": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1265": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3906,
        3910
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1272": {
      "op": "SHL"
    },
    "1273": {
      "op": "SUB"
    },
    "1274": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "AND",
      "path": "5"
    },
    "1275": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1276": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1277": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1279": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "ADD",
      "path": "5"
    },
    "1280": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3917,
        3920
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1281": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1282": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1283": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3887,
        3922
      ],
      "op": "POP",
      "path": "5"
    },
    "1284": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3882
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1285": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3883,
        3884
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1286": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1287": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1288": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1289": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "LT",
      "path": "5"
    },
    "1290": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x515"
    },
    "1293": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1294": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x515"
    },
    "1297": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1300": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3874,
        3885
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1301": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1302": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1304": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "MUL",
      "path": "5"
    },
    "1305": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1307": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "ADD",
      "path": "5"
    },
    "1308": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3885
      ],
      "op": "ADD",
      "path": "5"
    },
    "1309": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3923
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1310": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3923
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1311": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3923
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1312": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3874,
        3923
      ],
      "op": "POP",
      "path": "5"
    },
    "1313": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3800,
        3938
      ],
      "op": "POP",
      "path": "5"
    },
    "1314": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x563"
    },
    "1317": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1318": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1319": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "1321": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1322": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1323": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1325": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "ADD",
      "path": "5"
    },
    "1326": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1328": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1329": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1330": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4005,
        4009
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1337": {
      "op": "SHL"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "AND",
      "path": "5"
    },
    "1340": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1341": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1342": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1344": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "ADD",
      "path": "5"
    },
    "1345": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4016,
        4017
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1347": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1348": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1349": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3986,
        4019
      ],
      "op": "POP",
      "path": "5"
    },
    "1350": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3981
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1351": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3982,
        3983
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1352": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1353": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1354": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1355": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "LT",
      "path": "5"
    },
    "1356": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x557"
    },
    "1359": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1360": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x557"
    },
    "1363": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1366": {
      "fn": "Registry.liquidityCheck",
      "jump": "i",
      "offset": [
        3973,
        3984
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1367": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1368": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1370": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "MUL",
      "path": "5"
    },
    "1371": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1373": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "ADD",
      "path": "5"
    },
    "1374": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        3984
      ],
      "op": "ADD",
      "path": "5"
    },
    "1375": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        4020
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1376": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        4020
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1377": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        4020
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1378": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3973,
        4020
      ],
      "op": "POP",
      "path": "5"
    },
    "1379": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3772,
        4035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1380": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4058,
        4061
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 4
    },
    "1381": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4058,
        4061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1383": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4058,
        4061
      ],
      "op": "ADD",
      "path": "5"
    },
    "1384": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4058,
        4061
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1385": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4058,
        4061
      ],
      "op": "POP",
      "path": "5"
    },
    "1386": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3535,
        4073
      ],
      "op": "POP",
      "path": "5"
    },
    "1387": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3535,
        4073
      ],
      "op": "POP",
      "path": "5"
    },
    "1388": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3535,
        4073
      ],
      "op": "POP",
      "path": "5"
    },
    "1389": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3535,
        4073
      ],
      "op": "POP",
      "path": "5"
    },
    "1390": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x406"
    },
    "1393": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1394": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3508,
        4073
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1395": {
      "op": "POP"
    },
    "1396": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4089,
        4097
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 5
    },
    "1397": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        4089,
        4097
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1398": {
      "fn": "Registry.liquidityCheck",
      "offset": [
        3236,
        4108
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "op": "POP"
    },
    "1404": {
      "fn": "Registry.liquidityCheck",
      "jump": "o",
      "offset": [
        3236,
        4108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1405": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1408": {
      "op": "DUP1"
    },
    "1409": {
      "op": "MLOAD"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "DUP3"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "SWAP1"
    },
    "1414": {
      "op": "SWAP2"
    },
    "1415": {
      "op": "MSTORE"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1418": {
      "op": "DUP1"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "MSTORE"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "fn": "Registry.findMax",
      "offset": [
        5628,
        5645
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1427": {
      "fn": "Registry.findMax",
      "offset": [
        5628,
        5645
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1428": {
      "fn": "Registry.findMax",
      "offset": [
        5595,
        5602
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1430": {
      "fn": "Registry.findMax",
      "offset": [
        5595,
        5602
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1431": {
      "fn": "Registry.findMax",
      "offset": [
        5595,
        5602
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1432": {
      "fn": "Registry.findMax",
      "offset": [
        5595,
        5602
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1433": {
      "fn": "Registry.findMax",
      "offset": [
        5595,
        5602
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1434": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1435": {
      "fn": "Registry.findMax",
      "offset": [
        5720,
        5723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1436": {
      "fn": "Registry.findMax",
      "offset": [
        5718,
        5719
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1437": {
      "fn": "Registry.findMax",
      "offset": [
        5718,
        5723
      ],
      "op": "LT",
      "path": "5"
    },
    "1438": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1439": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5F3"
    },
    "1442": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1443": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5759
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1444": {
      "fn": "Registry.findMax",
      "offset": [
        5760,
        5761
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1445": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1446": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1447": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1448": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "LT",
      "path": "5"
    },
    "1449": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B4"
    },
    "1452": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1453": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5B4"
    },
    "1456": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1459": {
      "fn": "Registry.findMax",
      "jump": "i",
      "offset": [
        5749,
        5762
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1460": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1461": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1463": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "MUL",
      "path": "5"
    },
    "1464": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1466": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "ADD",
      "path": "5"
    },
    "1467": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "ADD",
      "path": "5"
    },
    "1468": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5762
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1469": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5766
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1471": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5766
      ],
      "op": "ADD",
      "path": "5"
    },
    "1472": {
      "fn": "Registry.findMax",
      "offset": [
        5749,
        5766
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1473": {
      "fn": "Registry.findMax",
      "offset": [
        5743,
        5746
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1474": {
      "branch": 38,
      "fn": "Registry.findMax",
      "offset": [
        5743,
        5766
      ],
      "op": "LT",
      "path": "5"
    },
    "1475": {
      "fn": "Registry.findMax",
      "offset": [
        5739,
        5850
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1476": {
      "fn": "Registry.findMax",
      "offset": [
        5739,
        5850
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5EB"
    },
    "1479": {
      "branch": 38,
      "fn": "Registry.findMax",
      "offset": [
        5739,
        5850
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1480": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5801
      ],
      "op": "DUP7",
      "path": "5",
      "statement": 6
    },
    "1481": {
      "fn": "Registry.findMax",
      "offset": [
        5802,
        5803
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1482": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1483": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1484": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1485": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "LT",
      "path": "5"
    },
    "1486": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D9"
    },
    "1489": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1490": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D9"
    },
    "1493": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1496": {
      "fn": "Registry.findMax",
      "jump": "i",
      "offset": [
        5791,
        5804
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1497": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1498": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1500": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "MUL",
      "path": "5"
    },
    "1501": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1503": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "ADD",
      "path": "5"
    },
    "1504": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "ADD",
      "path": "5"
    },
    "1505": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5804
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1506": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1508": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5808
      ],
      "op": "ADD",
      "path": "5"
    },
    "1509": {
      "fn": "Registry.findMax",
      "offset": [
        5791,
        5808
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1510": {
      "fn": "Registry.findMax",
      "offset": [
        5785,
        5808
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1511": {
      "fn": "Registry.findMax",
      "offset": [
        5785,
        5808
      ],
      "op": "POP",
      "path": "5"
    },
    "1512": {
      "fn": "Registry.findMax",
      "offset": [
        5834,
        5835
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 7
    },
    "1513": {
      "fn": "Registry.findMax",
      "offset": [
        5826,
        5835
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1514": {
      "fn": "Registry.findMax",
      "offset": [
        5826,
        5835
      ],
      "op": "POP",
      "path": "5"
    },
    "1515": {
      "fn": "Registry.findMax",
      "offset": [
        5739,
        5850
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1516": {
      "fn": "Registry.findMax",
      "offset": [
        5873,
        5876
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0x1"
    },
    "1518": {
      "fn": "Registry.findMax",
      "offset": [
        5873,
        5876
      ],
      "op": "ADD",
      "path": "5"
    },
    "1519": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x59A"
    },
    "1522": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1523": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1524": {
      "fn": "Registry.findMax",
      "offset": [
        5701,
        5888
      ],
      "op": "POP",
      "path": "5"
    },
    "1525": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5915
      ],
      "op": "DUP6",
      "path": "5",
      "statement": 9
    },
    "1526": {
      "fn": "Registry.findMax",
      "offset": [
        5916,
        5921
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1527": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1528": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1529": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1530": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "LT",
      "path": "5"
    },
    "1531": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x606"
    },
    "1534": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1535": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x606"
    },
    "1538": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1541": {
      "fn": "Registry.findMax",
      "jump": "i",
      "offset": [
        5905,
        5922
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1542": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1543": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1545": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "MUL",
      "path": "5"
    },
    "1546": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1548": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "ADD",
      "path": "5"
    },
    "1549": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "ADD",
      "path": "5"
    },
    "1550": {
      "fn": "Registry.findMax",
      "offset": [
        5905,
        5922
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1551": {
      "fn": "Registry.findMax",
      "offset": [
        5923,
        5928
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1552": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1553": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "POP",
      "path": "5"
    },
    "1554": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1555": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "POP",
      "path": "5"
    },
    "1556": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "POP",
      "path": "5"
    },
    "1557": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "POP",
      "path": "5"
    },
    "1558": {
      "fn": "Registry.findMax",
      "offset": [
        5897,
        5929
      ],
      "op": "POP",
      "path": "5"
    },
    "1559": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1560": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "POP",
      "path": "5"
    },
    "1561": {
      "fn": "Registry.findMax",
      "offset": [
        5503,
        5936
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1562": {
      "fn": "Registry.findMax",
      "jump": "o",
      "offset": [
        5503,
        5936
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1563": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1564": {
      "fn": "Registry.getConcentration",
      "offset": [
        6120,
        6124
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1566": {
      "fn": "Registry.getConcentration",
      "offset": [
        6139,
        6152
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1567": {
      "fn": "Registry.getConcentration",
      "offset": [
        6155,
        6173
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x626"
    },
    "1570": {
      "fn": "Registry.getConcentration",
      "offset": [
        6155,
        6171
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADD"
    },
    "1573": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6155,
        6173
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1574": {
      "fn": "Registry.getConcentration",
      "offset": [
        6155,
        6173
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1575": {
      "fn": "Registry.getConcentration",
      "offset": [
        6139,
        6173
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1576": {
      "fn": "Registry.getConcentration",
      "offset": [
        6139,
        6173
      ],
      "op": "POP",
      "path": "5"
    },
    "1577": {
      "fn": "Registry.getConcentration",
      "offset": [
        6187,
        6206
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1579": {
      "fn": "Registry.getConcentration",
      "offset": [
        6220,
        6224
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1584": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1586": {
      "op": "SHL"
    },
    "1587": {
      "op": "SUB"
    },
    "1588": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6238
      ],
      "op": "AND",
      "path": "5"
    },
    "1589": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6238
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1BA2F531"
    },
    "1594": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1596": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1597": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1598": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "1603": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "AND",
      "path": "5"
    },
    "1604": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "1606": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "SHL",
      "path": "5"
    },
    "1607": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1608": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1609": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1611": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ADD",
      "path": "5"
    },
    "1612": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1614": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1616": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1617": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1618": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1619": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "SUB",
      "path": "5"
    },
    "1620": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1621": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1622": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "GAS",
      "path": "5"
    },
    "1623": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "1624": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1625": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1626": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1627": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x668"
    },
    "1630": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1631": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1632": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1634": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1635": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1636": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1637": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1639": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1640": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1641": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "POP",
      "path": "5"
    },
    "1642": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "POP",
      "path": "5"
    },
    "1643": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "POP",
      "path": "5"
    },
    "1644": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "POP",
      "path": "5"
    },
    "1645": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1647": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1648": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1649": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1651": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "NOT",
      "path": "5"
    },
    "1652": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1654": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1655": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ADD",
      "path": "5"
    },
    "1656": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "AND",
      "path": "5"
    },
    "1657": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1658": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ADD",
      "path": "5"
    },
    "1659": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1660": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1662": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1663": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "POP",
      "path": "5"
    },
    "1664": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1665": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "ADD",
      "path": "5"
    },
    "1666": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1667": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x68C"
    },
    "1670": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1671": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1672": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109F"
    },
    "1675": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6209,
        6240
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1676": {
      "fn": "Registry.getConcentration",
      "offset": [
        6209,
        6240
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1677": {
      "fn": "Registry.getConcentration",
      "offset": [
        6187,
        6240
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6278
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 10
    },
    "1680": {
      "branch": 39,
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6278
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1681": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B1"
    },
    "1684": {
      "branch": 39,
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1685": {
      "fn": "Registry.getConcentration",
      "offset": [
        6306,
        6311
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1686": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A2"
    },
    "1689": {
      "offset": [
        471,
        474
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xF4240"
    },
    "1693": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6295
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1694": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6305
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B8"
    },
    "1697": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6284,
        6305
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1698": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6305
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1699": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AC"
    },
    "1702": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6311
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1703": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6311
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1704": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D7"
    },
    "1707": {
      "fn": "Registry.getConcentration",
      "jump": "i",
      "offset": [
        6284,
        6311
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1708": {
      "fn": "Registry.getConcentration",
      "offset": [
        6284,
        6311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1709": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6B4"
    },
    "1712": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1713": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1714": {
      "fn": "Registry.getConcentration",
      "offset": [
        6281,
        6282
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1716": {
      "fn": "Registry.getConcentration",
      "offset": [
        6268,
        6311
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1717": {
      "fn": "Registry.getConcentration",
      "offset": [
        6261,
        6311
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1718": {
      "fn": "Registry.getConcentration",
      "offset": [
        6060,
        6322
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1719": {
      "op": "POP"
    },
    "1720": {
      "op": "POP"
    },
    "1721": {
      "op": "POP"
    },
    "1722": {
      "op": "POP"
    },
    "1723": {
      "fn": "Registry.getConcentration",
      "jump": "o",
      "offset": [
        6060,
        6322
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1724": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1725": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2738,
        2754
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1727": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2756,
        2772
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1728": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2784,
        2806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1730": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2808,
        2833
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1731": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2837,
        2859
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6CB"
    },
    "1734": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2851,
        2858
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1735": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2837,
        2850
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C3"
    },
    "1738": {
      "fn": "Registry.tokensToWithdraw",
      "jump": "i",
      "offset": [
        2837,
        2859
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1739": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2837,
        2859
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1740": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2783,
        2859
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1741": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2783,
        2859
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1742": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2783,
        2859
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1743": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2783,
        2859
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1744": {
      "op": "POP"
    },
    "1745": {
      "fn": "Registry.tokensToWithdraw",
      "offset": [
        2674,
        2900
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1746": {
      "op": "POP"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "op": "POP"
    },
    "1749": {
      "op": "POP"
    },
    "1750": {
      "fn": "Registry.tokensToWithdraw",
      "jump": "o",
      "offset": [
        2674,
        2900
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1751": {
      "fn": "Registry.setFactory",
      "offset": [
        993,
        1085
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1752": {
      "offset": [
        755,
        760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1754": {
      "fn": "Registry.setFactory",
      "offset": [
        755,
        760
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1761": {
      "op": "SHL"
    },
    "1762": {
      "op": "SUB"
    },
    "1763": {
      "offset": [
        755,
        760
      ],
      "op": "AND",
      "path": "5"
    },
    "1764": {
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1765": {
      "offset": [
        741,
        760
      ],
      "op": "EQ",
      "path": "5"
    },
    "1766": {
      "offset": [
        737,
        814
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x702"
    },
    "1769": {
      "offset": [
        737,
        814
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1770": {
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1772": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1773": {
      "op": "PUSH4",
      "value": "0xDA476DD7"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1780": {
      "op": "SHL"
    },
    "1781": {
      "offset": [
        783,
        803
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1782": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1783": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1785": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "ADD",
      "path": "5"
    },
    "1786": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1788": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1789": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1790": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1791": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "SUB",
      "path": "5"
    },
    "1792": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1793": {
      "fn": "Registry.setFactory",
      "offset": [
        783,
        803
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1794": {
      "offset": [
        737,
        814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1795": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1067
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 11,
      "value": "0x2"
    },
    "1797": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1798": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "op": "SUB"
    },
    "1807": {
      "op": "NOT"
    },
    "1808": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "AND",
      "path": "5"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "SUB"
    },
    "1817": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1818": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1819": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1820": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "AND",
      "path": "5"
    },
    "1821": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1822": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1823": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1824": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "OR",
      "path": "5"
    },
    "1825": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1826": {
      "fn": "Registry.setFactory",
      "offset": [
        1060,
        1078
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1827": {
      "fn": "Registry.setFactory",
      "jump": "o",
      "offset": [
        993,
        1085
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1828": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7723,
        8179
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1829": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7817,
        7827
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1831": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7817,
        7834
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1832": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7767,
        7771
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1834": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7767,
        7771
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1835": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7767,
        7771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1836": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7767,
        7771
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1837": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7767,
        7771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1838": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1839": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7865,
        7868
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1840": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7861,
        7862
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1841": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7861,
        7868
      ],
      "op": "LT",
      "path": "5"
    },
    "1842": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1843": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7BB"
    },
    "1846": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1847": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7885,
        7897
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1849": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7910
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1851": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7911,
        7912
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1852": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1853": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1854": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1855": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "LT",
      "path": "5"
    },
    "1856": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74B"
    },
    "1859": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1860": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x74B"
    },
    "1863": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "1866": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        7900,
        7913
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1867": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1868": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1870": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1871": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1872": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1873": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1875": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1876": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1877": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "ADD",
      "path": "5"
    },
    "1878": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1885": {
      "op": "SHL"
    },
    "1886": {
      "op": "SUB"
    },
    "1887": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "AND",
      "path": "5"
    },
    "1888": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7955,
        7977
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x76A"
    },
    "1893": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7900,
        7913
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1894": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7955,
        7971
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61B"
    },
    "1897": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        7955,
        7977
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1898": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7955,
        7977
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1908": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "AND",
      "path": "5"
    },
    "1909": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7991,
        7999
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1911": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1912": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1913": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1914": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8053
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1916": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1918": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1919": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1921": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1922": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1923": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8034,
        8059
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1924": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7927,
        7977
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1925": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7927,
        7977
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7991,
        7999
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1928": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8002,
        8060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x791"
    },
    "1931": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8002,
        8060
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1932": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7927,
        7977
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1933": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8002,
        8060
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1033"
    },
    "1936": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        8002,
        8060
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1937": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8002,
        8060
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1938": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7991,
        8060
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1939": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7991,
        8060
      ],
      "op": "POP",
      "path": "5"
    },
    "1940": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8074,
        8086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1942": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8089,
        8098
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x79E"
    },
    "1945": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8093,
        8097
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1946": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8089,
        8092
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C"
    },
    "1949": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        8089,
        8098
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1950": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8089,
        8098
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1951": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8074,
        8098
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1952": {
      "op": "POP"
    },
    "1953": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 12,
      "value": "0x7AA"
    },
    "1956": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8074,
        8098
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1957": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1958": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "1961": {
      "fn": "Registry.calcDeposit",
      "jump": "i",
      "offset": [
        8112,
        8128
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1962": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1963": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1964": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8112,
        8128
      ],
      "op": "POP",
      "path": "5"
    },
    "1965": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8153,
        8156
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 13
    },
    "1966": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8153,
        8156
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1968": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8153,
        8156
      ],
      "op": "ADD",
      "path": "5"
    },
    "1969": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8153,
        8156
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1970": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8153,
        8156
      ],
      "op": "POP",
      "path": "5"
    },
    "1971": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7871,
        8164
      ],
      "op": "POP",
      "path": "5"
    },
    "1972": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7871,
        8164
      ],
      "op": "POP",
      "path": "5"
    },
    "1973": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7871,
        8164
      ],
      "op": "POP",
      "path": "5"
    },
    "1974": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7871,
        8164
      ],
      "op": "POP",
      "path": "5"
    },
    "1975": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x72E"
    },
    "1978": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1979": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7844,
        8164
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1980": {
      "op": "POP"
    },
    "1981": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8172,
        8177
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 14
    },
    "1982": {
      "fn": "Registry.calcDeposit",
      "offset": [
        8172,
        8177
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1983": {
      "fn": "Registry.calcDeposit",
      "offset": [
        7723,
        8179
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "fn": "Registry.calcDeposit",
      "jump": "o",
      "offset": [
        7723,
        8179
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1987": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1988": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4482,
        4498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1990": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4500,
        4516
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1991": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4527,
        4556
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1993": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4559,
        4582
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7D1"
    },
    "1996": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4574,
        4581
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1997": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4559,
        4573
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x380"
    },
    "2000": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4559,
        4582
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2001": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4559,
        4582
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2002": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4606,
        4621
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2003": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4606,
        4621
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2004": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4527,
        4582
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2005": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4527,
        4582
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4592,
        4603
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2009": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4606,
        4621
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2010": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2019": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2020": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "GT",
      "path": "5"
    },
    "2021": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2022": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "2025": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2026": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "2029": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB6"
    },
    "2032": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4655,
        4673
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2033": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2034": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2036": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2037": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2038": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2039": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2040": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2041": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2042": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2044": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "MUL",
      "path": "5"
    },
    "2045": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2047": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ADD",
      "path": "5"
    },
    "2048": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2049": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ADD",
      "path": "5"
    },
    "2050": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2052": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2053": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2054": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2055": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x81A"
    },
    "2058": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2059": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2060": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2062": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ADD",
      "path": "5"
    },
    "2063": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2065": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2066": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "MUL",
      "path": "5"
    },
    "2067": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2068": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2069": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2070": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2071": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "ADD",
      "path": "5"
    },
    "2072": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2073": {
      "op": "POP"
    },
    "2074": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2075": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4655,
        4673
      ],
      "op": "POP",
      "path": "5"
    },
    "2076": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4631,
        4673
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2077": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4631,
        4673
      ],
      "op": "POP",
      "path": "5"
    },
    "2078": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4683,
        4705
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2080": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4719,
        4722
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2081": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2090": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2091": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "GT",
      "path": "5"
    },
    "2092": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2093": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x838"
    },
    "2096": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2097": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x838"
    },
    "2100": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDB6"
    },
    "2103": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4708,
        4723
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2104": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2105": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2107": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2108": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2109": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2110": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2111": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2112": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2113": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2115": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "MUL",
      "path": "5"
    },
    "2116": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2118": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2119": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2120": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2121": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2123": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2124": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2125": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2126": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x861"
    },
    "2129": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2130": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2131": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2133": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2134": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2136": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2137": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "MUL",
      "path": "5"
    },
    "2138": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2139": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "2140": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2141": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "CALLDATACOPY",
      "path": "5"
    },
    "2142": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "ADD",
      "path": "5"
    },
    "2143": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2146": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4708,
        4723
      ],
      "op": "POP",
      "path": "5"
    },
    "2147": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4683,
        4723
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2148": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4683,
        4723
      ],
      "op": "POP",
      "path": "5"
    },
    "2149": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4733,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2151": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4762,
        4768
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2152": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2153": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4772,
        4775
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2154": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4770,
        4771
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2155": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4770,
        4775
      ],
      "op": "LT",
      "path": "5"
    },
    "2156": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2157": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9DF"
    },
    "2160": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2161": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4792,
        4814
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2163": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4816,
        4826
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2164": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4830,
        4847
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x87C"
    },
    "2167": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4838,
        4846
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2168": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4830,
        4837
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57D"
    },
    "2171": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4830,
        4847
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2172": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4830,
        4847
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2173": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4791,
        4847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2174": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4791,
        4847
      ],
      "op": "POP",
      "path": "5"
    },
    "2175": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4791,
        4847
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2176": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4791,
        4847
      ],
      "op": "POP",
      "path": "5"
    },
    "2177": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4872,
        4879
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2178": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4866,
        4871
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2179": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4866,
        4879
      ],
      "op": "LT",
      "path": "5"
    },
    "2180": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2181": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2182": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89D"
    },
    "2185": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2186": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "POP",
      "path": "5"
    },
    "2187": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4901,
        4908
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2188": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4891,
        4894
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2189": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4891,
        4898
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2191": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4891,
        4898
      ],
      "op": "ADD",
      "path": "5"
    },
    "2192": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4891,
        4898
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2193": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4888
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2194": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x89B"
    },
    "2197": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4898
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2198": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4898
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2199": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4898
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2202": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4883,
        4898
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2203": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4898
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2204": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4883,
        4908
      ],
      "op": "GT",
      "path": "5"
    },
    "2205": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4865,
        4909
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2206": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2207": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x92D"
    },
    "2210": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2211": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4942,
        4957
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x8AC"
    },
    "2214": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4952,
        4957
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2215": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4942,
        4949
      ],
      "op": "DUP13",
      "path": "5"
    },
    "2216": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4942,
        4957
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1072"
    },
    "2219": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4942,
        4957
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2220": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4942,
        4957
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2221": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4936
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2222": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4937,
        4938
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2223": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2224": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2225": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2226": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "LT",
      "path": "5"
    },
    "2227": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8BE"
    },
    "2230": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2231": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8BE"
    },
    "2234": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2237": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4928,
        4939
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2238": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2239": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2241": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "MUL",
      "path": "5"
    },
    "2242": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2244": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "ADD",
      "path": "5"
    },
    "2245": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4939
      ],
      "op": "ADD",
      "path": "5"
    },
    "2246": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2247": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4958
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2248": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4958
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2249": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4958
      ],
      "op": "POP",
      "path": "5"
    },
    "2250": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4928,
        4958
      ],
      "op": "POP",
      "path": "5"
    },
    "2251": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4987,
        4990
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 16
    },
    "2252": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4987,
        4995
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2254": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4987,
        4995
      ],
      "op": "ADD",
      "path": "5"
    },
    "2255": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4987,
        4995
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2256": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4980
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2257": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4981,
        4982
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2258": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2259": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2260": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2261": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "LT",
      "path": "5"
    },
    "2262": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E1"
    },
    "2265": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2266": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E1"
    },
    "2269": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2272": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        4976,
        4983
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2273": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2274": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2276": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "MUL",
      "path": "5"
    },
    "2277": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2279": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "ADD",
      "path": "5"
    },
    "2280": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4983
      ],
      "op": "ADD",
      "path": "5"
    },
    "2281": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2288": {
      "op": "SHL"
    },
    "2289": {
      "op": "SUB"
    },
    "2290": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "AND",
      "path": "5"
    },
    "2291": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2292": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2299": {
      "op": "SHL"
    },
    "2300": {
      "op": "SUB"
    },
    "2301": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "AND",
      "path": "5"
    },
    "2302": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2303": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2304": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "2305": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4976,
        4996
      ],
      "op": "POP",
      "path": "5"
    },
    "2306": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5031
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 17
    },
    "2307": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5032,
        5033
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2308": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2309": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2310": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2311": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "LT",
      "path": "5"
    },
    "2312": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x913"
    },
    "2315": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2316": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x913"
    },
    "2319": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2322": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5023,
        5034
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2323": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2324": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2326": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "MUL",
      "path": "5"
    },
    "2327": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2329": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "ADD",
      "path": "5"
    },
    "2330": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "ADD",
      "path": "5"
    },
    "2331": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5023,
        5034
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2332": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2333": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x926"
    },
    "2336": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2337": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2338": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2341": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5014,
        5034
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2342": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2343": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2344": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5014,
        5034
      ],
      "op": "POP",
      "path": "5"
    },
    "2345": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D5"
    },
    "2348": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2349": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4861,
        5287
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2350": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5078,
        5085
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2351": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5072,
        5077
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2352": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5072,
        5085
      ],
      "op": "LT",
      "path": "5"
    },
    "2353": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2354": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2355": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x94B"
    },
    "2358": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2359": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "POP",
      "path": "5"
    },
    "2360": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5108,
        5115
      ],
      "op": "DUP11",
      "path": "5"
    },
    "2361": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5097,
        5100
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2362": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5097,
        5104
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2364": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5097,
        5104
      ],
      "op": "ADD",
      "path": "5"
    },
    "2365": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5097,
        5104
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2366": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5094
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2367": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5104
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x948"
    },
    "2370": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5104
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2371": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5104
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2372": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5104
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2375": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5089,
        5104
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2376": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5104
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2377": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5115
      ],
      "op": "GT",
      "path": "5"
    },
    "2378": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5089,
        5115
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2379": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5071,
        5116
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2380": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5067,
        5287
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2381": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5067,
        5287
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9D5"
    },
    "2384": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5067,
        5287
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2385": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5150,
        5153
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 18
    },
    "2386": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5150,
        5157
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2388": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5150,
        5157
      ],
      "op": "ADD",
      "path": "5"
    },
    "2389": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5150,
        5157
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2390": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5143
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2391": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5144,
        5145
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2392": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2393": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2394": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2395": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "LT",
      "path": "5"
    },
    "2396": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "2399": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2400": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x967"
    },
    "2403": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2406": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5135,
        5146
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2407": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2408": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2410": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "MUL",
      "path": "5"
    },
    "2411": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2413": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "ADD",
      "path": "5"
    },
    "2414": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5146
      ],
      "op": "ADD",
      "path": "5"
    },
    "2415": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2416": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5158
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2417": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5158
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2418": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5158
      ],
      "op": "POP",
      "path": "5"
    },
    "2419": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5135,
        5158
      ],
      "op": "POP",
      "path": "5"
    },
    "2420": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5187,
        5190
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 19
    },
    "2421": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5187,
        5195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2423": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5187,
        5195
      ],
      "op": "ADD",
      "path": "5"
    },
    "2424": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5187,
        5195
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2425": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5180
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2426": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5181,
        5182
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2427": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2428": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2429": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2430": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "LT",
      "path": "5"
    },
    "2431": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98A"
    },
    "2434": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2435": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x98A"
    },
    "2438": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2441": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5176,
        5183
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2442": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2449": {
      "op": "SHL"
    },
    "2450": {
      "op": "SUB"
    },
    "2451": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5196
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2452": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5196
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2453": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5196
      ],
      "op": "AND",
      "path": "5"
    },
    "2454": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2456": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2457": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2458": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "MUL",
      "path": "5"
    },
    "2459": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2460": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2461": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2462": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "ADD",
      "path": "5"
    },
    "2463": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2464": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5183
      ],
      "op": "ADD",
      "path": "5"
    },
    "2465": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5176,
        5196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2466": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5223,
        5230
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 20
    },
    "2467": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5223,
        5230
      ],
      "op": "ADD",
      "path": "5"
    },
    "2468": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5223,
        5230
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2469": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9AE"
    },
    "2472": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2473": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2474": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2477": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5214,
        5230
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2478": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2479": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2480": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5214,
        5230
      ],
      "op": "POP",
      "path": "5"
    },
    "2481": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5271,
        5272
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x0"
    },
    "2483": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5257
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2484": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5258,
        5263
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2485": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2486": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2487": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2488": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "LT",
      "path": "5"
    },
    "2489": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C4"
    },
    "2492": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2493": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9C4"
    },
    "2496": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2499": {
      "fn": "Registry.checkWithdraw",
      "jump": "i",
      "offset": [
        5249,
        5264
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2500": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2501": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2503": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "MUL",
      "path": "5"
    },
    "2504": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2506": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "ADD",
      "path": "5"
    },
    "2507": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "ADD",
      "path": "5"
    },
    "2508": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5264
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2509": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5268
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2511": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5268
      ],
      "op": "ADD",
      "path": "5"
    },
    "2512": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5272
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2513": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5272
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2514": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5272
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2515": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5272
      ],
      "op": "POP",
      "path": "5"
    },
    "2516": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5249,
        5272
      ],
      "op": "POP",
      "path": "5"
    },
    "2517": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5067,
        5287
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2518": {
      "op": "POP"
    },
    "2519": {
      "op": "POP"
    },
    "2520": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5310,
        5313
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 22,
      "value": "0x1"
    },
    "2522": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5310,
        5313
      ],
      "op": "ADD",
      "path": "5"
    },
    "2523": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x868"
    },
    "2526": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2527": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4757,
        5328
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2528": {
      "op": "POP"
    },
    "2529": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5345,
        5349
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 23
    },
    "2530": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5345,
        5349
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "2531": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5351,
        5359
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2532": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        5351,
        5359
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "2533": {
      "op": "POP"
    },
    "2534": {
      "fn": "Registry.checkWithdraw",
      "offset": [
        4425,
        5367
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2535": {
      "op": "POP"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "op": "POP"
    },
    "2538": {
      "op": "POP"
    },
    "2539": {
      "op": "POP"
    },
    "2540": {
      "fn": "Registry.checkWithdraw",
      "jump": "o",
      "offset": [
        4425,
        5367
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2541": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2542": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1418,
        1425
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x2"
    },
    "2544": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1418,
        1425
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2551": {
      "op": "SHL"
    },
    "2552": {
      "op": "SUB"
    },
    "2553": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1418,
        1425
      ],
      "op": "AND",
      "path": "5"
    },
    "2554": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1404,
        1414
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2555": {
      "branch": 40,
      "fn": "Registry.addTokenPool",
      "offset": [
        1404,
        1425
      ],
      "op": "EQ",
      "path": "5"
    },
    "2556": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA57"
    },
    "2559": {
      "branch": 40,
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2560": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2562": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2571": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2574": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2576": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2577": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "ADD",
      "path": "5"
    },
    "2578": {
      "op": "MSTORE"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2581": {
      "op": "DUP1"
    },
    "2582": {
      "op": "DUP3"
    },
    "2583": {
      "op": "ADD"
    },
    "2584": {
      "op": "MSTORE"
    },
    "2585": {
      "op": "PUSH32",
      "value": "0x4F6E6C792074686520666163746F72792063616E2061646420746F6B656E2070"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2620": {
      "op": "DUP3"
    },
    "2621": {
      "op": "ADD"
    },
    "2622": {
      "op": "MSTORE"
    },
    "2623": {
      "op": "PUSH4",
      "value": "0x6F6F6C73"
    },
    "2628": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2630": {
      "op": "SHL"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2633": {
      "op": "DUP3"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "op": "MSTORE"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2638": {
      "op": "ADD"
    },
    "2639": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2641": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2642": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2643": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2644": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "SUB",
      "path": "5"
    },
    "2645": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2646": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "2647": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1396,
        1466
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2648": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1486
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x1"
    },
    "2650": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2651": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2652": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2653": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2654": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "ADD",
      "path": "5"
    },
    "2655": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2656": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2657": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2658": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "2691": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "ADD",
      "path": "5"
    },
    "2692": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2693": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2700": {
      "op": "SHL"
    },
    "2701": {
      "op": "SUB"
    },
    "2702": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2703": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2704": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "AND",
      "path": "5"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2711": {
      "op": "SHL"
    },
    "2712": {
      "op": "SUB"
    },
    "2713": {
      "op": "NOT"
    },
    "2714": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2715": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2716": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "AND",
      "path": "5"
    },
    "2717": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2718": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "OR",
      "path": "5"
    },
    "2719": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2720": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2721": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2722": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "SWAP3",
      "path": "5",
      "statement": 26
    },
    "2723": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2724": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2725": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "AND",
      "path": "5"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2728": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2729": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2730": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2731": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1524
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "2733": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1476,
        1503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2735": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2736": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2737": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2738": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2740": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2741": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2742": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1532
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2743": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2744": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2745": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2746": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "AND",
      "path": "5"
    },
    "2747": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2748": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "OR",
      "path": "5"
    },
    "2749": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2750": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1513,
        1545
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2751": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "SWAP6",
      "path": "5",
      "statement": 27
    },
    "2752": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2753": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2754": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2756": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2757": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2758": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2759": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2760": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1578
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2761": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2762": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2763": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2764": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "2765": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "AND",
      "path": "5"
    },
    "2766": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2767": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2768": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "OR",
      "path": "5"
    },
    "2769": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2770": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2771": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1555,
        1587
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2772": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1616
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0x5"
    },
    "2774": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2775": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1628
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2776": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1628
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2777": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1628
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2778": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1628
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2779": {
      "fn": "Registry.addTokenPool",
      "offset": [
        1597,
        1644
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2780": {
      "fn": "Registry.addTokenPool",
      "jump": "o",
      "offset": [
        1298,
        1651
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2781": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2147,
        2522
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2782": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2256,
        2266
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2784": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2256,
        2273
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2785": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2196,
        2203
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2787": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2196,
        2203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2788": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2196,
        2203
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2789": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2196,
        2203
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2790": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2196,
        2203
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2791": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2792": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2304,
        2307
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2793": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2300,
        2301
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2794": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2300,
        2307
      ],
      "op": "LT",
      "path": "5"
    },
    "2795": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2796": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7BB"
    },
    "2799": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2800": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2324,
        2336
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2802": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2349
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2804": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2350,
        2351
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2805": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2806": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2807": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2808": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "LT",
      "path": "5"
    },
    "2809": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB04"
    },
    "2812": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2813": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB04"
    },
    "2816": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "2819": {
      "fn": "Registry.getTotalAUMinUSD",
      "jump": "i",
      "offset": [
        2339,
        2352
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2820": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2821": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2823": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2824": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2825": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2826": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2828": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2829": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2830": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2831": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2832": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2833": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "ADD",
      "path": "5"
    },
    "2834": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2835": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2837": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2838": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2839": {
      "op": "PUSH4",
      "value": "0x1BA2F531"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2848": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2849": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2850": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2860": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2861": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "AND",
      "path": "5"
    },
    "2862": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2863": {
      "op": "POP"
    },
    "2864": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2865": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2866": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2419
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1BA2F531"
    },
    "2871": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2419
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2872": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2874": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2875": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2876": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ADD",
      "path": "5"
    },
    "2877": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2878": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2879": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2880": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SUB",
      "path": "5"
    },
    "2881": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ADD",
      "path": "5"
    },
    "2882": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2883": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2339,
        2352
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2884": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "GAS",
      "path": "5"
    },
    "2885": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2886": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2887": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2888": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2889": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB56"
    },
    "2892": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2893": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2894": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2896": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2897": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2898": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2899": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2901": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2902": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2903": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "POP",
      "path": "5"
    },
    "2904": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "POP",
      "path": "5"
    },
    "2905": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "POP",
      "path": "5"
    },
    "2906": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "POP",
      "path": "5"
    },
    "2907": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2909": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2910": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2911": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2913": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "NOT",
      "path": "5"
    },
    "2914": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2916": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2917": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ADD",
      "path": "5"
    },
    "2918": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "AND",
      "path": "5"
    },
    "2919": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2920": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ADD",
      "path": "5"
    },
    "2921": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2922": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2924": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2925": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "POP",
      "path": "5"
    },
    "2926": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2927": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "ADD",
      "path": "5"
    },
    "2928": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2929": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB7A"
    },
    "2932": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2933": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2934": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109F"
    },
    "2937": {
      "fn": "Registry.getTotalAUMinUSD",
      "jump": "i",
      "offset": [
        2390,
        2421
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2938": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2390,
        2421
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2939": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2368,
        2421
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2940": {
      "op": "POP"
    },
    "2941": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 29,
      "value": "0xB86"
    },
    "2944": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2368,
        2421
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2945": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2946": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2949": {
      "fn": "Registry.getTotalAUMinUSD",
      "jump": "i",
      "offset": [
        2435,
        2455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2950": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2951": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2952": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2435,
        2455
      ],
      "op": "POP",
      "path": "5"
    },
    "2953": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2479,
        2482
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 30
    },
    "2954": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2479,
        2482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2956": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2479,
        2482
      ],
      "op": "ADD",
      "path": "5"
    },
    "2957": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2479,
        2482
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2958": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2479,
        2482
      ],
      "op": "POP",
      "path": "5"
    },
    "2959": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2310,
        2494
      ],
      "op": "POP",
      "path": "5"
    },
    "2960": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2310,
        2494
      ],
      "op": "POP",
      "path": "5"
    },
    "2961": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAE7"
    },
    "2964": {
      "fn": "Registry.getTotalAUMinUSD",
      "offset": [
        2283,
        2494
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2965": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2966": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6598,
        6602
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2968": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6621,
        6634
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2969": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6658,
        6664
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2970": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6655
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBA1"
    },
    "2973": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6653
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xADD"
    },
    "2976": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6637,
        6655
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2977": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6655
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2978": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBAB"
    },
    "2981": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6664
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2982": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2983": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6664
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "2986": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6637,
        6664
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2987": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6637,
        6664
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2988": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6621,
        6664
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2989": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6621,
        6664
      ],
      "op": "POP",
      "path": "5"
    },
    "2990": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6678,
        6697
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2992": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6734,
        6740
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2993": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6711,
        6715
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6729
      ],
      "op": "AND",
      "path": "5"
    },
    "3003": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6729
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1BA2F531"
    },
    "3008": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3010": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3011": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3012": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFFFFFFFF"
    },
    "3017": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "AND",
      "path": "5"
    },
    "3018": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "3020": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "SHL",
      "path": "5"
    },
    "3021": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3022": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3023": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3025": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ADD",
      "path": "5"
    },
    "3026": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3028": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3030": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3031": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3032": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3033": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "SUB",
      "path": "5"
    },
    "3034": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3035": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP7",
      "path": "5"
    },
    "3036": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "GAS",
      "path": "5"
    },
    "3037": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "3038": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3039": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3040": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3041": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBEE"
    },
    "3044": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3045": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3046": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3048": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3049": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3050": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3051": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3053": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3054": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3055": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "POP",
      "path": "5"
    },
    "3056": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "POP",
      "path": "5"
    },
    "3057": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "POP",
      "path": "5"
    },
    "3058": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "POP",
      "path": "5"
    },
    "3059": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3061": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3062": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3063": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3065": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "NOT",
      "path": "5"
    },
    "3066": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "3068": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3069": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ADD",
      "path": "5"
    },
    "3070": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "AND",
      "path": "5"
    },
    "3071": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3072": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ADD",
      "path": "5"
    },
    "3073": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3074": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3076": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3077": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "POP",
      "path": "5"
    },
    "3078": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3079": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "ADD",
      "path": "5"
    },
    "3080": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3081": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC12"
    },
    "3084": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3085": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3086": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x109F"
    },
    "3089": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6700,
        6731
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3090": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6731
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3091": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6740
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC1C"
    },
    "3094": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6740
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3095": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6740
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3096": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6740
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10F9"
    },
    "3099": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6700,
        6740
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3100": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6700,
        6740
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3101": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6678,
        6740
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3102": {
      "op": "POP"
    },
    "3103": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6778
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 31
    },
    "3104": {
      "branch": 41,
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6778
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3105": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC41"
    },
    "3108": {
      "branch": 41,
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3109": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6807,
        6812
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3110": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC32"
    },
    "3113": {
      "offset": [
        471,
        474
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xF4240"
    },
    "3117": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6796
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3118": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10B8"
    },
    "3121": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6785,
        6806
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3122": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3123": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC3C"
    },
    "3126": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6812
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3127": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3128": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10D7"
    },
    "3131": {
      "fn": "Registry.getNewConcentration",
      "jump": "i",
      "offset": [
        6785,
        6812
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3132": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6785,
        6812
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3133": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC44"
    },
    "3136": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3137": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3138": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6781,
        6782
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3140": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6768,
        6812
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3141": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6761,
        6812
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "3142": {
      "fn": "Registry.getNewConcentration",
      "offset": [
        6520,
        6836
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3143": {
      "op": "POP"
    },
    "3144": {
      "op": "POP"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "op": "POP"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "fn": "Registry.getNewConcentration",
      "jump": "o",
      "offset": [
        6520,
        6836
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3149": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3150": {
      "offset": [
        755,
        760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3152": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        755,
        760
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3159": {
      "op": "SHL"
    },
    "3160": {
      "op": "SUB"
    },
    "3161": {
      "offset": [
        755,
        760
      ],
      "op": "AND",
      "path": "5"
    },
    "3162": {
      "offset": [
        741,
        751
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3163": {
      "offset": [
        741,
        760
      ],
      "op": "EQ",
      "path": "5"
    },
    "3164": {
      "offset": [
        737,
        814
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC78"
    },
    "3167": {
      "offset": [
        737,
        814
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3168": {
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3170": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3171": {
      "op": "PUSH4",
      "value": "0xDA476DD7"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3178": {
      "op": "SHL"
    },
    "3179": {
      "offset": [
        783,
        803
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3180": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3181": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3183": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "ADD",
      "path": "5"
    },
    "3184": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3186": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3187": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3188": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3189": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "SUB",
      "path": "5"
    },
    "3190": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3191": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        783,
        803
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3192": {
      "offset": [
        737,
        814
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3199": {
      "op": "SHL"
    },
    "3200": {
      "op": "SUB"
    },
    "3201": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 32
    },
    "3202": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3203": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "AND",
      "path": "5"
    },
    "3204": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3206": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3207": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3208": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3209": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1950
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3211": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3213": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3214": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3216": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3217": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1957
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3218": {
      "fn": "Registry.setTargetConcentration",
      "offset": [
        1931,
        1967
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3219": {
      "fn": "Registry.setTargetConcentration",
      "jump": "o",
      "offset": [
        1818,
        1974
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3220": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3221": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7090,
        7100
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3223": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7090,
        7107
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3224": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7064,
        7068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3226": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7064,
        7068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3227": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7064,
        7068
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3228": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3229": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7138,
        7141
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3230": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7134,
        7135
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3231": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7134,
        7141
      ],
      "op": "LT",
      "path": "5"
    },
    "3232": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3233": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD33"
    },
    "3236": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3237": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7158,
        7170
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3239": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7183
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3241": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7184,
        7185
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3242": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3243": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3244": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3245": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "LT",
      "path": "5"
    },
    "3246": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB9"
    },
    "3249": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3250": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCB9"
    },
    "3253": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1089"
    },
    "3256": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7173,
        7186
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3257": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3258": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3260": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3261": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3262": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3263": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3265": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3266": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3267": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "ADD",
      "path": "5"
    },
    "3268": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "AND",
      "path": "5"
    },
    "3278": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7228,
        7250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD8"
    },
    "3283": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7173,
        7186
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3284": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7228,
        7244
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61B"
    },
    "3287": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7228,
        7250
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3288": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7228,
        7250
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3295": {
      "op": "SHL"
    },
    "3296": {
      "op": "SUB"
    },
    "3297": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3298": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "AND",
      "path": "5"
    },
    "3299": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7264,
        7272
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3301": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3302": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3303": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3304": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7326
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3306": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3308": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3309": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3311": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3312": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3313": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7307,
        7332
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3314": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7200,
        7250
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3315": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7200,
        7250
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3316": {
      "op": "POP"
    },
    "3317": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7264,
        7272
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3318": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7275,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFF"
    },
    "3321": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7275,
        7333
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3322": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7200,
        7250
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3323": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7275,
        7333
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1033"
    },
    "3326": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7275,
        7333
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3327": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7275,
        7333
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3328": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7264,
        7333
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3329": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7264,
        7333
      ],
      "op": "POP",
      "path": "5"
    },
    "3330": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7347,
        7359
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3332": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7362,
        7371
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0C"
    },
    "3335": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7366,
        7370
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3336": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7362,
        7365
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x35C"
    },
    "3339": {
      "fn": "Registry.checkDeposit",
      "jump": "i",
      "offset": [
        7362,
        7371
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3340": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7362,
        7371
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3341": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7347,
        7371
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3342": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7347,
        7371
      ],
      "op": "POP",
      "path": "5"
    },
    "3343": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7397,
        7404
      ],
      "op": "DUP8",
      "path": "5"
    },
    "3344": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7389,
        7396
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3345": {
      "branch": 42,
      "fn": "Registry.checkDeposit",
      "offset": [
        7389,
        7404
      ],
      "op": "GT",
      "path": "5"
    },
    "3346": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7385,
        7452
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3347": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7385,
        7452
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD24"
    },
    "3350": {
      "branch": 42,
      "fn": "Registry.checkDeposit",
      "offset": [
        7385,
        7452
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3351": {
      "op": "POP"
    },
    "3352": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7432,
        7436
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x1"
    },
    "3354": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7432,
        7436
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "3355": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "3356": {
      "op": "POP"
    },
    "3357": {
      "op": "POP"
    },
    "3358": {
      "op": "POP"
    },
    "3359": {
      "op": "POP"
    },
    "3360": {
      "op": "POP"
    },
    "3361": {
      "op": "POP"
    },
    "3362": {
      "op": "POP"
    },
    "3363": {
      "fn": "Registry.checkDeposit",
      "jump": "o",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3364": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7385,
        7452
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3365": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7475,
        7478
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 34
    },
    "3366": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7475,
        7478
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3368": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7475,
        7478
      ],
      "op": "ADD",
      "path": "5"
    },
    "3369": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7475,
        7478
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "3370": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7475,
        7478
      ],
      "op": "POP",
      "path": "5"
    },
    "3371": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7144,
        7490
      ],
      "op": "POP",
      "path": "5"
    },
    "3372": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7144,
        7490
      ],
      "op": "POP",
      "path": "5"
    },
    "3373": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7144,
        7490
      ],
      "op": "POP",
      "path": "5"
    },
    "3374": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7144,
        7490
      ],
      "op": "POP",
      "path": "5"
    },
    "3375": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC9C"
    },
    "3378": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3379": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7117,
        7490
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3380": {
      "op": "POP"
    },
    "3381": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7507,
        7512
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 35,
      "value": "0x0"
    },
    "3383": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7507,
        7512
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3384": {
      "fn": "Registry.checkDeposit",
      "offset": [
        7007,
        7520
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "Registry.checkDeposit",
      "jump": "o",
      "offset": [
        7007,
        7520
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3389": {
      "op": "JUMPDEST"
    },
    "3390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3392": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3394": {
      "op": "DUP3"
    },
    "3395": {
      "op": "DUP5"
    },
    "3396": {
      "op": "SUB"
    },
    "3397": {
      "op": "SLT"
    },
    "3398": {
      "op": "ISZERO"
    },
    "3399": {
      "op": "PUSH2",
      "value": "0xD4F"
    },
    "3402": {
      "op": "JUMPI"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3405": {
      "op": "DUP1"
    },
    "3406": {
      "op": "REVERT"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "op": "CALLDATALOAD"
    },
    "3410": {
      "op": "SWAP2"
    },
    "3411": {
      "op": "SWAP1"
    },
    "3412": {
      "op": "POP"
    },
    "3413": {
      "jump": "o",
      "op": "JUMP"
    },
    "3414": {
      "op": "JUMPDEST"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3417": {
      "op": "DUP1"
    },
    "3418": {
      "op": "DUP3"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "op": "DUP3"
    },
    "3421": {
      "op": "MLOAD"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "DUP3"
    },
    "3424": {
      "op": "ADD"
    },
    "3425": {
      "op": "DUP2"
    },
    "3426": {
      "op": "SWAP1"
    },
    "3427": {
      "op": "MSTORE"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3430": {
      "op": "SWAP2"
    },
    "3431": {
      "op": "SWAP1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3434": {
      "op": "SWAP1"
    },
    "3435": {
      "op": "DUP2"
    },
    "3436": {
      "op": "DUP6"
    },
    "3437": {
      "op": "ADD"
    },
    "3438": {
      "op": "SWAP1"
    },
    "3439": {
      "op": "DUP7"
    },
    "3440": {
      "op": "DUP5"
    },
    "3441": {
      "op": "ADD"
    },
    "3442": {
      "op": "DUP6"
    },
    "3443": {
      "op": "JUMPDEST"
    },
    "3444": {
      "op": "DUP3"
    },
    "3445": {
      "op": "DUP2"
    },
    "3446": {
      "op": "LT"
    },
    "3447": {
      "op": "ISZERO"
    },
    "3448": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3451": {
      "op": "JUMPI"
    },
    "3452": {
      "op": "PUSH2",
      "value": "0xD99"
    },
    "3455": {
      "op": "DUP5"
    },
    "3456": {
      "op": "DUP4"
    },
    "3457": {
      "op": "MLOAD"
    },
    "3458": {
      "op": "DUP1"
    },
    "3459": {
      "op": "MLOAD"
    },
    "3460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "SUB"
    },
    "3468": {
      "op": "AND"
    },
    "3469": {
      "op": "DUP3"
    },
    "3470": {
      "op": "MSTORE"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3473": {
      "op": "SWAP1"
    },
    "3474": {
      "op": "DUP2"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "MLOAD"
    },
    "3477": {
      "op": "SWAP2"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "MSTORE"
    },
    "3480": {
      "op": "JUMP"
    },
    "3481": {
      "op": "JUMPDEST"
    },
    "3482": {
      "op": "SWAP3"
    },
    "3483": {
      "op": "DUP5"
    },
    "3484": {
      "op": "ADD"
    },
    "3485": {
      "op": "SWAP3"
    },
    "3486": {
      "op": "SWAP1"
    },
    "3487": {
      "op": "DUP6"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "SWAP1"
    },
    "3490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "PUSH2",
      "value": "0xD73"
    },
    "3496": {
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "POP"
    },
    "3499": {
      "op": "SWAP2"
    },
    "3500": {
      "op": "SWAP8"
    },
    "3501": {
      "op": "SWAP7"
    },
    "3502": {
      "op": "POP"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "POP"
    },
    "3505": {
      "op": "POP"
    },
    "3506": {
      "op": "POP"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "op": "POP"
    },
    "3509": {
      "jump": "o",
      "op": "JUMP"
    },
    "3510": {
      "op": "JUMPDEST"
    },
    "3511": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3518": {
      "op": "SHL"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3521": {
      "op": "MSTORE"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3531": {
      "op": "REVERT"
    },
    "3532": {
      "op": "JUMPDEST"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3535": {
      "op": "DUP1"
    },
    "3536": {
      "op": "MLOAD"
    },
    "3537": {
      "op": "SWAP1"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "ADD"
    },
    "3540": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3549": {
      "op": "DUP2"
    },
    "3550": {
      "op": "GT"
    },
    "3551": {
      "op": "DUP3"
    },
    "3552": {
      "op": "DUP3"
    },
    "3553": {
      "op": "LT"
    },
    "3554": {
      "op": "OR"
    },
    "3555": {
      "op": "ISZERO"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3559": {
      "op": "JUMPI"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3563": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3566": {
      "jump": "i",
      "op": "JUMP"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3570": {
      "op": "MSTORE"
    },
    "3571": {
      "op": "SWAP1"
    },
    "3572": {
      "jump": "o",
      "op": "JUMP"
    },
    "3573": {
      "op": "JUMPDEST"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3576": {
      "op": "MLOAD"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3579": {
      "op": "DUP3"
    },
    "3580": {
      "op": "ADD"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3583": {
      "op": "NOT"
    },
    "3584": {
      "op": "AND"
    },
    "3585": {
      "op": "DUP2"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3596": {
      "op": "DUP2"
    },
    "3597": {
      "op": "GT"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "DUP3"
    },
    "3600": {
      "op": "LT"
    },
    "3601": {
      "op": "OR"
    },
    "3602": {
      "op": "ISZERO"
    },
    "3603": {
      "op": "PUSH2",
      "value": "0xE1E"
    },
    "3606": {
      "op": "JUMPI"
    },
    "3607": {
      "op": "PUSH2",
      "value": "0xE1E"
    },
    "3610": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3613": {
      "jump": "i",
      "op": "JUMP"
    },
    "3614": {
      "op": "JUMPDEST"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3617": {
      "op": "MSTORE"
    },
    "3618": {
      "op": "SWAP2"
    },
    "3619": {
      "op": "SWAP1"
    },
    "3620": {
      "op": "POP"
    },
    "3621": {
      "jump": "o",
      "op": "JUMP"
    },
    "3622": {
      "op": "JUMPDEST"
    },
    "3623": {
      "op": "DUP1"
    },
    "3624": {
      "op": "CALLDATALOAD"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3631": {
      "op": "SHL"
    },
    "3632": {
      "op": "SUB"
    },
    "3633": {
      "op": "DUP2"
    },
    "3634": {
      "op": "AND"
    },
    "3635": {
      "op": "DUP2"
    },
    "3636": {
      "op": "EQ"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0x37B"
    },
    "3640": {
      "op": "JUMPI"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3643": {
      "op": "DUP1"
    },
    "3644": {
      "op": "REVERT"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3650": {
      "op": "DUP1"
    },
    "3651": {
      "op": "DUP4"
    },
    "3652": {
      "op": "DUP6"
    },
    "3653": {
      "op": "SUB"
    },
    "3654": {
      "op": "SLT"
    },
    "3655": {
      "op": "ISZERO"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xE50"
    },
    "3659": {
      "op": "JUMPI"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "REVERT"
    },
    "3664": {
      "op": "JUMPDEST"
    },
    "3665": {
      "op": "DUP3"
    },
    "3666": {
      "op": "CALLDATALOAD"
    },
    "3667": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3676": {
      "op": "DUP1"
    },
    "3677": {
      "op": "DUP3"
    },
    "3678": {
      "op": "GT"
    },
    "3679": {
      "op": "ISZERO"
    },
    "3680": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3683": {
      "op": "JUMPI"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3686": {
      "op": "DUP1"
    },
    "3687": {
      "op": "REVERT"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "DUP2"
    },
    "3690": {
      "op": "DUP6"
    },
    "3691": {
      "op": "ADD"
    },
    "3692": {
      "op": "SWAP2"
    },
    "3693": {
      "op": "POP"
    },
    "3694": {
      "op": "DUP6"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3697": {
      "op": "DUP4"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "SLT"
    },
    "3700": {
      "op": "PUSH2",
      "value": "0xE7C"
    },
    "3703": {
      "op": "JUMPI"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3706": {
      "op": "DUP1"
    },
    "3707": {
      "op": "REVERT"
    },
    "3708": {
      "op": "JUMPDEST"
    },
    "3709": {
      "op": "DUP2"
    },
    "3710": {
      "op": "CALLDATALOAD"
    },
    "3711": {
      "op": "DUP2"
    },
    "3712": {
      "op": "DUP2"
    },
    "3713": {
      "op": "GT"
    },
    "3714": {
      "op": "ISZERO"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3718": {
      "op": "JUMPI"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3722": {
      "op": "PUSH2",
      "value": "0xDB6"
    },
    "3725": {
      "jump": "i",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH2",
      "value": "0xE9C"
    },
    "3730": {
      "op": "DUP5"
    },
    "3731": {
      "op": "DUP3"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "ADD"
    },
    "3736": {
      "op": "PUSH2",
      "value": "0xDF5"
    },
    "3739": {
      "jump": "i",
      "op": "JUMP"
    },
    "3740": {
      "op": "JUMPDEST"
    },
    "3741": {
      "op": "DUP2"
    },
    "3742": {
      "op": "DUP2"
    },
    "3743": {
      "op": "MSTORE"
    },
    "3744": {
      "op": "DUP5"
    },
    "3745": {
      "op": "DUP2"
    },
    "3746": {
      "op": "ADD"
    },
    "3747": {
      "op": "SWAP3"
    },
    "3748": {
      "op": "POP"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "3751": {
      "op": "SWAP2"
    },
    "3752": {
      "op": "SWAP1"
    },
    "3753": {
      "op": "SWAP2"
    },
    "3754": {
      "op": "SHL"
    },
    "3755": {
      "op": "DUP4"
    },
    "3756": {
      "op": "ADD"
    },
    "3757": {
      "op": "DUP5"
    },
    "3758": {
      "op": "ADD"
    },
    "3759": {
      "op": "SWAP1"
    },
    "3760": {
      "op": "DUP8"
    },
    "3761": {
      "op": "DUP3"
    },
    "3762": {
      "op": "GT"
    },
    "3763": {
      "op": "ISZERO"
    },
    "3764": {
      "op": "PUSH2",
      "value": "0xEBC"
    },
    "3767": {
      "op": "JUMPI"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3770": {
      "op": "DUP1"
    },
    "3771": {
      "op": "REVERT"
    },
    "3772": {
      "op": "JUMPDEST"
    },
    "3773": {
      "op": "SWAP3"
    },
    "3774": {
      "op": "DUP5"
    },
    "3775": {
      "op": "ADD"
    },
    "3776": {
      "op": "SWAP3"
    },
    "3777": {
      "op": "JUMPDEST"
    },
    "3778": {
      "op": "DUP2"
    },
    "3779": {
      "op": "DUP5"
    },
    "3780": {
      "op": "LT"
    },
    "3781": {
      "op": "ISZERO"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3785": {
      "op": "JUMPI"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3788": {
      "op": "DUP5"
    },
    "3789": {
      "op": "DUP10"
    },
    "3790": {
      "op": "SUB"
    },
    "3791": {
      "op": "SLT"
    },
    "3792": {
      "op": "ISZERO"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3796": {
      "op": "JUMPI"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3799": {
      "op": "DUP1"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "REVERT"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "PUSH2",
      "value": "0xEE2"
    },
    "3806": {
      "op": "PUSH2",
      "value": "0xDCC"
    },
    "3809": {
      "jump": "i",
      "op": "JUMP"
    },
    "3810": {
      "op": "JUMPDEST"
    },
    "3811": {
      "op": "PUSH2",
      "value": "0xEEB"
    },
    "3814": {
      "op": "DUP6"
    },
    "3815": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "3818": {
      "jump": "i",
      "op": "JUMP"
    },
    "3819": {
      "op": "JUMPDEST"
    },
    "3820": {
      "op": "DUP2"
    },
    "3821": {
      "op": "MSTORE"
    },
    "3822": {
      "op": "DUP5"
    },
    "3823": {
      "op": "DUP7"
    },
    "3824": {
      "op": "ADD"
    },
    "3825": {
      "op": "CALLDATALOAD"
    },
    "3826": {
      "op": "DUP7"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "ADD"
    },
    "3829": {
      "op": "MSTORE"
    },
    "3830": {
      "op": "DUP4"
    },
    "3831": {
      "op": "MSTORE"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3834": {
      "op": "SWAP1"
    },
    "3835": {
      "op": "SWAP4"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "SWAP3"
    },
    "3838": {
      "op": "SWAP2"
    },
    "3839": {
      "op": "DUP5"
    },
    "3840": {
      "op": "ADD"
    },
    "3841": {
      "op": "SWAP2"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xEC1"
    },
    "3845": {
      "op": "JUMP"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "SWAP8"
    },
    "3848": {
      "op": "SWAP7"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "op": "POP"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "POP"
    },
    "3855": {
      "op": "POP"
    },
    "3856": {
      "jump": "o",
      "op": "JUMP"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3860": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3862": {
      "op": "DUP3"
    },
    "3863": {
      "op": "DUP5"
    },
    "3864": {
      "op": "SUB"
    },
    "3865": {
      "op": "SLT"
    },
    "3866": {
      "op": "ISZERO"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xF23"
    },
    "3870": {
      "op": "JUMPI"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3873": {
      "op": "DUP1"
    },
    "3874": {
      "op": "REVERT"
    },
    "3875": {
      "op": "JUMPDEST"
    },
    "3876": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3879": {
      "op": "DUP3"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "3883": {
      "jump": "i",
      "op": "JUMP"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "SWAP4"
    },
    "3886": {
      "op": "SWAP3"
    },
    "3887": {
      "op": "POP"
    },
    "3888": {
      "op": "POP"
    },
    "3889": {
      "op": "POP"
    },
    "3890": {
      "jump": "o",
      "op": "JUMP"
    },
    "3891": {
      "op": "JUMPDEST"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3894": {
      "op": "DUP1"
    },
    "3895": {
      "op": "DUP3"
    },
    "3896": {
      "op": "MSTORE"
    },
    "3897": {
      "op": "DUP4"
    },
    "3898": {
      "op": "MLOAD"
    },
    "3899": {
      "op": "SWAP1"
    },
    "3900": {
      "op": "DUP3"
    },
    "3901": {
      "op": "ADD"
    },
    "3902": {
      "op": "DUP2"
    },
    "3903": {
      "op": "SWAP1"
    },
    "3904": {
      "op": "MSTORE"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "SWAP1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3910": {
      "op": "SWAP1"
    },
    "3911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3913": {
      "op": "DUP5"
    },
    "3914": {
      "op": "ADD"
    },
    "3915": {
      "op": "SWAP1"
    },
    "3916": {
      "op": "DUP3"
    },
    "3917": {
      "op": "DUP8"
    },
    "3918": {
      "op": "ADD"
    },
    "3919": {
      "op": "DUP5"
    },
    "3920": {
      "op": "JUMPDEST"
    },
    "3921": {
      "op": "DUP3"
    },
    "3922": {
      "op": "DUP2"
    },
    "3923": {
      "op": "LT"
    },
    "3924": {
      "op": "ISZERO"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xF75"
    },
    "3928": {
      "op": "JUMPI"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "MLOAD"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3937": {
      "op": "SHL"
    },
    "3938": {
      "op": "SUB"
    },
    "3939": {
      "op": "AND"
    },
    "3940": {
      "op": "DUP5"
    },
    "3941": {
      "op": "MSTORE"
    },
    "3942": {
      "op": "SWAP3"
    },
    "3943": {
      "op": "DUP5"
    },
    "3944": {
      "op": "ADD"
    },
    "3945": {
      "op": "SWAP3"
    },
    "3946": {
      "op": "SWAP1"
    },
    "3947": {
      "op": "DUP5"
    },
    "3948": {
      "op": "ADD"
    },
    "3949": {
      "op": "SWAP1"
    },
    "3950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3952": {
      "op": "ADD"
    },
    "3953": {
      "op": "PUSH2",
      "value": "0xF50"
    },
    "3956": {
      "op": "JUMP"
    },
    "3957": {
      "op": "JUMPDEST"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "POP"
    },
    "3961": {
      "op": "DUP4"
    },
    "3962": {
      "op": "DUP2"
    },
    "3963": {
      "op": "SUB"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "DUP6"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "MSTORE"
    },
    "3968": {
      "op": "DUP5"
    },
    "3969": {
      "op": "MLOAD"
    },
    "3970": {
      "op": "DUP1"
    },
    "3971": {
      "op": "DUP3"
    },
    "3972": {
      "op": "MSTORE"
    },
    "3973": {
      "op": "DUP6"
    },
    "3974": {
      "op": "DUP4"
    },
    "3975": {
      "op": "ADD"
    },
    "3976": {
      "op": "SWAP2"
    },
    "3977": {
      "op": "DUP4"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "SWAP1"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3982": {
      "op": "JUMPDEST"
    },
    "3983": {
      "op": "DUP2"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "LT"
    },
    "3986": {
      "op": "ISZERO"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0xFAA"
    },
    "3990": {
      "op": "JUMPI"
    },
    "3991": {
      "op": "DUP4"
    },
    "3992": {
      "op": "MLOAD"
    },
    "3993": {
      "op": "DUP4"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "SWAP3"
    },
    "3996": {
      "op": "DUP5"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "SWAP3"
    },
    "3999": {
      "op": "SWAP2"
    },
    "4000": {
      "op": "DUP5"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "SWAP2"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "PUSH2",
      "value": "0xF8E"
    },
    "4009": {
      "op": "JUMP"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "op": "SWAP1"
    },
    "4013": {
      "op": "SWAP8"
    },
    "4014": {
      "op": "SWAP7"
    },
    "4015": {
      "op": "POP"
    },
    "4016": {
      "op": "POP"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "op": "POP"
    },
    "4019": {
      "op": "POP"
    },
    "4020": {
      "op": "POP"
    },
    "4021": {
      "op": "POP"
    },
    "4022": {
      "jump": "o",
      "op": "JUMP"
    },
    "4023": {
      "op": "JUMPDEST"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4026": {
      "op": "DUP1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4031": {
      "op": "DUP5"
    },
    "4032": {
      "op": "DUP7"
    },
    "4033": {
      "op": "SUB"
    },
    "4034": {
      "op": "SLT"
    },
    "4035": {
      "op": "ISZERO"
    },
    "4036": {
      "op": "PUSH2",
      "value": "0xFCC"
    },
    "4039": {
      "op": "JUMPI"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4042": {
      "op": "DUP1"
    },
    "4043": {
      "op": "REVERT"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "PUSH2",
      "value": "0xFD5"
    },
    "4048": {
      "op": "DUP5"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "4052": {
      "jump": "i",
      "op": "JUMP"
    },
    "4053": {
      "op": "JUMPDEST"
    },
    "4054": {
      "op": "SWAP3"
    },
    "4055": {
      "op": "POP"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4061": {
      "op": "DUP6"
    },
    "4062": {
      "op": "ADD"
    },
    "4063": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "4066": {
      "jump": "i",
      "op": "JUMP"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "SWAP2"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4072": {
      "op": "DUP5"
    },
    "4073": {
      "op": "ADD"
    },
    "4074": {
      "op": "CALLDATALOAD"
    },
    "4075": {
      "op": "SWAP1"
    },
    "4076": {
      "op": "POP"
    },
    "4077": {
      "op": "SWAP3"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "SWAP3"
    },
    "4080": {
      "op": "POP"
    },
    "4081": {
      "op": "SWAP3"
    },
    "4082": {
      "jump": "o",
      "op": "JUMP"
    },
    "4083": {
      "op": "JUMPDEST"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "DUP1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4089": {
      "op": "DUP4"
    },
    "4090": {
      "op": "DUP6"
    },
    "4091": {
      "op": "SUB"
    },
    "4092": {
      "op": "SLT"
    },
    "4093": {
      "op": "ISZERO"
    },
    "4094": {
      "op": "PUSH2",
      "value": "0x1006"
    },
    "4097": {
      "op": "JUMPI"
    },
    "4098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4100": {
      "op": "DUP1"
    },
    "4101": {
      "op": "REVERT"
    },
    "4102": {
      "op": "JUMPDEST"
    },
    "4103": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4106": {
      "op": "DUP4"
    },
    "4107": {
      "op": "PUSH2",
      "value": "0xE26"
    },
    "4110": {
      "jump": "i",
      "op": "JUMP"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "SWAP5"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4115": {
      "op": "SWAP4"
    },
    "4116": {
      "op": "SWAP1"
    },
    "4117": {
      "op": "SWAP4"
    },
    "4118": {
      "op": "ADD"
    },
    "4119": {
      "op": "CALLDATALOAD"
    },
    "4120": {
      "op": "SWAP4"
    },
    "4121": {
      "op": "POP"
    },
    "4122": {
      "op": "POP"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "jump": "o",
      "op": "JUMP"
    },
    "4125": {
      "op": "JUMPDEST"
    },
    "4126": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4133": {
      "op": "SHL"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4136": {
      "op": "MSTORE"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4141": {
      "op": "MSTORE"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4146": {
      "op": "REVERT"
    },
    "4147": {
      "op": "JUMPDEST"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "DUP1"
    },
    "4151": {
      "op": "DUP4"
    },
    "4152": {
      "op": "SLT"
    },
    "4153": {
      "op": "DUP1"
    },
    "4154": {
      "op": "ISZERO"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4157": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4159": {
      "op": "SHL"
    },
    "4160": {
      "op": "DUP6"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "DUP5"
    },
    "4163": {
      "op": "SLT"
    },
    "4164": {
      "op": "AND"
    },
    "4165": {
      "op": "ISZERO"
    },
    "4166": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4169": {
      "op": "JUMPI"
    },
    "4170": {
      "op": "PUSH2",
      "value": "0x1051"
    },
    "4173": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4176": {
      "jump": "i",
      "op": "JUMP"
    },
    "4177": {
      "op": "JUMPDEST"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4184": {
      "op": "SHL"
    },
    "4185": {
      "op": "SUB"
    },
    "4186": {
      "op": "DUP5"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "DUP4"
    },
    "4189": {
      "op": "SGT"
    },
    "4190": {
      "op": "DUP2"
    },
    "4191": {
      "op": "AND"
    },
    "4192": {
      "op": "ISZERO"
    },
    "4193": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4196": {
      "op": "JUMPI"
    },
    "4197": {
      "op": "PUSH2",
      "value": "0x106C"
    },
    "4200": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4203": {
      "jump": "i",
      "op": "JUMP"
    },
    "4204": {
      "op": "JUMPDEST"
    },
    "4205": {
      "op": "POP"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "op": "SUB"
    },
    "4208": {
      "op": "SWAP1"
    },
    "4209": {
      "jump": "o",
      "op": "JUMP"
    },
    "4210": {
      "op": "JUMPDEST"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4213": {
      "op": "DUP3"
    },
    "4214": {
      "op": "DUP3"
    },
    "4215": {
      "op": "LT"
    },
    "4216": {
      "op": "ISZERO"
    },
    "4217": {
      "op": "PUSH2",
      "value": "0x1084"
    },
    "4220": {
      "op": "JUMPI"
    },
    "4221": {
      "op": "PUSH2",
      "value": "0x1084"
    },
    "4224": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4227": {
      "jump": "i",
      "op": "JUMP"
    },
    "4228": {
      "op": "JUMPDEST"
    },
    "4229": {
      "op": "POP"
    },
    "4230": {
      "op": "SUB"
    },
    "4231": {
      "op": "SWAP1"
    },
    "4232": {
      "jump": "o",
      "op": "JUMP"
    },
    "4233": {
      "op": "JUMPDEST"
    },
    "4234": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4241": {
      "op": "SHL"
    },
    "4242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4244": {
      "op": "MSTORE"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4249": {
      "op": "MSTORE"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4254": {
      "op": "REVERT"
    },
    "4255": {
      "op": "JUMPDEST"
    },
    "4256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4260": {
      "op": "DUP3"
    },
    "4261": {
      "op": "DUP5"
    },
    "4262": {
      "op": "SUB"
    },
    "4263": {
      "op": "SLT"
    },
    "4264": {
      "op": "ISZERO"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4268": {
      "op": "JUMPI"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4271": {
      "op": "DUP1"
    },
    "4272": {
      "op": "REVERT"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "MLOAD"
    },
    "4276": {
      "op": "SWAP2"
    },
    "4277": {
      "op": "SWAP1"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "jump": "o",
      "op": "JUMP"
    },
    "4280": {
      "op": "JUMPDEST"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4283": {
      "op": "DUP2"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4286": {
      "op": "NOT"
    },
    "4287": {
      "op": "DIV"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "GT"
    },
    "4290": {
      "op": "DUP3"
    },
    "4291": {
      "op": "ISZERO"
    },
    "4292": {
      "op": "ISZERO"
    },
    "4293": {
      "op": "AND"
    },
    "4294": {
      "op": "ISZERO"
    },
    "4295": {
      "op": "PUSH2",
      "value": "0x10D2"
    },
    "4298": {
      "op": "JUMPI"
    },
    "4299": {
      "op": "PUSH2",
      "value": "0x10D2"
    },
    "4302": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4305": {
      "jump": "i",
      "op": "JUMP"
    },
    "4306": {
      "op": "JUMPDEST"
    },
    "4307": {
      "op": "POP"
    },
    "4308": {
      "op": "MUL"
    },
    "4309": {
      "op": "SWAP1"
    },
    "4310": {
      "jump": "o",
      "op": "JUMP"
    },
    "4311": {
      "op": "JUMPDEST"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4314": {
      "op": "DUP3"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4318": {
      "op": "JUMPI"
    },
    "4319": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4326": {
      "op": "SHL"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4329": {
      "op": "MSTORE"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4334": {
      "op": "MSTORE"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4339": {
      "op": "REVERT"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "op": "POP"
    },
    "4342": {
      "op": "DIV"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "jump": "o",
      "op": "JUMP"
    },
    "4345": {
      "op": "JUMPDEST"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4348": {
      "op": "DUP3"
    },
    "4349": {
      "op": "NOT"
    },
    "4350": {
      "op": "DUP3"
    },
    "4351": {
      "op": "GT"
    },
    "4352": {
      "op": "ISZERO"
    },
    "4353": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4356": {
      "op": "JUMPI"
    },
    "4357": {
      "op": "PUSH2",
      "value": "0x110C"
    },
    "4360": {
      "op": "PUSH2",
      "value": "0x101D"
    },
    "4363": {
      "jump": "i",
      "op": "JUMP"
    },
    "4364": {
      "op": "JUMPDEST"
    },
    "4365": {
      "op": "POP"
    },
    "4366": {
      "op": "ADD"
    },
    "4367": {
      "op": "SWAP1"
    },
    "4368": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "39c3ced16ecfd22047d383c73039905fa2799bbc",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity 0.8.12;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/ITokenPool.sol\";\nimport \"./TokenPool.sol\";\n\ncontract Registry {\n//Variables\naddress public owner;\naddress[] public tokenPools;\naddress public factory; \nmapping (address => address) public tokenToPool;\nmapping (address => address) public PoolToToken;\nmapping (address => uint256) public PoolToConcentration;\nuint256 constant PRECISION = 1e6;\n\n\n//Structs\nstruct Rebalancing {\n    address pool;\n    uint256 amt;\n}\n\n//Errors\nerror Error_Unauthorized();\n\n//Events\nevent ReservePoolDeployed(\n        address indexed poolAddress,\n        address tokenAddress\n    );\n\n//Modifier\nmodifier onlyOwner() {\n        if (msg.sender != owner) {\n            revert Error_Unauthorized();\n        }\n        _;\n    }\n//Constructor\n    constructor(){\n       owner = msg.sender;\n    }\n\n/**\n@dev function to set the factory address\n@param _factory (address of the factory)\n */\n    function setFactory(address _factory) external onlyOwner {\n        factory = _factory;\n    }\n\n/**\n@dev function to add TokenPool to tokenPool array and various mappings\n@param _tokenPool - address of tokenPool\n@param _token - address of token\n@param concentration - value of target concentration \n */\n    function addTokenPool(address _tokenPool, address _token, uint256 concentration) public {\n        require(msg.sender == factory, \"Only the factory can add token pools\");\n        tokenPools.push(_tokenPool);\n        tokenToPool[_token] = _tokenPool;\n        PoolToToken[_tokenPool] = _token;\n        PoolToConcentration[_tokenPool] = concentration;\n    }\n\n/** \n@dev function to update the target concentration of a specific pool \n@param _pool - address of tokenPool\n@param _target - value of target concentration\n */\n    function setTargetConcentration(address _pool, uint256 _target)\n        external\n        onlyOwner\n    {\n        PoolToConcentration[_pool] = _target;\n    }\n\n/**\n@dev function to get the total USD value of all assets in the protocol\niterates through all the pools to get their usd value and adds all the values together\n */\n\n    function getTotalAUMinUSD() public view returns (uint256) {\n        uint256 total = 0;\n        uint256 len = tokenPools.length;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];  \n            uint256 poolBalance = ITokenPool(pool).getPoolValue();\n            total += poolBalance;\n            unchecked{++i;}\n        }\n        return total;\n    }\n\n/** \n@dev function to get the pools to withdraw from and the amount to withdraw from each pool\n@param _amount - amount in usd to be withdrawn\n */\n    function tokensToWithdraw(uint256 _amount) public view returns (address[] memory, uint256[] memory){\n        (address[] memory pools, uint256[] memory tokenAmt) = checkWithdraw(_amount);\n        return (pools, tokenAmt);\n    }\n\n\n/**\n@dev function that finds which pools need to be rebalanced through a withdraw\n@param _amount - how much usd is to be withdrawn\nCalculates new aum and how much money has to be added/removed from pool to reach the target concentration\nChecks which pool have to have money removed (and how much) and adds them to the array \n */\n    function liquidityCheck(uint256 _amount) public view returns(Rebalancing[] memory)  {\n        uint len = tokenPools.length;\n        Rebalancing[] memory withdraw = new Rebalancing[](len);\n        uint aum = getTotalAUMinUSD();\n        uint newAUM = aum - _amount;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];\n            uint256 poolBalance = ITokenPool(pool).getPoolValue();\n            uint256 target = PoolToConcentration[pool];\n            uint256 poolTarget = newAUM*target/PRECISION;\n            if(poolBalance > poolTarget){\n                uint256 amt = poolBalance - poolTarget;\n                withdraw[i]=(Rebalancing({pool: pool, amt: amt}));\n            }\n            else{\n                withdraw[i]=(Rebalancing({pool: pool, amt: 0}));\n            }\n            unchecked{++i;}\n        }\n        return withdraw;\n        }\n    \n/**\n@dev function that takes the rebalancing array from liquidityCheck and returns the pools to withdraw from\nand how much to withdraw from each pool\nChecks total amount to be withdraw, finds pools with greatest concentration disparity and takes from those first\n@param _amount - amount to be withdrawn\n */\n    function checkWithdraw(uint _amount)public view returns (address[] memory, uint256[] memory){\n        Rebalancing[] memory withdraw = liquidityCheck(_amount);\n        uint256 len = withdraw.length;\n        address[] memory pool = new address[](len);\n        uint[] memory tokenamt = new uint[](len);\n        uint total = 0;\n        for (uint i; i<len;){\n            (Rebalancing memory max, uint index) = findMax(withdraw);\n            if ((total<_amount)&&(total + max.amt > _amount)){\n                tokenamt[i]= (_amount - total);\n                pool[i] = (max.pool);\n                total += tokenamt[i];\n            }\n            else if ((total<_amount)&&(total + max.amt <= _amount)){\n                tokenamt[i] = (max.amt);\n                pool[i] = (max.pool);\n                total += max.amt;\n                 withdraw[index].amt = 0;\n            }\n            unchecked{++i;}\n           }\n        return (pool, tokenamt);\n    }\n/**\n@dev helper function that finds which pool has to have the most money withdrawn\n@param _rebalance - rebalancing array \n */\n        function findMax (Rebalancing[] memory _rebalance) public pure returns (Rebalancing memory, uint256){ \n        uint256 len = _rebalance.length;\n        uint max = 0;\n        uint index = 0;\n        for (uint i = 0; i<len;){\n            if (max < _rebalance[i].amt){\n                max = _rebalance[i].amt;\n                index = i;\n            }\n            unchecked{++i;}\n        }\n        return (_rebalance[index],index);\n    }\n/**\n@dev function to get the current concentration of a specific pool\n@param pool - pool to fnd concentration of \n */\n\n    function getConcentration(address pool) view public returns(uint){\n            uint256 total = getTotalAUMinUSD();\n            uint256 poolBalance = ITokenPool(pool).getPoolValue();       \n            return total == 0 ? 0 :poolBalance*PRECISION/total;\n        }\n/**\n@dev function to get the concentration of certain pool when a certain amount is added to the pool\n@param pool - pool to find concentration of\n@param amount - amount to be added to pool\n */\n    function getNewConcentration (address pool, uint amount) view public returns (uint){    \n            uint256 total = getTotalAUMinUSD() + amount;\n            uint256 poolBalance = ITokenPool(pool).getPoolValue() + amount;       \n            return total == 0 ? 0 : poolBalance*PRECISION/total;\n            \n        }\n/**\n@dev checks if any pool has a concentration more than \"percent\" % above/below target concentration\n@param percent - percent above/below target concentration \n */\n    function checkDeposit(uint percent) public view returns (bool){\n        uint len = tokenPools.length;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];\n            uint currentConcentration = getConcentration(pool);\n            int diff = int(currentConcentration) - int(PoolToConcentration[pool]);\n            uint absdiff = abs(diff);\n            if (absdiff>percent) {\n                return (true);\n            }\n            unchecked{++i;}\n        }\n        return (false);\n    }\n    function abs (int256 x) public pure returns (uint){\n        if (x<0){\n            x = 0 - x;\n            return uint(x);\n        }\n        else{\n            return uint(x);\n        }\n    }\n    \n    function calcDeposit() public view returns (uint){\n        uint total = 0;\n        uint len = tokenPools.length;\n        for (uint i = 0; i < len;) {\n            address pool = tokenPools[i];\n            uint currentConcentration = getConcentration(pool);\n            int diff = int(currentConcentration) - int(PoolToConcentration[pool]);\n            uint absdiff = abs(diff);\n            total += absdiff;\n            unchecked {++i;}\n    } return total;}\n\n    }\n    \n\n",
  "sourceMap": "179:8007:5:-:0;;;850:47;;;;;;;;;-1:-1:-1;872:5:5;:18;;-1:-1:-1;;;;;;872:18:5;880:10;872:18;;;179:8007;;;;;;",
  "sourcePath": "contracts/Registry.sol",
  "type": "contract"
}